13 th decile
.65
.70
/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/torch/cuda/__init__.py:52: UserWarning: CUDA initialization: Found no NVIDIA driver on your system. Please check that you have an NVIDIA GPU and installed a driver from http://www.nvidia.com/Download/index.aspx (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729006826/work/c10/cuda/CUDAFunctions.cpp:100.)
  return torch._C._cuda_getDeviceCount() > 0
  0%|          | 0/811 [00:00<?, ?it/s]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  0%|          | 1/811 [00:02<27:23,  2.03s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  0%|          | 2/811 [00:03<25:35,  1.90s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  0%|          | 3/811 [00:05<24:23,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  0%|          | 4/811 [00:07<26:04,  1.94s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  1%|          | 5/811 [00:08<23:53,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  1%|          | 6/811 [00:10<22:12,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  1%|          | 7/811 [00:11<21:09,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  1%|          | 8/811 [00:13<20:21,  1.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  1%|          | 9/811 [00:14<20:19,  1.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  1%|          | 10/811 [00:15<19:59,  1.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  1%|▏         | 11/811 [00:17<18:58,  1.42s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  1%|▏         | 12/811 [00:20<28:03,  2.11s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  2%|▏         | 13/811 [00:22<25:22,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  2%|▏         | 14/811 [00:24<26:19,  1.98s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  2%|▏         | 15/811 [00:25<23:46,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  2%|▏         | 16/811 [00:27<22:01,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  2%|▏         | 17/811 [00:28<20:44,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  2%|▏         | 18/811 [00:29<19:56,  1.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  2%|▏         | 19/811 [00:32<23:22,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  2%|▏         | 20/811 [00:33<21:28,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  3%|▎         | 21/811 [00:35<21:14,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  3%|▎         | 22/811 [00:36<20:08,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  3%|▎         | 23/811 [00:38<19:46,  1.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  3%|▎         | 24/811 [00:39<19:13,  1.47s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  3%|▎         | 25/811 [00:40<18:47,  1.43s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  3%|▎         | 26/811 [00:42<18:36,  1.42s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  3%|▎         | 27/811 [00:44<22:40,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  3%|▎         | 28/811 [00:45<21:04,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  4%|▎         | 29/811 [00:47<19:58,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  4%|▎         | 30/811 [00:49<24:11,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  4%|▍         | 31/811 [00:51<22:26,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  4%|▍         | 32/811 [00:52<20:30,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  4%|▍         | 33/811 [00:53<19:51,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  4%|▍         | 34/811 [00:55<18:59,  1.47s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  4%|▍         | 35/811 [00:57<20:36,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  4%|▍         | 36/811 [00:58<20:13,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  5%|▍         | 37/811 [01:02<27:37,  2.14s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  5%|▍         | 38/811 [01:04<28:07,  2.18s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  5%|▍         | 39/811 [01:06<28:54,  2.25s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  5%|▍         | 40/811 [01:08<27:17,  2.12s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  5%|▌         | 41/811 [01:09<24:09,  1.88s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  5%|▌         | 42/811 [01:11<21:52,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  5%|▌         | 43/811 [01:12<21:42,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  5%|▌         | 44/811 [01:14<20:37,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  6%|▌         | 45/811 [01:15<19:47,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  6%|▌         | 46/811 [01:17<18:56,  1.49s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  6%|▌         | 47/811 [01:19<22:20,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  6%|▌         | 48/811 [01:20<20:54,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  6%|▌         | 49/811 [01:22<19:55,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  6%|▌         | 50/811 [01:23<19:25,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  6%|▋         | 51/811 [01:25<19:01,  1.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  6%|▋         | 52/811 [01:28<25:19,  2.00s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  7%|▋         | 53/811 [01:30<26:39,  2.11s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  7%|▋         | 54/811 [01:31<23:13,  1.84s/it]  7%|▋         | 55/811 [01:33<22:15,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  7%|▋         | 56/811 [01:34<20:42,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  7%|▋         | 57/811 [01:36<19:31,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  7%|▋         | 58/811 [01:37<18:32,  1.48s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  7%|▋         | 59/811 [01:38<18:27,  1.47s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  7%|▋         | 60/811 [01:40<17:39,  1.41s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  8%|▊         | 61/811 [01:41<17:48,  1.43s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  8%|▊         | 62/811 [01:43<18:37,  1.49s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  8%|▊         | 63/811 [01:44<17:40,  1.42s/it]  8%|▊         | 64/811 [01:45<17:29,  1.41s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  8%|▊         | 65/811 [01:47<17:28,  1.41s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  8%|▊         | 66/811 [01:48<17:35,  1.42s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  8%|▊         | 67/811 [01:50<17:30,  1.41s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  8%|▊         | 68/811 [01:51<17:14,  1.39s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▊         | 69/811 [01:52<17:09,  1.39s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▊         | 70/811 [01:54<17:02,  1.38s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▉         | 71/811 [01:55<17:44,  1.44s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▉         | 72/811 [01:57<17:11,  1.40s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▉         | 73/811 [02:00<23:17,  1.89s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▉         | 74/811 [02:01<21:20,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▉         | 75/811 [02:02<19:36,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▉         | 76/811 [02:04<20:21,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▉         | 77/811 [02:06<19:06,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 10%|▉         | 78/811 [02:07<18:26,  1.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 10%|▉         | 79/811 [02:08<17:46,  1.46s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 10%|▉         | 80/811 [02:10<17:37,  1.45s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 10%|▉         | 81/811 [02:11<17:30,  1.44s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 10%|█         | 82/811 [02:12<17:06,  1.41s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 10%|█         | 83/811 [02:14<18:09,  1.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 10%|█         | 84/811 [02:15<17:22,  1.43s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 10%|█         | 85/811 [02:17<16:57,  1.40s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 11%|█         | 86/811 [02:18<17:15,  1.43s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 11%|█         | 87/811 [02:20<17:30,  1.45s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 11%|█         | 88/811 [02:22<19:24,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 11%|█         | 89/811 [02:24<20:41,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 11%|█         | 90/811 [02:25<19:19,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 11%|█         | 91/811 [02:26<18:45,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 11%|█▏        | 92/811 [02:29<21:13,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 11%|█▏        | 93/811 [02:30<20:48,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 12%|█▏        | 94/811 [02:32<21:29,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 12%|█▏        | 95/811 [02:34<20:13,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 12%|█▏        | 96/811 [02:35<19:29,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 12%|█▏        | 97/811 [02:37<19:11,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 12%|█▏        | 98/811 [02:38<18:08,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 12%|█▏        | 99/811 [02:40<17:36,  1.48s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 12%|█▏        | 100/811 [02:41<16:36,  1.40s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 12%|█▏        | 101/811 [02:42<16:15,  1.37s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 13%|█▎        | 102/811 [02:43<16:15,  1.38s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 13%|█▎        | 103/811 [02:45<16:24,  1.39s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 13%|█▎        | 104/811 [02:46<16:23,  1.39s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 13%|█▎        | 105/811 [02:48<15:49,  1.35s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 13%|█▎        | 106/811 [02:49<16:25,  1.40s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 13%|█▎        | 107/811 [02:51<16:40,  1.42s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 13%|█▎        | 108/811 [02:52<16:19,  1.39s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 13%|█▎        | 109/811 [02:53<16:21,  1.40s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 14%|█▎        | 110/811 [02:55<16:33,  1.42s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 14%|█▎        | 111/811 [02:56<17:13,  1.48s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 14%|█▍        | 112/811 [02:58<18:15,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 14%|█▍        | 113/811 [03:00<17:47,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 14%|█▍        | 114/811 [03:01<17:28,  1.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 14%|█▍        | 115/811 [03:02<17:21,  1.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 14%|█▍        | 116/811 [03:04<16:27,  1.42s/it] 14%|█▍        | 117/811 [03:05<15:48,  1.37s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 15%|█▍        | 118/811 [03:06<15:16,  1.32s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 15%|█▍        | 119/811 [03:08<15:24,  1.34s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 15%|█▍        | 120/811 [03:09<16:07,  1.40s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 15%|█▍        | 121/811 [03:11<16:18,  1.42s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 15%|█▌        | 122/811 [03:12<16:19,  1.42s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 15%|█▌        | 123/811 [03:14<18:25,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 15%|█▌        | 124/811 [03:15<17:40,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 15%|█▌        | 125/811 [03:17<17:21,  1.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 16%|█▌        | 126/811 [03:19<20:42,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 16%|█▌        | 127/811 [03:21<19:45,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 16%|█▌        | 128/811 [03:23<19:23,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 16%|█▌        | 129/811 [03:24<18:21,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 16%|█▌        | 130/811 [03:25<17:31,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 16%|█▌        | 131/811 [03:27<17:49,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 16%|█▋        | 132/811 [03:29<17:43,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 16%|█▋        | 133/811 [03:30<16:41,  1.48s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 17%|█▋        | 134/811 [03:33<21:56,  1.94s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 17%|█▋        | 135/811 [03:35<21:11,  1.88s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 17%|█▋        | 136/811 [03:36<19:33,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 17%|█▋        | 137/811 [03:37<18:27,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 17%|█▋        | 138/811 [03:39<17:22,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 17%|█▋        | 139/811 [03:40<16:47,  1.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 17%|█▋        | 140/811 [03:41<16:19,  1.46s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 17%|█▋        | 141/811 [03:43<16:03,  1.44s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 142/811 [03:44<16:15,  1.46s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 143/811 [03:46<17:04,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 144/811 [03:47<16:34,  1.49s/it] 18%|█▊        | 145/811 [03:49<16:23,  1.48s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 146/811 [03:50<16:06,  1.45s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 147/811 [03:52<15:57,  1.44s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 148/811 [03:53<15:58,  1.45s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 149/811 [03:54<15:28,  1.40s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 150/811 [03:56<15:37,  1.42s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 19%|█▊        | 151/811 [03:57<14:22,  1.31s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 19%|█▊        | 152/811 [03:58<14:46,  1.35s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 19%|█▉        | 153/811 [04:00<14:48,  1.35s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 19%|█▉        | 154/811 [04:01<15:38,  1.43s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 19%|█▉        | 155/811 [04:03<16:28,  1.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 19%|█▉        | 156/811 [04:05<17:52,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 19%|█▉        | 157/811 [04:07<19:20,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 19%|█▉        | 158/811 [04:09<18:51,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 20%|█▉        | 159/811 [04:10<18:33,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 20%|█▉        | 160/811 [04:12<18:55,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 20%|█▉        | 161/811 [04:14<17:43,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 20%|█▉        | 162/811 [04:15<17:54,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 20%|██        | 163/811 [04:17<17:13,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 20%|██        | 164/811 [04:18<16:50,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 20%|██        | 165/811 [04:20<18:26,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 20%|██        | 166/811 [04:22<17:55,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 21%|██        | 167/811 [04:24<18:41,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 21%|██        | 168/811 [04:25<17:52,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 21%|██        | 169/811 [04:27<17:37,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 21%|██        | 170/811 [04:29<18:14,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 21%|██        | 171/811 [04:30<17:20,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 21%|██        | 172/811 [04:32<16:50,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 21%|██▏       | 173/811 [04:33<16:28,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 21%|██▏       | 174/811 [04:35<16:21,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 22%|██▏       | 175/811 [04:36<17:12,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 22%|██▏       | 176/811 [04:38<16:47,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 22%|██▏       | 177/811 [04:40<17:45,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 22%|██▏       | 178/811 [04:42<18:13,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 22%|██▏       | 179/811 [04:44<19:21,  1.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 22%|██▏       | 180/811 [04:45<18:23,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 22%|██▏       | 181/811 [04:47<17:43,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 22%|██▏       | 182/811 [04:48<17:20,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 23%|██▎       | 183/811 [04:50<16:26,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 23%|██▎       | 184/811 [04:52<18:23,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 23%|██▎       | 185/811 [04:54<17:29,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 23%|██▎       | 186/811 [04:55<17:25,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 23%|██▎       | 187/811 [04:57<16:54,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 23%|██▎       | 188/811 [04:59<17:27,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 23%|██▎       | 189/811 [05:01<19:18,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 23%|██▎       | 190/811 [05:02<18:31,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 24%|██▎       | 191/811 [05:04<17:46,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 24%|██▎       | 192/811 [05:05<16:43,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 24%|██▍       | 193/811 [05:07<15:53,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 24%|██▍       | 194/811 [05:08<16:20,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 24%|██▍       | 195/811 [05:10<16:15,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 24%|██▍       | 196/811 [05:12<17:32,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 24%|██▍       | 197/811 [05:14<17:19,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 24%|██▍       | 198/811 [05:16<18:21,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▍       | 199/811 [05:18<18:30,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▍       | 200/811 [05:19<18:14,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▍       | 201/811 [05:21<17:13,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▍       | 202/811 [05:22<17:21,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▌       | 203/811 [05:24<16:48,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▌       | 204/811 [05:27<21:21,  2.11s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▌       | 205/811 [05:29<20:22,  2.02s/it] 25%|██▌       | 206/811 [05:31<19:39,  1.95s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 26%|██▌       | 207/811 [05:33<19:13,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 26%|██▌       | 208/811 [05:35<20:00,  1.99s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 26%|██▌       | 209/811 [05:37<19:24,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 26%|██▌       | 210/811 [05:39<19:38,  1.96s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 26%|██▌       | 211/811 [05:41<20:45,  2.08s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 26%|██▌       | 212/811 [05:43<19:39,  1.97s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 26%|██▋       | 213/811 [05:45<19:11,  1.92s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 26%|██▋       | 214/811 [05:46<17:58,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 215/811 [05:48<17:56,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 216/811 [05:51<21:59,  2.22s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 217/811 [05:53<20:04,  2.03s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 218/811 [05:55<20:06,  2.03s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 219/811 [05:56<19:23,  1.97s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 220/811 [05:58<18:45,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 221/811 [06:00<17:47,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 222/811 [06:02<17:29,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 223/811 [06:03<17:41,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 28%|██▊       | 224/811 [06:05<16:36,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 28%|██▊       | 225/811 [06:07<16:39,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 28%|██▊       | 226/811 [06:08<16:40,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 28%|██▊       | 227/811 [06:10<16:10,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 28%|██▊       | 228/811 [06:12<16:26,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 28%|██▊       | 229/811 [06:14<19:02,  1.96s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 28%|██▊       | 230/811 [06:16<17:33,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 28%|██▊       | 231/811 [06:17<16:26,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 29%|██▊       | 232/811 [06:20<19:18,  2.00s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 29%|██▊       | 233/811 [06:21<18:18,  1.90s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 29%|██▉       | 234/811 [06:23<18:35,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 29%|██▉       | 235/811 [06:25<17:57,  1.87s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 29%|██▉       | 236/811 [06:27<17:48,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 29%|██▉       | 237/811 [06:29<16:52,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 29%|██▉       | 238/811 [06:30<16:22,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 29%|██▉       | 239/811 [06:32<16:25,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 30%|██▉       | 240/811 [06:33<15:59,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 30%|██▉       | 241/811 [06:35<15:23,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 30%|██▉       | 242/811 [06:36<14:59,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 30%|██▉       | 243/811 [06:38<15:27,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 30%|███       | 244/811 [06:40<15:44,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 30%|███       | 245/811 [06:42<15:39,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 30%|███       | 246/811 [06:43<15:21,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 30%|███       | 247/811 [06:45<15:21,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 31%|███       | 248/811 [06:46<15:05,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 31%|███       | 249/811 [06:48<14:49,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 31%|███       | 250/811 [06:49<14:32,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 31%|███       | 251/811 [06:51<14:20,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 31%|███       | 252/811 [06:52<14:35,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 31%|███       | 253/811 [06:54<15:07,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 31%|███▏      | 254/811 [06:56<15:00,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 31%|███▏      | 255/811 [06:58<15:07,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 32%|███▏      | 256/811 [06:59<15:01,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 32%|███▏      | 257/811 [07:08<35:42,  3.87s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 32%|███▏      | 258/811 [07:10<29:27,  3.20s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 32%|███▏      | 259/811 [07:12<25:20,  2.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 32%|███▏      | 260/811 [07:14<24:16,  2.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 32%|███▏      | 261/811 [07:16<22:33,  2.46s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 32%|███▏      | 262/811 [07:18<20:19,  2.22s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 32%|███▏      | 263/811 [07:19<17:36,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 33%|███▎      | 264/811 [07:21<17:36,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 33%|███▎      | 265/811 [07:22<15:59,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 33%|███▎      | 266/811 [07:24<15:14,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 33%|███▎      | 267/811 [07:25<14:56,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 33%|███▎      | 268/811 [07:27<14:57,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 33%|███▎      | 269/811 [07:29<15:06,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 33%|███▎      | 270/811 [07:31<15:53,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 33%|███▎      | 271/811 [07:32<15:39,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 34%|███▎      | 272/811 [07:35<17:27,  1.94s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 34%|███▎      | 273/811 [07:36<16:42,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 34%|███▍      | 274/811 [07:38<15:38,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 34%|███▍      | 275/811 [07:39<14:51,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 34%|███▍      | 276/811 [07:41<14:51,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 34%|███▍      | 277/811 [07:43<14:22,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 34%|███▍      | 278/811 [07:44<14:14,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 34%|███▍      | 279/811 [07:46<13:50,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 35%|███▍      | 280/811 [07:47<13:38,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 35%|███▍      | 281/811 [07:49<14:31,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 35%|███▍      | 282/811 [07:50<14:13,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 35%|███▍      | 283/811 [07:52<14:33,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 35%|███▌      | 284/811 [07:54<13:58,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 35%|███▌      | 285/811 [07:55<14:25,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 35%|███▌      | 286/811 [07:57<14:16,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 35%|███▌      | 287/811 [07:59<14:10,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▌      | 288/811 [08:00<14:03,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▌      | 289/811 [08:02<13:50,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▌      | 290/811 [08:04<14:23,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▌      | 291/811 [08:05<14:46,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▌      | 292/811 [08:08<17:03,  1.97s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▌      | 293/811 [08:10<16:41,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▋      | 294/811 [08:11<15:53,  1.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▋      | 295/811 [08:14<18:10,  2.11s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▋      | 296/811 [08:16<17:01,  1.98s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 37%|███▋      | 297/811 [08:19<18:46,  2.19s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 37%|███▋      | 298/811 [08:20<17:26,  2.04s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 37%|███▋      | 299/811 [08:22<16:14,  1.90s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 37%|███▋      | 300/811 [08:24<15:47,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 37%|███▋      | 301/811 [08:25<14:38,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 37%|███▋      | 302/811 [08:27<15:40,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 37%|███▋      | 303/811 [08:29<15:06,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 37%|███▋      | 304/811 [08:30<14:37,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 38%|███▊      | 305/811 [08:32<14:10,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 38%|███▊      | 306/811 [08:33<13:44,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 38%|███▊      | 307/811 [08:35<13:16,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 38%|███▊      | 308/811 [08:37<13:33,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 38%|███▊      | 309/811 [08:39<15:01,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 38%|███▊      | 310/811 [08:41<15:13,  1.82s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 38%|███▊      | 311/811 [08:42<14:11,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 38%|███▊      | 312/811 [08:45<16:03,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 39%|███▊      | 313/811 [08:48<19:39,  2.37s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 39%|███▊      | 314/811 [08:49<17:19,  2.09s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 39%|███▉      | 315/811 [08:51<15:57,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 39%|███▉      | 316/811 [08:53<15:51,  1.92s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 39%|███▉      | 317/811 [08:54<14:47,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 39%|███▉      | 318/811 [08:56<14:28,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 39%|███▉      | 319/811 [08:58<14:00,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 39%|███▉      | 320/811 [09:00<14:17,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 40%|███▉      | 321/811 [09:01<14:02,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 40%|███▉      | 322/811 [09:03<14:10,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 40%|███▉      | 323/811 [09:05<13:46,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 40%|███▉      | 324/811 [09:06<13:27,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 40%|████      | 325/811 [09:08<13:49,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 40%|████      | 326/811 [09:10<14:59,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 40%|████      | 327/811 [09:12<14:39,  1.82s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 40%|████      | 328/811 [09:15<17:11,  2.14s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 41%|████      | 329/811 [09:17<16:27,  2.05s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 41%|████      | 330/811 [09:18<15:30,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 41%|████      | 331/811 [09:26<28:54,  3.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 41%|████      | 332/811 [09:28<24:24,  3.06s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 41%|████      | 333/811 [09:29<20:33,  2.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 41%|████      | 334/811 [09:31<19:08,  2.41s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 41%|████▏     | 335/811 [09:33<17:37,  2.22s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 41%|████▏     | 336/811 [09:35<17:00,  2.15s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 42%|████▏     | 337/811 [09:36<15:47,  2.00s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 42%|████▏     | 338/811 [09:38<15:14,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 42%|████▏     | 339/811 [09:40<15:03,  1.92s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 42%|████▏     | 340/811 [09:42<13:59,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 42%|████▏     | 341/811 [09:43<14:08,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 42%|████▏     | 342/811 [09:45<13:16,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 42%|████▏     | 343/811 [09:47<13:27,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 42%|████▏     | 344/811 [09:48<13:15,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 43%|████▎     | 345/811 [09:50<14:21,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 43%|████▎     | 346/811 [09:52<13:16,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 43%|████▎     | 347/811 [09:54<13:04,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 43%|████▎     | 348/811 [09:55<12:41,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 43%|████▎     | 349/811 [09:57<12:37,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 43%|████▎     | 350/811 [09:58<12:20,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 43%|████▎     | 351/811 [10:00<12:42,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 43%|████▎     | 352/811 [10:02<13:19,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 44%|████▎     | 353/811 [10:03<12:39,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 44%|████▎     | 354/811 [10:08<19:05,  2.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 44%|████▍     | 355/811 [10:10<17:45,  2.34s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 44%|████▍     | 356/811 [10:12<16:52,  2.23s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 44%|████▍     | 357/811 [10:13<15:18,  2.02s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 44%|████▍     | 358/811 [10:16<15:43,  2.08s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 44%|████▍     | 359/811 [10:17<14:36,  1.94s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 44%|████▍     | 360/811 [10:19<13:31,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▍     | 361/811 [10:20<13:04,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▍     | 362/811 [10:22<12:41,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▍     | 363/811 [10:23<11:50,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▍     | 364/811 [10:25<12:35,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▌     | 365/811 [10:27<12:53,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▌     | 366/811 [10:29<12:35,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▌     | 367/811 [10:30<12:21,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▌     | 368/811 [10:32<12:13,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▌     | 369/811 [10:33<12:15,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 46%|████▌     | 370/811 [10:35<11:44,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 46%|████▌     | 371/811 [10:36<11:29,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Trying to load from /users/rhydian/self-supervised-project/model_weights/SSECEncodersBothBoth
==> Resuming model trained for 106 epochs...
Trying to load from ../model_weights/angle_regressor4
==> Resuming model trained for 7 epochs...
5912495_20201_2_0,nnv3fp4icz,-4.086149408565739,-103.11439750066342,-19.441645778225876

3378779_20201_2_0,nnv9gn4icz,-1.0204812469470292,-75.24307284153554,-26.89314435885963

1047789_20201_2_0,nnvoko4icz,0.8816188889595135,-70.14322172347684,-35.02861667723127

4192952_20201_2_0,nnxyhp4icz,2.5009295999090866,-99.14399654911446,-65.9991049708795

4201043_20201_2_0,nnzlan4icz,-0.7697664649804217,-114.71764766431389,-27.213741981762013

4734371_20201_2_0,no0cbo4icz,3.349428174058605,-89.98449354879824,-55.91543735081976

3398888_20201_2_0,no2fhp4icz,-5.729012980843302,-129.76158731377456,-14.46664901287113

5307717_20201_2_0,no4lko4icz,-1.7029019621435035,-112.45268210854803,-28.913096006313765

3161012_20201_2_0,no6mjo4icz,-1.397615536036796,-80.14103497880288,-34.27515453356321

3880019_20201_2_0,noaq8p4icz,3.4954358595400983,-95.481058052067,-67.12901956357891

4798869_20201_2_0,nod7wn4icz,-1.137882295507646,-94.71347900552522,-35.07256030162675

3906522_20201_2_0,nof5xn4icz,-0.31061711895234934,-110.94351207099376,-29.03539466732849

1970241_20201_2_0,nojc6o4icz,0.05039867975649034,-74.83226471494643,-34.32593300656055

5032021_20201_2_0,nol7en4icz,-4.370160683772763,-129.79306424430035,-15.19221800416895

2328239_20201_2_0,nowhqn4icz,1.7529275296053752,-143.03177256277502,-39.46502450140284

2300808_20201_2_0,noxdtn4icz,2.6831226618935675,-84.45726658703433,-49.91889663483265

1430640_20201_2_0,noz5lo4icz,-0.6914456068848488,-95.5180890587007,-36.806660155390205

3217685_20201_2_0,np1x6o4icz,1.3407601265750313,-85.21852250395875,-44.57908262612196

5351596_20201_2_0,np4a9p4icz,0.8328805075083627,-84.75717702870548,-33.841621455964145

3027158_20201_2_0,np4j7o4icz,-1.8407339245419205,-101.75467854374929,-12.565101569514539

4179308_20201_2_0,np9q0o4icz,4.278094155271176,-59.6712536128849,-56.52608792242066

3921277_20201_2_0,npkrnn4icz,0.39799038191741537,-75.48071740350494,-37.03470404231419

1812130_20201_2_0,npmr4p4icz,-0.5907126044852895,-60.78383859787192,-20.333974943419193

2148775_20201_2_0,npqpco4icz,1.0152794382534336,-93.2133343759923,-41.96747721316149

3678281_20201_2_0,npsiap4icz,0.031152194456822355,-130.9188834626079,-49.54918564019415

4766591_20201_2_0,npslqn4icz,1.8271582502804335,-93.05871576980454,-56.022159759762346

5914797_20201_2_0,npt17n4icz,5.831198819731003,-93.54097238163172,-64.2336459377569

5995456_20201_2_0,npy1ap4icz,0.7399084690444683,-120.48773781623623,-45.1377053135225

5958610_20201_2_0,npzl4p4icz,1.067325696633329,-112.47671537208882,-33.62225316483912

4754664_20201_2_0,nq785p4icz,0.0747579292538874,-58.420791899515734,-35.27424642919462

5910866_20201_2_0,nq7fep4icz,2.085376739640364,-85.47984516619113,-48.02198672399787

4066850_20201_2_0,nq9x3o4icz,-0.30601697896528557,-85.0989612663607,-36.6166366721468

3983859_20201_2_0,nqbq7n4icz,-1.4800433219658142,-136.75748499746416,-26.345108607332207

5608626_20201_2_0,nqfzho4icz,2.338154740921011,-95.78291015148031,-42.747393345709696

5147863_20201_2_0,nqgvpn4icz,-0.8101104958891587,-146.71357550865284,-35.756003876519486

1452204_20201_2_0,nqhtvo4icz,2.4931813203871815,-69.51153018389394,-49.59658827474401

3567903_20201_2_0,nqip4p4icz,1.1675134432241099,-71.06495600252089,-44.800218242446746

4572653_20201_2_0,nqk3cn4icz,-0.03335763944429212,-133.29197663566927,-31.93128075071479

3742739_20201_2_0,nqtq2p4icz,-2.6928560182189574,-82.92040311746459,-3.9643113241263137

5351106_20201_2_0,nqycjo4icz,-1.6313956144392183,-74.25730055636683,-41.98163375984544

2472341_20201_2_0,nqzlao4icz,-1.2811278062972788,-106.16284602972607,-27.63168161879304

3196206_20201_2_0,nr0tvo4icz,0.16683654879844217,-107.74632410642442,-42.66835434729623

2174239_20201_2_0,nr2kzo4icz,3.1316196600204256,-83.47576195111617,-64.3928773448261

1350894_20201_2_0,nr525o4icz,0.23944786560513423,-91.10967092591267,-44.434498553008

1642857_20201_2_0,nr8ubn4icz,-4.1695754779918754,-153.80533182370232,-8.987734915989819

2473581_20201_2_0,nra63p4icz,-1.1521401354612049,-136.11631650125236,-30.17829013084112

2224827_20201_2_0,nrautn4icz,0.104720743641356,-132.32998848330894,-33.55584880170345

3057112_20201_2_0,nrefap4icz,-2.823049796163915,-96.50180313175278,-38.405445543860566

2588623_20201_2_0,nrg67p4icz,-1.2468213948345095,-99.05638395870363,-34.076339772526524

1497857_20201_2_0,nri6po4icz,-2.2363750617106115,-82.1641154574319,-16.76688860650181

2493770_20201_2_0,nrl5hp4icz,-2.254926602562962,-70.36729566266234,-26.817938153217725

5068007_20201_2_0,nrlisn4icz,-2.1674524503094506,-95.41504487843665,-24.326958148019926

3094353_20201_2_0,qdf4vn4icz,0.3575933547139237,-108.0834347782052,-29.20970164577473

4532257_20201_2_0,nrn4ko4icz,1.4592351214595487,-86.66366360811062,-33.6226435032207

1965569_20201_2_0,nrowvn4icz,-31.280471697043403,-4.197115310798694,314.52667035407865

4592144_20201_2_0,nrv0rn4icz,-2.8567578831072136,-132.47541947989248,-25.56773483500814

2411931_20201_2_0,nrypco4icz,-1.2001730338603431,-92.10035881022591,-22.517484892004205

3760382_20201_2_0,nrys9p4icz,1.479419568476214,-131.39460158973418,-77.99741403149118

1119641_20201_2_0,nrzajn4icz,-1.1499429455899282,-120.31251940700784,-28.188601944309056

1357454_20201_2_0,ns35fo4icz,-1.8722143854097113,-106.2627481765191,-18.438470744621583

4776054_20201_2_0,ns5jcp4icz,-3.1302515861876485,-79.58613979844165,-40.04772952509809

4642223_20201_2_0,ns5ton4icz,0.3048858148132053,-86.22689249011898,-62.528137235686984

5299014_20201_2_0,nsc95o4icz,-0.06741974905191413,-83.9578747057175,-32.991194318000595

1745907_20201_2_0,nsem8p4icz,129.65319594071912,439.6948625328541,-186.70481124596566

3014155_20201_2_0,nsg3cn4icz,0.6965674730034868,-98.27826354803327,-42.698192047011645

6010637_20201_2_0,nshymo4icz,-0.22687087283510474,-79.42928483693652,-28.111270963468044

1384784_20201_2_0,nsjidp4icz,-1.2645228363688694,-96.84515861164815,-35.239752723096785

5994103_20201_2_0,nsm8dp4icz,2.6793514004890313,-59.40150034977313,-55.502444886458974

5185891_20201_2_0,nsmyvo4icz,-3.407460640789624,-92.46172259539912,-12.376024437906722

5079654_20201_2_0,nspajn4icz,-1.4869581583491214,-94.51171780991154,-35.81469484336665

4701226_20201_2_0,nssv5p4icz,-0.9804908499499868,-108.05856906177371,-28.91586238879384

4794540_20201_2_0,nswkeo4icz,-0.3554725399241517,-110.79918742426486,-20.37844906066384

5627537_20201_2_0,nt1d8p4icz,33.66279858031768,81.37392183561343,-232.6126081024903

5815615_20201_2_0,nt8fno4icz,0.7864308572412936,-67.1765873556522,-28.851150185849207

1184503_20201_2_0,nt8hio4icz,1.714413620202938,-86.77499090563384,-44.90715449806507

4623332_20201_2_0,nt9ugp4icz,-3.0880150654889578,-75.88693727353984,-4.98261193718821

2629917_20201_2_0,ntf05o4icz,3.2758840984208257,-101.70648301079942,-42.10093047533374

1005612_20201_2_0,ntf32p4icz,0.12152812446863105,-74.70983458421603,-26.476782630172593

3694711_20201_2_0,ntf8io4icz,0.7695352114646357,-101.75743977243542,-42.37917105503912

2105091_20201_2_0,ntfthp4icz,-1.6387266458405865,-72.72380536590387,-22.958928429818513

5070822_20201_2_0,ntkdcp4icz,-0.17641068684328115,-103.75950079764362,-25.328364422847145

4921753_20201_2_0,ntlpxn4icz,1.3358057872435285,-51.629157520335184,-41.51766936973493

4665229_20201_2_0,ntoc2p4icz,-5.361483238812841,-77.12788102751364,-2.6667824735276326

4965111_20201_2_0,ntpzdn4icz,0.7224751932144027,-97.42103243847288,-32.780701949791634

3914857_20201_2_0,ntq0ro4icz,0.33877255120448246,-81.2901245502884,-36.299573984623805

3380143_20201_2_0,ntrjmo4icz,1.7975372043010922,-102.73488810720127,-52.91607334632167

2150695_20201_2_0,nts2go4icz,-0.27963710940499864,-169.21600194152856,-25.417398989255332

4692628_20201_2_0,ntscln4icz,-1.0126666798445048,-106.72097950689584,-42.04676905317119

1256529_20201_2_0,ntu2go4icz,-0.8767383558330175,-122.8822210455983,-23.669739151181886

2215450_20201_2_0,ntu7eo4icz,-3.8302726858465963,-98.46030117229981,-8.827869067403796

1075927_20201_2_0,nu0gxn4icz,-2.216687752786434,-89.10077126483085,-29.39436801647797

3733871_20201_2_0,nu8avo4icz,2.008646599386202,-45.549077815139924,-50.67341382013959

3613891_20201_2_0,nuoxso4icz,-0.5238547656502297,-64.53849197766766,-13.59907386131556

2784427_20201_2_0,nupzep4icz,-1.8478067507516838,-88.86145872982871,-37.14398717352901

2808783_20201_2_0,nurq9o4icz,0.9002397483772854,-89.00459052596446,-43.235799491380334

1262343_20201_2_0,nuz1cp4icz,1.2612434688643719,-119.95290411694023,-59.73085194511913

2329260_20201_2_0,nuzbyo4icz,2.1063830371159145,-46.59793435363724,-40.83576211122231

1480567_20201_2_0,nuzn7n4icz,5.066698784956619,-101.77303782046579,-69.87661049731456

3250851_20201_2_0,nv0akn4icz,-4.547643118810813,-155.1608896184077,-15.328942914204305

4442264_20201_2_0,nv6cvn4icz,0.25949921906201945,-95.86535170192803,-51.197806610235276

1288079_20201_2_0,nva9hp4icz,1.4155333641952845,-104.4737436504486,-49.85513695854753

3660982_20201_2_0,nvdken4icz,-1.3887159438583465,-87.22355278082446,-25.31067161403432

4773945_20201_2_0,nvdquo4icz,2.9712064479751694,-61.691347321056384,-53.90228110540443

2584779_20201_2_0,nvednn4icz,0.2838406487375134,-66.82746989581247,-49.16037042775906

4967953_20201_2_0,nvfqlo4icz,0.3937094799065797,-89.78069779633495,-36.218858749496945

3014917_20201_2_0,nvhrdp4icz,4.39553726385228,-86.00991868904833,-61.82957223835522

5522642_20201_2_0,nvjmun4icz,-2.667358687179623,-105.94858750442819,-21.044806206903232

3006491_20201_2_0,nvogzo4icz,2.305003150514486,-104.23201331999525,-46.31638162292958

4057970_20201_2_0,nvpgen4icz,-2.4130387389304353,-116.70439769764198,-9.835163441627017

5315478_20201_2_0,nvvcoo4icz,-0.9077834863555629,-94.54096251454843,-34.84520999984365

1025962_20201_2_0,nvxoko4icz,2.940153740881179,-86.61136755963398,-49.17518931251311

2528630_20201_2_0,nvz09p4icz,-1.866012631387669,-73.28841704149798,-30.021113711245377

1034203_20201_2_0,nvz6bp4icz,0.24968875637246557,-107.84963089566295,-53.187616516822374

4036473_20201_2_0,nw3t6o4icz,1.0064989106953472,-85.82253318166721,-51.77339935058254

2808054_20201_2_0,nw6c5p4icz,-0.7465975428592154,-76.93664758833006,-50.98367800780582

3839320_20201_2_0,nwdo3o4icz,1.0882121537300395,-126.33299243762883,-49.67390350499747

3652016_20201_2_0,nwkc4o4icz,151.59315905642055,505.35995001115924,-203.30221087400622

4959306_20201_2_0,nwlxlo4icz,-1.564757597571641,-116.49894004052587,-16.422564553401642

5813186_20201_2_0,nwmh8n4icz,-0.08546278118324688,-97.5932217585482,-46.093354230318624

5126089_20201_2_0,nwnato4icz,-2.9860507563725247,-59.797056409677964,-27.638684569556773

1690827_20201_2_0,nwpnzo4icz,-12.624922074674458,-70.72399242274781,15.316683754725887

5757779_20201_2_0,nwqcnn4icz,-3.1658797713986675,-109.53311379591187,-19.091531058649153

5827740_20201_2_0,nwxlfp4icz,1.9973071340923099,-57.42579287894242,-47.03603784277672

1644262_20201_2_0,nwz68o4icz,-2.9504928421799335,-135.66937798433725,-15.1046373215908

4385802_20201_2_0,nx1lrn4icz,1.142511327909648,-113.30860607718543,-36.531551974938225

5184761_20201_2_0,nx8xoo4icz,-1.911551884810036,-77.89526276243544,-12.670350631645789

3867633_20201_2_0,nxaoun4icz,0.4751147666568329,-125.57383602845772,-24.282046838789967

2503487_20201_2_0,nxdgon4icz,1.208081057845496,-89.0491028508437,-52.9614028237867

2044247_20201_2_0,nxep0p4icz,1.8393094792320601,-58.480416781647364,-35.21081532385847

3345689_20201_2_0,nxforn4icz,-0.8777815608564262,-106.32833612410602,-37.83058474359353

4525493_20201_2_0,nxic4p4icz,1.6396962196465703,-78.06913097476448,-40.1061517014148

3893036_20201_2_0,nxmfio4icz,1.2256702314923476,-67.46069098574714,-38.72377244490616

5256270_20201_2_0,nxqfvn4icz,1.4884846186163936,-110.09947488826154,-45.0875309701746

3364607_20201_2_0,nxrcbp4icz,-0.5962021186413495,-91.22414252468315,-31.525024543430533

4974644_20201_2_0,nxw8fo4icz,0.4694339709513966,-114.59129335512205,-37.033526517413804

2615665_20201_2_0,nxwklo4icz,-1.8019288894169805,-63.67489081055339,-57.856875699214584

2806669_20201_2_0,ny3j7p4icz,2.360909659230745,-55.717650191093014,-52.53906006209631

1418657_20201_2_0,ny6nvn4icz,-1.175506817364604,-101.28567286469786,-26.432725779885402

5528834_20201_2_0,nyaq9n4icz,-4.310428315530074,-136.39870783877763,-10.519896421777887

5976569_20201_2_0,nyb23o4icz,-2.3439274754313546,-75.55428833980093,-25.208017419104294

1174247_20201_2_0,nyp9co4icz,0.527146732544251,-108.11341674143983,-32.584243852837744

3672891_20201_2_0,nyphfo4icz,8.686346591755724,-75.26919964570143,-77.60969445411334

3533011_20201_2_0,nyq3cp4icz,-1.0417547197120007,-78.85155546959572,-37.75165963215906

5570714_20201_2_0,nyrwbo4icz,2.783155816566721,-92.10493110578858,-41.20682180543031

5830685_20201_2_0,nyulfp4icz,-75.71621406607689,238.5442713649108,353.4026461612252

1233644_20201_2_0,nyw0go4icz,0.3419815447460273,-114.79853491071316,-43.415986248784975

2029128_20201_2_0,nyxfko4icz,-1.4808984927455981,-98.49491169966913,-32.186941793165445

5273727_20201_2_0,nyxoip4icz,-1.1911744661262247,-80.19784822741974,-43.166657273096504

4740619_20201_2_0,nz8vcn4icz,4.383460037743581,-117.23279818910578,-69.07414218360674

5509166_20201_2_0,nzam9n4icz,-0.21138284314869737,-114.23815791714622,-30.232464278925107

3488451_20201_2_0,nzb1vn4icz,-4.403497787535578,-92.56121744723748,-20.907804513110335

2471522_20201_2_0,nzcw7p4icz,1.5097105432907978,-110.16958254942048,-39.86159674283962

3186911_20201_2_0,nzdeon4icz,2.113505198140345,-89.21014191297758,-41.22628482023137

1406991_20201_2_0,nzdk1o4icz,0.9205698213831102,-114.88242622033485,-43.033436462275375

5425266_20201_2_0,nznp8p4icz,3.2867023248726746,-91.36700641993662,-29.903594685199124

3153932_20201_2_0,o020jp4icz,1.5294595078019169,-128.1808892337303,-41.118644148505496

3828555_20201_2_0,o03z8p4icz,1.1640401775902411,-93.85511344563997,-36.7887079289074

4207647_20201_2_0,o06qhp4icz,7.210737895030046,-59.24895091394444,-60.32644991764779

3971167_20201_2_0,o0a4cp4icz,1.5903850929508694,-111.54535326874631,-70.66992889673041

1749171_20201_2_0,o0b4in4icz,2.413389255111004,-75.89642957619935,-42.85648874586988

3100684_20201_2_0,o0fafn4icz,3.2660032126217646,-121.4291060226293,-42.37886703761774

3305520_20201_2_0,o0ifgp4icz,-1.450916132937657,-77.35717240663803,-29.12457900317358

3533863_20201_2_0,o0kqcp4icz,2.192942862687004,-71.64164835681083,-52.83972518878653

3877962_20201_2_0,o0l7jn4icz,5.416656372371442,-66.96300408599865,-59.64417471774637

3350138_20201_2_0,o0p4ko4icz,2.984735488116281,-99.55856042925373,-51.108702987346916

5269254_20201_2_0,o0prsn4icz,0.026473886268557106,-127.3968138679756,-27.543405692534122

3053856_20201_2_0,o0q4po4icz,1.2321942139297068,-89.73995780608521,-46.96486831372489

2771662_20201_2_0,o0r9ep4icz,-1.8144550311487133,-124.42242326459399,-17.939836568371703

2556402_20201_2_0,o0vcjn4icz,-3.6667584609964634,-100.55571684530463,-30.939734719924104

2484470_20201_2_0,o0vjqo4icz,0.9929599143072703,-59.5802981746273,-40.068360452972954

2729071_20201_2_0,o0vzin4icz,1.0987517410821066,-131.19022486308072,-40.55528455050057

3450962_20201_2_0,o0xezo4icz,-1.6519531022266574,-117.46473729987906,-30.54450106103141

2257197_20201_2_0,o0zk3p4icz,1.9325882310238305,-74.80729226868058,-48.3343671403009

5866175_20201_2_0,o1165o4icz,1.4797660556072876,-59.35800453419807,-51.40101989465599

1747201_20201_2_0,o11gip4icz,-0.7569246802927047,-95.58593873230495,-37.96746379265139

3849230_20201_2_0,o1289o4icz,2.384262453635588,-74.37308241605791,-33.910873418823385

4683264_20201_2_0,o16qrn4icz,-0.10424710535242103,-122.76176597357042,-35.04245898644717

1349249_20201_2_0,o184jp4icz,0.1533728845526186,-85.20838679081254,-40.284993214501384

2403396_20201_2_0,o1cfwn4icz,-1.7347453143832128,-130.5499575623335,-49.116031081409645

4341954_20201_2_0,o1g0ep4icz,1.5241197675077638,-73.860790530901,-41.267033416259025

4074939_20201_2_0,o1i91o4icz,0.13112426286726112,-96.4909461892253,-41.43918256882034

1426899_20201_2_0,o1i9jo4icz,-1.948256802573018,-73.94692257782395,-26.15491043393655

1153716_20201_2_0,o1jiso4icz,0.511327193723748,-91.56971041482606,-30.82523631354222

5422325_20201_2_0,n7wvpo4icz,-1.4189825939073295,-84.56594455560128,-19.820511315181562

4287097_20201_2_0,o1ngzo4icz,-1.5860646500106814,-79.77931850847017,-31.03117270669121

4173582_20201_2_0,o1t9go4icz,2.5240587634740486,-96.58931389265922,-50.314664540520994

5266204_20201_2_0,o1u1jp4icz,0.31998222577212526,-129.4450673496354,-38.65922240182336

1910331_20201_2_0,o1wchp4icz,3.1895983196274673,-91.23366770028909,-52.019590546725354

5080347_20201_2_0,o1ycun4icz,7.745580929177795,-30.258163015683692,-64.5342488842778

1058990_20201_2_0,o1ysgp4icz,-0.3314118352880955,-111.92475737107503,-35.26399353511525

4350376_20201_2_0,o1yzwo4icz,0.37764104223296063,-92.46540418561645,-28.437548793510345

2743957_20201_2_0,o20ujo4icz,2.212748968538903,-92.82583678827044,-41.99978121542149

3108108_20201_2_0,o26ptn4icz,-1.6909389835838717,-85.71466447184977,-44.83548829529586

5361813_20201_2_0,o27qep4icz,1.9316189361261296,-97.76014534172762,-41.409408703999816

5428146_20201_2_0,o29ymn4icz,8.058935455400949,-85.65747924519457,-90.27130042515658

5237250_20201_2_0,o2flmo4icz,-0.08636420568878926,-82.70840810712042,-50.904379894260416

5409271_20201_2_0,o2fnxo4icz,0.49633951859859965,-97.71132193702817,-41.48751148651587

5717715_20201_2_0,o2i1mo4icz,0.4873980220742946,-49.07658853635556,-33.09049244098472

5528626_20201_2_0,o2khbo4icz,0.8660070279473125,-52.86680583183147,-46.92287276961363

2507442_20201_2_0,o2m3ln4icz,0.20873181641542873,-77.99224737694826,-59.13877764714101

1329628_20201_2_0,o2osvn4icz,33.356583644473005,-22.367760748096345,-156.0472890213132

3626131_20201_2_0,o2phto4icz,1.4346775224399755,-120.33524098055088,-35.73744093561737

5584341_20201_2_0,3q8swo4icz,-1.4005182014739443,-96.47802462978862,-17.583168118556188

1438752_20201_2_0,o2ucmo4icz,-1.221441656397257,-115.6671588647443,-20.38214766809085

4063551_20201_2_0,o2vbrn4icz,-0.582899801598745,-106.66918239151076,-37.41784799892015

4562699_20201_2_0,o2xkjp4icz,-64.54114396562404,115.89573816090123,312.11901239128684

2949195_20201_2_0,o2yxbo4icz,3.821403209253625,-100.30126765855903,-55.042464052116316

2389905_20201_2_0,o2zken4icz,-0.14329622441259052,-122.47400690878325,-42.50798149617481

2039206_20201_2_0,o31tqn4icz,-0.41088021510616374,-111.33746856314974,-31.351945541345756

5798073_20201_2_0,o345mo4icz,-3.3337395509339607,-79.48782667664801,-18.396356506185583

3340892_20201_2_0,o35fhp4icz,-0.7439558983929829,-93.79887899449815,-40.4404485518118

1023972_20201_2_0,o39tvo4icz,-1.8431008865961498,-114.07515336352134,-29.43053455508364

4322229_20201_2_0,o3bmfp4icz,0.8255690328386472,-52.62509543076345,-27.275469676043173

2319180_20201_2_0,o3ea6o4icz,-0.6157436171560651,-77.55453642047542,-25.797696013169684

2102516_20201_2_0,o3gkun4icz,5.795244958081163,-88.60017131948877,-82.91756683000918

4256920_20201_2_0,o3ma4o4icz,-1.9524565052601046,-109.10387650799589,-28.449107557800602

5049919_20201_2_0,o3n2wo4icz,2.507151405485862,-118.5251104841173,-40.065127087552

5503370_20201_2_0,o3ndyn4icz,-1.4528487223804045,-92.11515529166488,-14.507044957753664

1894999_20201_2_0,o3oavo4icz,1.1183169098420254,-106.40172285440929,-46.635509718260806

1994302_20201_2_0,o3obcp4icz,-5.410956216366278,-140.18746455422377,-20.1428682974593

4581459_20201_2_0,o3qy6p4icz,-0.1774618067178522,-93.17695820788362,-52.276151111112995

3602183_20201_2_0,o3txgo4icz,-1.8806557123728838,-64.51046215758663,-46.49946569589639

2113730_20201_2_0,o3xhbp4icz,-1.148514670595092,-140.61753126106365,-29.949399467976235

5973305_20201_2_0,o4grqn4icz,-1.1843303583306346,-133.43222121610034,-38.167549102120915

4037839_20201_2_0,o4itfo4icz,1.261434703432066,-119.12291734712201,-23.81706815171188

5319323_20201_2_0,o4jgjn4icz,3.3237574673196306,-115.5709550413527,-38.00506280519724

4582180_20201_2_0,o4n62p4icz,-0.4377466722651033,-64.97157308801135,-25.48327530598293

1070491_20201_2_0,o4nino4icz,1.5535612006895518,-97.59586378035593,-46.74008195190996

1803049_20201_2_0,vzwcao4icz,13.17811351056724,-95.54677063732584,-106.03131605325217

4474537_20201_2_0,o4vz9n4icz,0.6478206528254206,-67.47765087267317,-37.90686066998413

1769141_20201_2_0,o4yg3o4icz,0.20621496895608352,-126.33456042039043,-30.162427078139643

1483107_20201_2_0,o52bjn4icz,-0.027442574004139794,-109.62096932526157,-35.59668407469346

5658586_20201_2_0,o52eon4icz,-2.1996446554274134,-115.71963815923323,-33.91952524453052

2248982_20201_2_0,o589fp4icz,19.69292517133394,-59.21511625539884,-135.62994521296835

2009855_20201_2_0,o5jrdp4icz,-1.446151257976351,-112.84769115946753,-34.426514594409355

1494551_20201_2_0,o5jrxo4icz,-1.645418669234334,-128.2949700750838,-0.46722866358854276

1101629_20201_2_0,o5pz9n4icz,0.3536613139434291,-109.29191462444388,-22.28689214899245

1904608_20201_2_0,o5vnhp4icz,0.7222157801695172,-134.15962864792093,-39.658084342573474

5140746_20201_2_0,o5vymo4icz,-1.7214674263224516,-59.954444269323744,-36.9778581282703

2580299_20201_2_0,o62uwn4icz,1.8930033928892696,-95.54599304906577,-38.544469248493925

1925305_20201_2_0,o64pko4icz,-1.0632835951206547,-94.92761288550386,-23.224493587987254

1370201_20201_2_0,o66m4p4icz,-1.5538375428266453,-57.43698719390025,-40.583524730190504

3178572_20201_2_0,o68ayo4icz,5.653068790081058,-45.63268846917731,-57.64994632697466

4217534_20201_2_0,o6d74p4icz,-0.7180511311924206,-96.95862843948814,-50.64366090120396

1225898_20201_2_0,o6f1to4icz,2.3900721936730105,-120.77973448665924,-67.76878930280193

5796926_20201_2_0,o6fexo4icz,0.02972627233748176,-122.46455942038693,-31.769266894422657

3034406_20201_2_0,o6gtqn4icz,-0.7308167104849977,-79.51749084264733,-31.552904029211675

2439352_20201_2_0,o6hbbn4icz,-0.11513489211823075,-102.16134496782823,-39.69650174172881

2791446_20201_2_0,o6mnbp4icz,3.0939481871871677,-91.60760838236962,-50.11152952011918

1584555_20201_2_0,o6o2on4icz,-0.906637570053593,-74.39314498676555,-27.83717710478416

5773299_20201_2_0,o6vnvo4icz,-1.4560622307775748,-88.74168219940182,-44.8326863978465

1581315_20201_2_0,o6wv7o4icz,-1.1756004526409751,-102.54547524633847,-31.771622152608117

1722293_20201_2_0,o6wx3p4icz,-0.9050467397379789,-108.88663641910259,-39.730035824534454

4770545_20201_2_0,o6xdwo4icz,-1.9834145483017636,-115.12273994106562,-27.74198522141006

2859743_20201_2_0,o6ybdo4icz,3.17234470013614,-64.14129338063648,-65.16845039257178

2715779_20201_2_0,o6zcfp4icz,-0.744157836087107,-99.06672904635704,-39.326107393695494

2926263_20201_2_0,o708lo4icz,-2.5287882699715007,-103.50020254192452,-16.35372475304021

5743898_20201_2_0,o7289n4icz,1.2827060507187198,-112.92489461042217,-47.993199700022345

1555157_20201_2_0,o777vo4icz,0.7202069598769877,-37.82367359127136,-53.580066106189435

4816248_20201_2_0,o78cbo4icz,-0.5505710105505864,-64.03842978253567,-32.16418115288975

1196945_20201_2_0,o7bzjp4icz,-3.094243394811204,-81.26401698798753,-39.25707011474813

5438955_20201_2_0,o7cwko4icz,-0.12591344563181825,-87.0628165229536,-32.55591503047242

3337337_20201_2_0,o7gucp4icz,0.7648610210849439,-134.23936726638752,-46.65979010246804

4795314_20201_2_0,o81mzo4icz,-1.1516131723259386,-55.99720324072496,-11.438303643676988

2813721_20201_2_0,o83vao4icz,0.2718044587209931,-106.82706134865089,-49.207430460842744

2707384_20201_2_0,o84kip4icz,-1.7353483425121352,-104.36063025239238,-27.276887312350112

1451584_20201_2_0,o88z9n4icz,-1.566013151938344,-75.98444330404377,-25.331086898434293

1780877_20201_2_0,o8bcro4icz,0.895889571822403,-59.81376257212233,-37.67551238860253

3619758_20201_2_0,o8k71p4icz,0.4001355714616514,-89.41238603045116,-40.399671721033556

4913724_20201_2_0,o8ld0p4icz,17.879501129730365,-95.47980574140013,100.82072282184646

1321752_20201_2_0,o8neho4icz,0.8731630028803986,-120.21002884633063,-21.29143713586356

1826014_20201_2_0,o8pjto4icz,-0.5517381001580515,-81.93430875001894,-34.13515266851586

3084304_20201_2_0,o8pu5p4icz,1.2392916987056735,-94.31965124172396,-39.746703929048124

4697688_20201_2_0,o93p6o4icz,4.4222052917023005,-104.19798906338195,-48.81082268769039

1090286_20201_2_0,o96fjo4icz,0.5222704592094219,-92.8667576731161,-43.616630385677354

3504341_20201_2_0,o99yfn4icz,-0.17927116759798614,-90.3124545211353,-46.819561912442026

1956193_20201_2_0,o9cu9o4icz,-2.326891972439838,-124.82337782868802,-6.263906635340277

4924875_20201_2_0,o9defp4icz,0.36598373584016647,-61.064062695786845,-66.59848965617752
 46%|████▌     | 372/811 [10:38<11:18,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 46%|████▌     | 373/811 [10:39<11:23,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 46%|████▌     | 374/811 [10:41<12:15,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 46%|████▌     | 375/811 [10:43<12:01,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 46%|████▋     | 376/811 [10:45<12:01,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 46%|████▋     | 377/811 [10:46<11:45,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 47%|████▋     | 378/811 [10:48<11:51,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 47%|████▋     | 379/811 [10:50<12:04,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 47%|████▋     | 380/811 [10:51<11:48,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 47%|████▋     | 381/811 [10:53<11:43,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 47%|████▋     | 382/811 [10:54<11:19,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 47%|████▋     | 383/811 [10:56<12:02,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 47%|████▋     | 384/811 [10:58<11:52,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 47%|████▋     | 385/811 [10:59<11:23,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 48%|████▊     | 386/811 [11:01<11:49,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 48%|████▊     | 387/811 [11:03<12:02,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 48%|████▊     | 388/811 [11:05<12:00,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 48%|████▊     | 389/811 [11:06<11:45,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 48%|████▊     | 390/811 [11:08<11:55,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 48%|████▊     | 391/811 [11:10<12:07,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 48%|████▊     | 392/811 [11:11<11:53,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 48%|████▊     | 393/811 [11:13<12:28,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 49%|████▊     | 394/811 [11:15<12:01,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 49%|████▊     | 395/811 [11:17<11:25,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 49%|████▉     | 396/811 [11:18<11:55,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 49%|████▉     | 397/811 [11:20<12:05,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 49%|████▉     | 398/811 [11:22<11:43,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 49%|████▉     | 399/811 [11:24<11:47,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 49%|████▉     | 400/811 [11:25<11:38,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 49%|████▉     | 401/811 [11:27<11:35,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|████▉     | 402/811 [11:29<11:39,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|████▉     | 403/811 [11:30<11:33,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|████▉     | 404/811 [11:32<11:44,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|████▉     | 405/811 [11:34<11:41,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|█████     | 406/811 [11:35<11:22,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|█████     | 407/811 [11:37<11:55,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|█████     | 408/811 [11:39<11:19,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|█████     | 409/811 [11:41<11:31,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 51%|█████     | 410/811 [11:43<11:41,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 51%|█████     | 411/811 [11:44<11:25,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 51%|█████     | 412/811 [11:46<11:05,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 51%|█████     | 413/811 [11:47<10:40,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 51%|█████     | 414/811 [11:49<11:00,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 51%|█████     | 415/811 [11:51<11:04,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 51%|█████▏    | 416/811 [11:53<11:25,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 51%|█████▏    | 417/811 [11:54<11:17,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 52%|█████▏    | 418/811 [11:56<11:00,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 52%|█████▏    | 419/811 [11:57<10:50,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 52%|█████▏    | 420/811 [12:02<17:20,  2.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 52%|█████▏    | 421/811 [12:04<15:04,  2.32s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 52%|█████▏    | 422/811 [12:05<13:30,  2.08s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 52%|█████▏    | 423/811 [12:07<13:15,  2.05s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 52%|█████▏    | 424/811 [12:10<13:54,  2.16s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 52%|█████▏    | 425/811 [12:12<12:53,  2.01s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 53%|█████▎    | 426/811 [12:13<11:55,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 53%|█████▎    | 427/811 [12:15<11:41,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 53%|█████▎    | 428/811 [12:16<11:05,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 53%|█████▎    | 429/811 [12:18<11:15,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 53%|█████▎    | 430/811 [12:20<10:55,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 53%|█████▎    | 431/811 [12:22<11:01,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 53%|█████▎    | 432/811 [12:23<11:01,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 53%|█████▎    | 433/811 [12:25<11:12,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 54%|█████▎    | 434/811 [12:27<10:59,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 54%|█████▎    | 435/811 [12:29<11:21,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 54%|█████▍    | 436/811 [12:30<10:57,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 54%|█████▍    | 437/811 [12:32<10:35,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 54%|█████▍    | 438/811 [12:34<10:53,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 54%|█████▍    | 439/811 [12:35<10:32,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 54%|█████▍    | 440/811 [12:37<10:34,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 54%|█████▍    | 441/811 [12:39<10:48,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▍    | 442/811 [12:41<10:57,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▍    | 443/811 [12:42<10:34,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▍    | 444/811 [12:44<10:45,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▍    | 445/811 [12:46<10:57,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▍    | 446/811 [12:48<10:33,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▌    | 447/811 [12:49<10:16,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▌    | 448/811 [12:51<10:36,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▌    | 449/811 [12:53<10:43,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▌    | 450/811 [12:55<10:42,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 56%|█████▌    | 451/811 [12:57<12:03,  2.01s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 56%|█████▌    | 452/811 [12:59<11:47,  1.97s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 56%|█████▌    | 453/811 [13:02<13:12,  2.21s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 56%|█████▌    | 454/811 [13:04<12:01,  2.02s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 56%|█████▌    | 455/811 [13:06<11:44,  1.98s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 56%|█████▌    | 456/811 [13:07<10:51,  1.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 56%|█████▋    | 457/811 [13:09<11:46,  2.00s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 56%|█████▋    | 458/811 [13:11<10:42,  1.82s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 57%|█████▋    | 459/811 [13:13<10:51,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 57%|█████▋    | 460/811 [13:15<10:48,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 57%|█████▋    | 461/811 [13:16<10:32,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 57%|█████▋    | 462/811 [13:18<10:06,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 57%|█████▋    | 463/811 [13:20<09:52,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 57%|█████▋    | 464/811 [13:21<10:08,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 57%|█████▋    | 465/811 [13:23<09:50,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 57%|█████▋    | 466/811 [13:25<09:40,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 58%|█████▊    | 467/811 [13:26<09:39,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 58%|█████▊    | 468/811 [13:28<09:09,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 58%|█████▊    | 469/811 [13:29<09:07,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 58%|█████▊    | 470/811 [13:31<09:13,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 58%|█████▊    | 471/811 [13:33<10:15,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 58%|█████▊    | 472/811 [13:35<09:35,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 58%|█████▊    | 473/811 [13:36<09:33,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 58%|█████▊    | 474/811 [13:38<09:28,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 59%|█████▊    | 475/811 [13:40<09:18,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 59%|█████▊    | 476/811 [13:41<09:30,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 59%|█████▉    | 477/811 [13:43<09:36,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 59%|█████▉    | 478/811 [13:48<14:38,  2.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 59%|█████▉    | 479/811 [13:50<12:58,  2.34s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 59%|█████▉    | 480/811 [13:51<11:49,  2.14s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 59%|█████▉    | 481/811 [13:53<11:15,  2.05s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 59%|█████▉    | 482/811 [13:55<10:13,  1.87s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 60%|█████▉    | 483/811 [13:56<09:59,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 60%|█████▉    | 484/811 [13:58<09:42,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 60%|█████▉    | 485/811 [14:00<09:15,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 60%|█████▉    | 486/811 [14:01<08:50,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 60%|██████    | 487/811 [14:03<09:25,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 60%|██████    | 488/811 [14:05<09:08,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 60%|██████    | 489/811 [14:06<08:43,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 60%|██████    | 490/811 [14:09<10:23,  1.94s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 61%|██████    | 491/811 [14:10<09:40,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 61%|██████    | 492/811 [14:13<10:40,  2.01s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 61%|██████    | 493/811 [14:14<10:14,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 61%|██████    | 494/811 [14:17<11:23,  2.16s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 61%|██████    | 495/811 [14:19<10:33,  2.01s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 61%|██████    | 496/811 [14:21<11:11,  2.13s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 61%|██████▏   | 497/811 [14:23<10:16,  1.96s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 61%|██████▏   | 498/811 [14:25<09:58,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 62%|██████▏   | 499/811 [14:26<09:31,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 62%|██████▏   | 500/811 [14:28<09:07,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 62%|██████▏   | 501/811 [14:29<08:52,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 62%|██████▏   | 502/811 [14:31<08:40,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 62%|██████▏   | 503/811 [14:33<08:47,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 62%|██████▏   | 504/811 [14:35<09:12,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 62%|██████▏   | 505/811 [14:37<10:30,  2.06s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 62%|██████▏   | 506/811 [14:39<09:41,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 63%|██████▎   | 507/811 [14:41<09:16,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 63%|██████▎   | 508/811 [14:43<09:23,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 63%|██████▎   | 509/811 [14:44<09:16,  1.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 63%|██████▎   | 510/811 [14:46<08:35,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 63%|██████▎   | 511/811 [14:47<08:23,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 63%|██████▎   | 512/811 [14:49<08:00,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 63%|██████▎   | 513/811 [14:51<08:20,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 63%|██████▎   | 514/811 [14:52<08:13,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▎   | 515/811 [14:54<08:43,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▎   | 516/811 [14:56<08:20,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▎   | 517/811 [14:57<08:08,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▍   | 518/811 [15:00<09:44,  2.00s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▍   | 519/811 [15:02<08:57,  1.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▍   | 520/811 [15:03<08:45,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▍   | 521/811 [15:05<08:29,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▍   | 522/811 [15:07<08:27,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▍   | 523/811 [15:09<08:36,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 65%|██████▍   | 524/811 [15:10<08:16,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 65%|██████▍   | 525/811 [15:12<08:10,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 65%|██████▍   | 526/811 [15:14<08:25,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 65%|██████▍   | 527/811 [15:15<08:10,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 65%|██████▌   | 528/811 [15:17<07:52,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 65%|██████▌   | 529/811 [15:20<10:23,  2.21s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 65%|██████▌   | 530/811 [15:22<09:25,  2.01s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 65%|██████▌   | 531/811 [15:25<10:53,  2.33s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 66%|██████▌   | 532/811 [15:28<11:37,  2.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 66%|██████▌   | 533/811 [15:30<10:27,  2.26s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 66%|██████▌   | 534/811 [15:32<10:48,  2.34s/it] 66%|██████▌   | 535/811 [15:34<09:40,  2.10s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 66%|██████▌   | 536/811 [15:35<08:59,  1.96s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 66%|██████▌   | 537/811 [15:37<08:24,  1.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 66%|██████▋   | 538/811 [15:39<07:59,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 66%|██████▋   | 539/811 [15:40<07:36,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 67%|██████▋   | 540/811 [15:42<07:32,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 67%|██████▋   | 541/811 [15:43<07:06,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 67%|██████▋   | 542/811 [15:44<06:53,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 67%|██████▋   | 543/811 [15:46<06:49,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 67%|██████▋   | 544/811 [15:48<06:49,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 67%|██████▋   | 545/811 [15:50<07:37,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 67%|██████▋   | 546/811 [15:54<11:28,  2.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 67%|██████▋   | 547/811 [15:59<13:57,  3.17s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 68%|██████▊   | 548/811 [16:00<11:50,  2.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 68%|██████▊   | 549/811 [16:03<11:07,  2.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 68%|██████▊   | 550/811 [16:04<09:45,  2.24s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 68%|██████▊   | 551/811 [16:06<08:49,  2.04s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 68%|██████▊   | 552/811 [16:07<08:13,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 68%|██████▊   | 553/811 [16:09<07:49,  1.82s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 68%|██████▊   | 554/811 [16:11<07:28,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 68%|██████▊   | 555/811 [16:12<07:19,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 69%|██████▊   | 556/811 [16:14<06:58,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 69%|██████▊   | 557/811 [16:15<07:07,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 69%|██████▉   | 558/811 [16:17<06:58,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 69%|██████▉   | 559/811 [16:19<06:55,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 69%|██████▉   | 560/811 [16:21<07:08,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 69%|██████▉   | 561/811 [16:23<08:05,  1.94s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 69%|██████▉   | 562/811 [16:25<07:39,  1.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 69%|██████▉   | 563/811 [16:27<08:23,  2.03s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 70%|██████▉   | 564/811 [16:30<09:49,  2.39s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 70%|██████▉   | 565/811 [16:32<09:12,  2.24s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 70%|██████▉   | 566/811 [16:34<08:43,  2.14s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 70%|██████▉   | 567/811 [16:36<08:21,  2.06s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 70%|███████   | 568/811 [16:37<07:29,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 70%|███████   | 569/811 [16:39<07:22,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 70%|███████   | 570/811 [16:41<06:57,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 70%|███████   | 571/811 [16:42<06:30,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 71%|███████   | 572/811 [16:44<06:34,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 71%|███████   | 573/811 [16:45<06:22,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 71%|███████   | 574/811 [16:47<06:51,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 71%|███████   | 575/811 [16:49<06:52,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 71%|███████   | 576/811 [16:51<06:47,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 71%|███████   | 577/811 [16:52<06:45,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 71%|███████▏  | 578/811 [16:54<06:14,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 71%|███████▏  | 579/811 [16:55<06:12,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 72%|███████▏  | 580/811 [16:57<06:27,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 72%|███████▏  | 581/811 [17:00<07:47,  2.03s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 72%|███████▏  | 582/811 [17:02<07:11,  1.89s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 72%|███████▏  | 583/811 [17:03<06:52,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 72%|███████▏  | 584/811 [17:05<07:03,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 72%|███████▏  | 585/811 [17:08<07:58,  2.12s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 72%|███████▏  | 586/811 [17:09<07:17,  1.95s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 72%|███████▏  | 587/811 [17:11<06:40,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 588/811 [17:12<06:23,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 589/811 [17:14<06:01,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 590/811 [17:16<06:34,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 591/811 [17:18<06:13,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 592/811 [17:21<07:36,  2.08s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 593/811 [17:22<07:02,  1.94s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 594/811 [17:24<06:41,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 595/811 [17:25<06:18,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 596/811 [17:28<06:50,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 74%|███████▎  | 597/811 [17:29<06:33,  1.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 74%|███████▎  | 598/811 [17:31<06:08,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 74%|███████▍  | 599/811 [17:32<05:58,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 74%|███████▍  | 600/811 [17:34<05:49,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 74%|███████▍  | 601/811 [17:35<05:34,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 74%|███████▍  | 602/811 [17:37<05:30,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 74%|███████▍  | 603/811 [17:39<05:36,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 74%|███████▍  | 604/811 [17:40<05:46,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▍  | 605/811 [17:43<06:23,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▍  | 606/811 [17:44<05:59,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▍  | 607/811 [17:46<05:44,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▍  | 608/811 [17:48<05:51,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▌  | 609/811 [17:49<05:32,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▌  | 610/811 [17:50<05:21,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▌  | 611/811 [17:52<05:12,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▌  | 612/811 [17:54<05:22,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 76%|███████▌  | 613/811 [17:55<05:08,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 76%|███████▌  | 614/811 [17:57<05:18,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 76%|███████▌  | 615/811 [18:03<09:30,  2.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 76%|███████▌  | 616/811 [18:04<08:02,  2.48s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 76%|███████▌  | 617/811 [18:06<07:16,  2.25s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 76%|███████▌  | 618/811 [18:08<06:57,  2.17s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 76%|███████▋  | 619/811 [18:10<06:20,  1.98s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 76%|███████▋  | 620/811 [18:12<06:31,  2.05s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 77%|███████▋  | 621/811 [18:13<06:05,  1.92s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 77%|███████▋  | 622/811 [18:15<05:32,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 77%|███████▋  | 623/811 [18:16<05:24,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 77%|███████▋  | 624/811 [18:19<05:49,  1.87s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 77%|███████▋  | 625/811 [18:20<05:21,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 77%|███████▋  | 626/811 [18:22<05:24,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 77%|███████▋  | 627/811 [18:23<05:18,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 77%|███████▋  | 628/811 [18:25<05:17,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 78%|███████▊  | 629/811 [18:27<05:22,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 78%|███████▊  | 630/811 [18:29<05:23,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 78%|███████▊  | 631/811 [18:31<05:12,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 78%|███████▊  | 632/811 [18:32<05:08,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 78%|███████▊  | 633/811 [18:34<04:58,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 78%|███████▊  | 634/811 [18:35<04:52,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 78%|███████▊  | 635/811 [18:39<06:28,  2.21s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 78%|███████▊  | 636/811 [18:41<05:58,  2.05s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 79%|███████▊  | 637/811 [18:42<05:48,  2.01s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 79%|███████▊  | 638/811 [18:44<05:34,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 79%|███████▉  | 639/811 [18:46<05:15,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 79%|███████▉  | 640/811 [18:47<04:56,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 79%|███████▉  | 641/811 [18:49<04:51,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 79%|███████▉  | 642/811 [18:51<04:40,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 79%|███████▉  | 643/811 [18:52<04:44,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 79%|███████▉  | 644/811 [18:54<04:46,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 80%|███████▉  | 645/811 [18:55<04:22,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 80%|███████▉  | 646/811 [18:57<04:17,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 80%|███████▉  | 647/811 [18:59<04:25,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 80%|███████▉  | 648/811 [19:00<04:22,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 80%|████████  | 649/811 [19:02<04:21,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 80%|████████  | 650/811 [19:04<04:52,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 80%|████████  | 651/811 [19:06<04:41,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 80%|████████  | 652/811 [19:07<04:28,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

5724730_20201_2_0,o9hfio4icz,0.9481792754245669,-62.48785161253906,-50.46462743248148

4528751_20201_2_0,o9k1xn4icz,1.876274312488733,-111.5156436285381,-18.51225081548216

4798248_20201_2_0,o9maoo4icz,-0.3805034196702256,-107.06139982835316,-45.40160384952168

1528230_20201_2_0,o9pcdp4icz,1.3789268814367976,-78.40664029609025,-46.43127945263235

4841682_20201_2_0,o9t2to4icz,-3.2460838722303147,-92.39266478165507,-28.727502687897555

4180601_20201_2_0,o9uobo4icz,7.897342997203795,-108.86981369796928,-83.275025676408

4231131_20201_2_0,o9v5in4icz,1.6605825080506258,-78.84209327506491,-48.779441818525896

5886869_20201_2_0,o9vdwo4icz,-0.42372153652823163,-85.84175016431283,-31.810214846200523

5739081_20201_2_0,oa2i6o4icz,-0.5863726829202819,-105.06119171078467,-39.26883902468022

5527319_20201_2_0,oa2o7n4icz,-1.4279829961785127,-109.25250569943447,-14.292826675395418

5493404_20201_2_0,oa70wn4icz,3.170775471096074,-75.05467232870959,-70.67287410089575

2153352_20201_2_0,oa8bln4icz,-4.775513387943091,-131.84648647110095,-28.382695944232253

5908377_20201_2_0,oaaaio4icz,0.8931092173990585,-63.99922565393268,-46.4367240244237

4851818_20201_2_0,oafgfp4icz,0.6764248163662068,-90.70820393010771,-33.74049012201857

4943274_20201_2_0,oaften4icz,-0.5181981568122686,-73.62191931763596,-29.732162498449398

1774431_20201_2_0,oalxjp4icz,-0.09263791904150268,-73.71092152464823,-34.72810693458713

5029949_20201_2_0,oam5ap4icz,-0.712212242577848,-114.5651864128312,-24.829826004192284

3387551_20201_2_0,xfu6xo4icz,1.4370634710507602,-79.42512692688999,-50.75121974612901

4360650_20201_2_0,oaq2kn4icz,1.0594670609392633,-143.88977117689882,-46.10680776742352

3558596_20201_2_0,oasmgo4icz,-2.768544141179772,-115.29178710064357,-31.980284117986884

1174857_20201_2_0,ob2vbp4icz,-0.17315031469216757,-107.78306585333289,-40.84946517497819

5394565_20201_2_0,ob3slo4icz,2.9128016757048716,-108.6493545483421,-64.83808782560325

4573893_20201_2_0,ob4djo4icz,40.66080458102013,53.924662675355734,-202.50672477463502

5020297_20201_2_0,ob58ro4icz,-0.45542454811398153,-66.23072614738979,-15.881105832158028

3632007_20201_2_0,ob6knn4icz,1.0050501431594958,-86.65837210846584,-40.40911846998728

1269397_20201_2_0,ob8hlo4icz,-0.5197689759006031,-106.74003797410194,-22.84014901632763

2486341_20201_2_0,oba4uo4icz,-0.6294122429282026,-75.92365760070044,-30.36397128162001

3851264_20201_2_0,obbbwn4icz,0.8648032728093266,-117.53801609762232,-48.73579627370505

1078598_20201_2_0,obehio4icz,-3.3459813076932874,-112.16871161688942,-8.81017257391511

1902253_20201_2_0,obhq7o4icz,0.5405440475637406,-86.16542602903294,-38.56013708828688

2387398_20201_2_0,obn8ro4icz,2.8489911144452997,-66.99753335091464,-48.351495750544515

2862781_20201_2_0,obonvn4icz,3.2033894593172763,-78.28195619947303,-50.1373824370784

5580095_20201_2_0,obp2ep4icz,-3.2483602628467136,-97.45401975132987,-17.734549834202312

1002519_20201_2_0,obqqno4icz,-1.5603373040155313,-88.26735780333604,-33.86997265168054

1991301_20201_2_0,obr5hp4icz,-1.7764338151577237,-68.64174661002906,-26.414572721263568

3081587_20201_2_0,obthbp4icz,2.564096836456342,-95.3687728268684,-56.244801646218264

2347277_20201_2_0,obukpn4icz,-4.2273084350814925,-67.55213981281818,-29.75951651151172

1425139_20201_2_0,obycdp4icz,1.7984119485126633,-93.88975981393838,-53.60618494098446

1191392_20201_2_0,oc0buo4icz,6.926444868967685,-44.048164346545434,-63.56321885001323

3868619_20201_2_0,oc4q8p4icz,6.451439529215898,-84.17487922160615,-71.32876390490827

5547398_20201_2_0,oc62lo4icz,1.323182835869397,-78.63506250629368,-39.215432709386334

1211084_20201_2_0,oc68eo4icz,1.2607125956395686,-76.86115065708421,-55.40674359263373

2682314_20201_2_0,oc6r2p4icz,-9.92362676116047,-130.26702168108613,23.73141455285858

4456230_20201_2_0,oc8fgo4icz,-1.2139778395744802,-100.49302560750317,-20.596174383750636

4280845_20201_2_0,oc8vxo4icz,-0.6156733429376211,-97.09171286523909,-33.03838767067478

4500712_20201_2_0,oc9vso4icz,-0.21795299712097033,-82.38228464037402,-43.30968107695462

2450450_20201_2_0,occhep4icz,-1.842364469659281,-72.08541220329874,-73.0869113874404

5263112_20201_2_0,ocdz1o4icz,-0.47081490776792123,-138.03985435637537,-7.1057083082937

2356667_20201_2_0,ocex3o4icz,-2.3885848666724336,-108.2462123299988,-24.270717421128808

5193138_20201_2_0,ocfp9p4icz,0.2261607107083776,-131.41004438713406,-27.898204352316355

4927850_20201_2_0,ocnu4o4icz,0.5341083501373126,-80.13759783519845,-43.45358206432918

2840092_20201_2_0,ocq8dp4icz,2.82106153031801,-76.29710901268766,-32.20930570215248

3532409_20201_2_0,ocvf9p4icz,0.9091041773701549,-110.4723620524845,-49.49519201857119

5276594_20201_2_0,ocw2mn4icz,1.0588434461164455,-123.5794460952632,-25.543379273364963

1312660_20201_2_0,od3oln4icz,-0.894239052333325,-113.27586159822616,-22.298016321286767

2917883_20201_2_0,od5vvo4icz,2.3166004580244492,-76.4566409959094,-38.42849293779955

5309874_20201_2_0,od7wwo4icz,-2.1229389200613435,-75.08627731463648,-22.42753421812573

1519310_20201_2_0,od8g1o4icz,-2.2531146124089827,-79.13057492845476,-21.62951836237451

5783889_20201_2_0,odgnqn4icz,4.145532914453251,-119.50742596459375,-57.13723620094784

4472385_20201_2_0,odgopo4icz,-2.136612306563786,-80.4937513711198,-22.70216642596958

2903968_20201_2_0,odkgfp4icz,2.8291044475768534,-96.12019166386798,-53.96339679060105

3033417_20201_2_0,odlx3o4icz,0.41974393690293077,-91.83354998716575,-59.575136992192355

1603728_20201_2_0,odrp6o4icz,1.876447458396098,-60.544009869916835,-41.619861180054826

5842833_20201_2_0,odtzin4icz,3.91825188012522,-95.65737904463208,-50.80929555078025

2256709_20201_2_0,odu0bo4icz,0.7325774885791335,-118.05691994725797,-30.35843498638333

4190106_20201_2_0,odv27p4icz,-2.94759541812822,-99.3677584971262,-31.65758931248598

3060235_20201_2_0,odyrqo4icz,0.6027643350405333,-77.003431865697,-40.4183500242178

2343591_20201_2_0,oebidp4icz,-3.3143059616284463,-67.148471669527,-29.030199279322943

2233748_20201_2_0,oeblip4icz,1.4170888599067029,-110.9283430547543,-36.68211534910202

5419023_20201_2_0,oec4pn4icz,-1.7806699561832628,-91.9234377792138,-25.386670709941285

2022290_20201_2_0,oeh4do4icz,-0.963419897169562,-83.73347645349759,-19.643183424251106

3991924_20201_2_0,oenf7p4icz,3.1369554479635946,-91.96060067555763,-52.42877217212994

5184811_20201_2_0,oepmeo4icz,-1.9255359546486768,-95.19062641993551,-31.33091151845025

3070358_20201_2_0,oesfwo4icz,-10.464592960197379,-99.74856748287488,23.20431101408522

3201849_20201_2_0,oevqpo4icz,0.7173651153790102,-74.24615745933619,-42.99357196064318

5750059_20201_2_0,of0rdo4icz,-2.643815452334744,-108.09136047441149,-11.025678779969667

1131459_20201_2_0,of20gn4icz,-1.019058888678772,-103.8359453529522,-38.14825059176181

5062966_20201_2_0,of2oeo4icz,0.030119866658080658,-96.4999336797053,-27.030005141660823

2952424_20201_2_0,ofccvo4icz,-12.708993759723274,-157.70635054728092,47.29045622970567

2781039_20201_2_0,ofeq7p4icz,3.0099252989490477,-80.01101815206783,-54.61272354149314

5024830_20201_2_0,offh2o4icz,-2.8252748940627828,-106.76094163283102,-3.5549670398463604

5997459_20201_2_0,ofj7lo4icz,-2.1980705660150495,-110.45427748283987,-36.45666449832136

1507919_20201_2_0,ofocxn4icz,1.4715669531223516,-113.75575312117488,-42.31782156275908

4620958_20201_2_0,ofr0po4icz,0.536149711096959,-68.87581420288564,-46.95550911132558

3857369_20201_2_0,oframo4icz,-1.2813402525969841,-63.77030223557506,-4.301448971006124

4698003_20201_2_0,oftqro4icz,8.566476215456063,-41.75568951893109,-96.73233692982512

5385414_20201_2_0,ofuwoo4icz,0.34129981609324755,-48.142121067337314,-38.58527665544301

4333693_20201_2_0,ofwu2p4icz,2.376787282491371,-150.87444634798086,-72.7715645954147

3496418_20201_2_0,og11io4icz,-3.161496051436721,-102.68981266726828,-6.645869534761587

2710636_20201_2_0,ogak5o4icz,-1.6675215670992662,-91.48518146016141,-36.749474840368734

5225594_20201_2_0,oge0tn4icz,-2.067686228709481,-81.06726432298663,-24.79080800784456

3335618_20201_2_0,ogg89p4icz,-5.268922859970154,-101.89781353623266,3.5660805574782444

3992379_20201_2_0,ogh3oo4icz,-1.8805607288847521,-144.57290448307378,-34.22225942836718

1412572_20201_2_0,ogly4o4icz,-0.8237945066902934,-73.44451217462924,-34.077002653254496

3189060_20201_2_0,ogotsn4icz,-0.3012150893219441,-77.48876112726981,-44.94663182034601

1182779_20201_2_0,b45d3o4icz,6.000153434095506,-36.764508639151074,-57.05930658343932

4152855_20201_2_0,ogr3ao4icz,-0.28802122113152195,-141.22462767457426,-37.52334050719982

4766715_20201_2_0,ogreso4icz,1.2072334765906132,-117.13678215153323,-26.098780328400707

4511784_20201_2_0,ogrm5p4icz,-2.9951419569072772,-71.79991752683495,-12.96682408518518

1703108_20201_2_0,ogu1fp4icz,1.4789006650882974,-62.35917056428008,-31.16249894365862

3956627_20201_2_0,ogujdp4icz,-0.4242458276968851,-136.26535419355096,-27.007786201679266

4254680_20201_2_0,ogzmfn4icz,-4.912697962481053,-77.83794082025648,-10.268325458977927

2274066_20201_2_0,oh3hlo4icz,-2.615292763512076,-101.32560673423362,-8.247770322483802

4954558_20201_2_0,oh3ugo4icz,-2.5258475650014436,-67.49113258486139,-34.84047099566351

5421761_20201_2_0,oh565p4icz,-0.1356596112824569,-126.67335723408846,-38.66686184800568

4879115_20201_2_0,oh5ben4icz,-2.1544677866661677,-113.97813285675878,-16.9596532071765

5422428_20201_2_0,oh8jtn4icz,-0.7737245451785987,-97.27518669033293,-33.38449212170568

4810698_20201_2_0,oh8vho4icz,-1.4052924476082362,-24.110562538661043,-36.749395035936146

2499489_20201_2_0,ohan6o4icz,-1.1868274306723785,-114.73792663926253,-26.124324023962288

4095899_20201_2_0,ohcpbo4icz,-1.492457530582074,-87.67697302179783,-27.521337735519467

4129371_20201_2_0,ohekqo4icz,-0.2749760355887569,-82.31875714798417,-26.447586157428645

5603818_20201_2_0,ohim3p4icz,-0.053187895253339335,-71.63476472213739,-21.792485731956987

1769854_20201_2_0,oht8oo4icz,3.46194197097926,-96.28087715038578,-50.75732351498148

3526716_20201_2_0,ohtbbo4icz,-0.0969561166145029,-56.438373300139006,-32.504818104026555

1756356_20201_2_0,ohtu4p4icz,-12.63242976767649,-133.27552456506922,41.113409930412146

3409299_20201_2_0,ohwnwn4icz,-1.5696533853041539,-80.46200461496485,-27.967911427494712

1147873_20201_2_0,ohxlqo4icz,0.03906037862067213,-72.64158135890062,-40.998797555947974

4472130_20201_2_0,oi0uhp4icz,0.8167727430343649,-130.86477046277508,-34.614707595208415

3560292_20201_2_0,oi2g4p4icz,1.3830463830195712,-91.49707080742007,-49.12724309601717

3423301_20201_2_0,oi33bo4icz,3.197504168140415,-55.27280715425036,-57.93113514433354

4948174_20201_2_0,oi54no4icz,0.9953189177230124,-39.35483186794346,-31.255223328751242

1056391_20201_2_0,oi7hgn4icz,-0.7007502189031662,-106.17002661847738,-31.072714253905374

4667832_20201_2_0,oiamwn4icz,0.9377076853380892,-122.5914209905306,-41.38506030167906

5636976_20201_2_0,oib89p4icz,-3.3487243217349607,-99.03643998194073,-14.326110382412494

2406336_20201_2_0,oidsin4icz,-0.4321677529410597,-82.87371395224105,-31.260767166565216

2019225_20201_2_0,oifygp4icz,0.4022609888068428,-81.09123798603369,-29.9465747769934

5022862_20201_2_0,oigedo4icz,-0.6932202018294119,-58.4866227007941,-34.24437634323506

4514179_20201_2_0,oimj5p4icz,-2.0729158823158285,-84.84749812009511,-16.48488740613061

4959450_20201_2_0,oiny6o4icz,1.9191838342978453,-112.11772092822972,-62.64015537361958

1901102_20201_2_0,oiq05p4icz,-0.4045047761310588,-102.4780979608019,-43.29702517916739

5431234_20201_2_0,oiqstn4icz,-3.28012589814735,-112.31458102878022,-5.858964705144899

1199949_20201_2_0,oir9gn4icz,-0.8561491716620112,-63.20120622580282,-28.26487075461999

2872334_20201_2_0,oirako4icz,-1.5752088853891448,-116.32114403925885,-36.714968001822314

3612528_20201_2_0,oit1kp4icz,-7.189229796147625,-173.38225126801507,-14.432421035259466

4882804_20201_2_0,oite3o4icz,-0.053351590810560984,-102.84011188979244,-30.129286560954455

2457304_20201_2_0,oiv8ip4icz,0.870415094042207,-107.30690185559652,-30.582381933447607

1177683_20201_2_0,oj40no4icz,1.2946961424956436,-73.82763376484195,-31.71835742039086

3190681_20201_2_0,oj7bho4icz,-0.11162651234575534,-120.97899006899249,-35.018965848929525

3546601_20201_2_0,oj8dhp4icz,-0.42598868407220564,-105.09243007069443,-34.205977704300196

2713225_20201_2_0,oj94wn4icz,-3.3470611908373398,-68.2012933791489,-22.736633149644348

2958843_20201_2_0,ojbrqn4icz,-5.512639959688954,-86.26508695442828,-17.022697433243565

4361163_20201_2_0,ojfdap4icz,-1.440492350402841,-53.55352945393216,-43.24807131336246

4662251_20201_2_0,ojg5ln4icz,-1.165064819915966,-120.45531040218336,-38.95122638524681

1933016_20201_2_0,ojgeln4icz,-4.22060262051798,-61.570343421179274,-24.883797454075335

2678923_20201_2_0,ojteco4icz,-0.7290530905984095,-80.74232052100135,-27.85529682083903

3415721_20201_2_0,861e5p4icz,-0.47554208513945595,-74.79965749304463,-35.82445336243124

1556017_20201_2_0,ojuxin4icz,-8.473958419157022,-126.80182039405068,19.51109830239602

4473759_20201_2_0,ojygno4icz,-0.016319294026077714,-94.5366920292802,-18.112420453877675

1029606_20201_2_0,ok48no4icz,-2.5595859781872328,-114.73106162542342,-14.439124634242148

5831288_20201_2_0,ok5w9p4icz,-3.2940768427231015,-98.25325844285578,-42.73714826745115

2866186_20201_2_0,ok8k4p4icz,-1.022385069059404,-108.3006737679936,-28.55981506004042

6011193_20201_2_0,okantn4icz,-3.6194933391692214,-71.93545438818671,-17.04125101806362

4933476_20201_2_0,okggnn4icz,-0.5921365905524618,-112.69407910818231,-36.96016241434796

3120210_20201_2_0,okklgp4icz,-7.200246506223085,-125.0512113701009,1.5817231098378102

4894934_20201_2_0,oko8qn4icz,-1.0899657699114171,-81.86447620201142,-25.292388083165605

3650196_20201_2_0,okoxlo4icz,7.234057884864415,-60.50601658265947,-70.90225073330443

2870200_20201_2_0,okqobo4icz,-2.4180905663526167,-105.23630348080019,-27.23805590180055

4364123_20201_2_0,okuf9o4icz,4.903953410740061,-62.637812996384525,-109.88009842579436

3128403_20201_2_0,okw9gp4icz,-0.6629431219657651,-124.82271756829297,-46.65968926309927

3968073_20201_2_0,okwqep4icz,9.010950458323737,-86.52490186075164,-84.97713790799082

2687033_20201_2_0,ol36uo4icz,-6.619285170772931,-94.42247348982619,7.352157115486733

2251455_20201_2_0,ol4iqo4icz,1.5730140939056196,-83.27233221905877,-33.16081825895708

5652504_20201_2_0,olcqwo4icz,2.511047691125344,-102.92603545551859,-40.1028286024645

1406096_20201_2_0,oldkzo4icz,-0.5902413670198204,-60.54340135030998,-35.888779515195736

4282218_20201_2_0,olgn9p4icz,5.331820375128851,-35.13386368830655,-51.12496029797016

1853227_20201_2_0,olm1fp4icz,0.13687950748997232,-104.28333191780564,-42.392383886536365

4782754_20201_2_0,olpqpo4icz,-1.3315813869825643,-122.01940255713257,-41.54858184166096

2483589_20201_2_0,olqvin4icz,-0.8839247259859191,-79.2848232261754,-29.162673210206066

1103079_20201_2_0,olumgp4icz,1.6014363499376996,-81.85231721093933,-40.890780000123684

2596958_20201_2_0,olx2bn4icz,-4.224630471981968,-142.36719761017412,-18.839323634230368

4038115_20201_2_0,om4kvo4icz,3.0409568117660517,-100.89458056213726,-77.46175040625648

3919559_20201_2_0,om7pxn4icz,-2.4478788700899905,-88.27571399856242,-19.457967831374575

2708490_20201_2_0,om83fp4icz,-3.1989862599763286,-116.34002513782474,-18.57595975605051

2968888_20201_2_0,om9tfp4icz,-2.118287571515518,-125.5654720769673,-27.55298681486127

5821798_20201_2_0,omn5uo4icz,0.495059875821351,-121.6860111242174,-43.273874941468705

3901638_20201_2_0,omrven4icz,3.6168052521181964,-73.00651422550806,-49.91093489971806

5573413_20201_2_0,omx90p4icz,-1.352396394755837,-50.753288561736326,-25.590052500125026

3463564_20201_2_0,on036n4icz,-3.209981822331399,-99.66191318693146,-16.012769322693657

3801399_20201_2_0,on2tro4icz,0.35301381533672377,-124.66452398588171,-38.2433400039486

3231304_20201_2_0,on7g8o4icz,16.46279786867139,-36.08448649298538,-129.97169988304617

1117435_20201_2_0,onbdep4icz,-0.23003672668132796,-96.15996691549714,-32.457392074866945

4118931_20201_2_0,ondsep4icz,1.024727760224256,-62.969738408411416,-49.394425215410564

4744491_20201_2_0,ong4gn4icz,-3.0239158630280656,-127.87606822433003,-32.71134879786739

4676026_20201_2_0,ong8vn4icz,2.332799493769364,-105.90202499452121,-29.79594835590757

4284766_20201_2_0,onh45p4icz,1.6761750489848186,-114.12170436213427,-47.621874771599806

2336497_20201_2_0,onhn7p4icz,0.4808271683121799,-77.79465248208535,-26.965518077123505

4695568_20201_2_0,onkc4p4icz,3.2506232546059826,-36.51602740119333,-56.09917886363242

1697012_20201_2_0,onn0cp4icz,0.9034469094324248,-90.06512590334032,-56.0911305723601

3186779_20201_2_0,ono3co4icz,0.8590820171967781,-98.31948080710839,-34.49333195349675

2783065_20201_2_0,onox7o4icz,-1.9767186755090684,-71.61865673294363,-13.36055399338315

5538347_20201_2_0,onraxo4icz,0.892237110261949,-62.1478187372669,-36.027590854388734

3344143_20201_2_0,ont6oo4icz,-1.674244926953506,-116.28314515717912,-30.41137525747704

4817346_20201_2_0,onvuko4icz,1.0797622448231008,-115.54539306169133,-44.063816316861974

2867944_20201_2_0,onz4qn4icz,-2.501042187702782,-144.20473022859403,-17.855880584547577

3629913_20201_2_0,oo5c2p4icz,-0.783912751203771,-76.49954433817783,-36.56945930914266

4746174_20201_2_0,oo6ono4icz,-0.19983679672661392,-60.272868684302125,-14.60623877455798

4840762_20201_2_0,oo801p4icz,-2.659707153149559,-88.79780784834614,-27.313513474519993

3874853_20201_2_0,oo865p4icz,2.396231765050901,-116.19258662828801,-40.699906478930785

1589078_20201_2_0,oo9ymo4icz,-0.7399314132145779,-104.39795381449264,-43.186580451662664

5019292_20201_2_0,oof14p4icz,-1.5212538309555257,-103.86359053718786,-62.61550048022656

6003027_20201_2_0,oogzco4icz,-2.5204171651622005,-139.27175662182407,-31.21837308215669

3531386_20201_2_0,ookdeo4icz,-0.5090414706315742,-69.72933422818718,-37.17425388156016

3119954_20201_2_0,oomdro4icz,-0.5987977526452591,-41.68946435835079,-28.86937032807556

4417746_20201_2_0,ooojvo4icz,-0.48076762868469697,-67.10778756034443,-47.624825865801625

5966584_20201_2_0,oopspo4icz,4.496445627330087,-69.89396670279541,-67.38364399826578

4338456_20201_2_0,oorn4p4icz,19.768856241359746,6.845283931291391,-102.7112458684806

2489128_20201_2_0,oorpdp4icz,-1.0250897059450654,-109.85432846438138,-32.80226058038491

3830184_20201_2_0,ooxi8p4icz,-15.40062218507836,-83.56306262202745,34.83361982318519

3164196_20201_2_0,oozu4o4icz,2.053140794648093,-103.0488686718603,-44.75155592076666

4851955_20201_2_0,op3bjn4icz,0.04283485418766994,-117.47074755964823,-36.31823653587509

3234708_20201_2_0,op9vjn4icz,-2.9870264666634054,-105.57662534065526,-10.267332149766503

1673960_20201_2_0,opc5qn4icz,0.8034769245767659,-101.54978950562335,-40.490160227673684

1057032_20201_2_0,opcrko4icz,2.6415779994971893,-129.25249058977633,-38.050368352662645

1031191_20201_2_0,opdl5p4icz,1.390086496097704,-71.30191486845163,-37.96033890979719

3282077_20201_2_0,opj2jp4icz,2.5268023338148535,-93.79428589936003,-59.25640711340941

4016764_20201_2_0,opkl2p4icz,0.3677372035397734,-52.33441998227008,-36.733383864533565

3846681_20201_2_0,opmiuo4icz,-0.21692902337823675,-58.516342703050526,-28.48453585348429

3459951_20201_2_0,opno5o4icz,16.156006586007205,74.1396307727617,-145.46552854050674

4845129_20201_2_0,opru4o4icz,-0.8615470688673125,-66.2747290669943,-33.09307016436057

1708830_20201_2_0,opu5ap4icz,0.5382406459821197,-74.91333002569209,-42.82947857877524

5395323_20201_2_0,opuv9n4icz,0.11560328734319578,-108.92622212803076,-32.99481670730472

4418708_20201_2_0,opv9uo4icz,-0.08463189439839182,-114.19952562343431,-27.612112427059486

1523965_20201_2_0,opvr8p4icz,0.2534746951988949,-106.85519087462359,-27.926581844393752

3262210_20201_2_0,oq0ivn4icz,-19.87161434383449,-110.80328036703486,108.06520927447745

4885653_20201_2_0,oq2rbp4icz,1.7078457371604583,-117.86550873524214,-49.83643021973039

1154515_20201_2_0,oq5hpn4icz,1.7829314018554139,-54.097813819068136,-35.748752804770774

3122820_20201_2_0,oq7qpo4icz,-0.49049307598894826,-71.1356761577016,-28.169859017167894

1810152_20201_2_0,oq81fn4icz,1.3202260115096864,-121.42151553552068,-62.08687158470809

2952376_20201_2_0,oqbixo4icz,-7.021855638860444,-95.94607671913087,-7.912574897578679

1643755_20201_2_0,oqdjbo4icz,0.42841644408207774,-104.94050456863721,-34.701267945994715

4970884_20201_2_0,oqim5o4icz,-1.4635166856377804,-117.19076856510827,-40.704724484926885

2983590_20201_2_0,oqkvln4icz,1.8378242881864153,-104.38366036567137,-49.811940087440135

4967793_20201_2_0,oqm18o4icz,-5.572140743443342,-168.8732992712723,-9.80551202095674

5047390_20201_2_0,oqo59n4icz,1.0241637033530844,-69.20826511358874,-44.49969796037719

4611600_20201_2_0,oqrrfp4icz,2.0465474941435557,-107.42574959187894,-46.05736632469447

3107454_20201_2_0,oqy4mo4icz,1.74081586127989,-119.83973927206051,-47.6794261221861

4552828_20201_2_0,oqyx9o4icz,16.299997801231044,-87.80819649032512,-100.70317731410016

1825659_20201_2_0,oqzy6p4icz,1.7858293965679644,-100.6409930096072,-62.96954965425863

2715189_20201_2_0,or3lin4icz,-1.4220244178941925,-99.2023581976058,-34.27421433006978

5423570_20201_2_0,or6blo4icz,2.8181245028633786,-97.65194038046397,-65.07523132001766

3501268_20201_2_0,oravcn4icz,-0.498528526438345,-82.11375837606656,-38.021867862976904

1019584_20201_2_0,orkmso4icz,0.7583161602481038,-54.92971169942757,-36.27602950883799

1298059_20201_2_0,orldio4icz,2.229893106211267,-100.26205846931728,-53.21187509765292

5444531_20201_2_0,orqs9p4icz,-0.6776879660013794,-121.25412789922481,-32.17459665775954

5726741_20201_2_0,orxhsn4icz,-0.5039610233833267,-60.03965062422316,-35.23846445433537

3682939_20201_2_0,os0xho4icz,-25.160515659974134,-105.66591304242729,98.70034994842901

4174936_20201_2_0,os1fnn4icz,-1.9857194579912816,-107.37940357690604,-20.24630007368853

1882580_20201_2_0,os2qno4icz,1.5781373027079924,-134.9593854655706,-46.61423258501799

2594190_20201_2_0,os4nbp4icz,-1.596299039931496,-82.78260686495912,-44.63366023532684

2521707_20201_2_0,os7z6p4icz,-0.865009274858496,-94.34055252122562,-36.29795019638274

3266222_20201_2_0,os8w7o4icz,-1.3123264034026294,-107.88685214869716,-23.75844303003845

5650837_20201_2_0,osad1p4icz,2.9158425279244717,-119.48717065336098,-40.03429910129145

3358217_20201_2_0,osnvqo4icz,1.0426057999822058,-42.5087259588492,-43.86466995259815

4616014_20201_2_0,oss2mn4icz,-2.5370157250741836,-60.98912806016301,-14.808687705423367

2638933_20201_2_0,ost5bn4icz,2.9821193246302014,-129.6960615408307,-45.243276791929034

5481713_20201_2_0,oswnbp4icz,0.6717220765159752,-101.19009961785358,-45.76157016783806

2770945_20201_2_0,ot2nbo4icz,-55.07981213437104,127.01001240919794,393.5526947675178

4074678_20201_2_0,ot38in4icz,-3.281371694972866,-89.71437318229363,-29.533772296694963

2898428_20201_2_0,otaqno4icz,0.20922728470140048,-129.72803433304938,-44.54879098553518

5988513_20201_2_0,otfpan4icz,-2.359526061048741,-114.30618293303016,-41.89599521238061

1106274_20201_2_0,oti07p4icz,0.7269636995192362,-80.56647560573754,-39.14873521917751

4994042_20201_2_0,oti4bn4icz,0.020904299251216903,-97.18656230559085,-34.510906388065976

3475611_20201_2_0,otkg4p4icz,1.2856623920604686,-122.27558050563911,-35.44751900357292

4237350_20201_2_0,otu8ln4icz,1.3243455254936731,-76.82058841758771,-55.18216182499684

3762877_20201_2_0,otzt7n4icz,0.7136800023923981,-130.69893487697172,-30.420164976288447

3343206_20201_2_0,ou1zao4icz,2.4649695113287624,-52.36710334811852,-31.143566257564586

1808807_20201_2_0,ou3p0o4icz,-1.9855211475200847,-59.99644410367935,-22.60025059045155

3747817_20201_2_0,lpx59o4icz,-1.572440431045995,-97.21693706994316,-16.165318002122774

1671020_20201_2_0,ou578p4icz,-0.7114855953468208,-82.55811172397244,-30.670984853460496

5647892_20201_2_0,oud21p4icz,7.07025377911061,-71.33771409886072,-84.7045338647857

4484916_20201_2_0,oudbcp4icz,2.3266286947103496,-108.21905207191207,-39.084489369314724

4372511_20201_2_0,oughwo4icz,1.1096895740771766,-84.07522115764354,-41.83341427339424

3407527_20201_2_0,ouiydo4icz,-0.5615362307442673,-77.16060407004946,-42.31223119331331

4207808_20201_2_0,ouj29p4icz,0.8789255355094631,-50.79784750573657,-55.974697090090004

3079381_20201_2_0,oujj9p4icz,1.6357478082053782,-72.52139152449706,-45.63100164960869

4337951_20201_2_0,ountzo4icz,2.9973574144059967,-43.33347139127011,-57.30884607844162

2953099_20201_2_0,ouoo0o4icz,-1.179162128630611,-104.10026771190067,-28.709811073231364

3550202_20201_2_0,ouu58p4icz,5.060921974237705,-80.91609575189179,-60.56795849894901

2933599_20201_2_0,vuww0p4icz,-1.2149654164921582,-56.86723894512386,-29.36007565019449

4365638_20201_2_0,ouw5go4icz,-4.385551691356994,-59.28799724574648,-16.638441325465706

2978994_20201_2_0,ov06wo4icz,-3.109836098161479,-80.0238852071057,-17.811162512866318
 81%|████████  | 653/811 [19:09<04:27,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 81%|████████  | 654/811 [19:11<04:25,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 81%|████████  | 655/811 [19:12<04:15,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 81%|████████  | 656/811 [19:14<04:10,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 81%|████████  | 657/811 [19:15<04:10,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 81%|████████  | 658/811 [19:17<04:09,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 81%|████████▏ | 659/811 [19:19<04:04,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 81%|████████▏ | 660/811 [19:20<04:09,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 661/811 [19:22<04:07,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 662/811 [19:23<04:00,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 663/811 [19:25<03:51,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 664/811 [19:26<03:46,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 665/811 [19:28<04:04,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 666/811 [19:30<04:03,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 667/811 [19:32<04:06,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 668/811 [19:36<05:35,  2.34s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 669/811 [19:40<06:49,  2.89s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 83%|████████▎ | 670/811 [19:41<05:45,  2.45s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 83%|████████▎ | 671/811 [19:43<05:19,  2.28s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 83%|████████▎ | 672/811 [19:45<04:57,  2.14s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 83%|████████▎ | 673/811 [19:47<04:40,  2.03s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 83%|████████▎ | 674/811 [19:48<04:24,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 83%|████████▎ | 675/811 [19:53<06:06,  2.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 83%|████████▎ | 676/811 [19:54<05:14,  2.33s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 83%|████████▎ | 677/811 [19:56<04:37,  2.07s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 84%|████████▎ | 678/811 [19:57<04:13,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 84%|████████▎ | 679/811 [19:59<04:05,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 84%|████████▍ | 680/811 [20:01<03:52,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 84%|████████▍ | 681/811 [20:02<03:45,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 84%|████████▍ | 682/811 [20:05<04:29,  2.09s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 84%|████████▍ | 683/811 [20:07<04:26,  2.08s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 84%|████████▍ | 684/811 [20:09<04:07,  1.95s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 84%|████████▍ | 685/811 [20:11<03:54,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 85%|████████▍ | 686/811 [20:12<03:49,  1.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 85%|████████▍ | 687/811 [20:14<03:47,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 85%|████████▍ | 688/811 [20:16<03:40,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 85%|████████▍ | 689/811 [20:18<03:30,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 85%|████████▌ | 690/811 [20:21<04:23,  2.17s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 85%|████████▌ | 691/811 [20:22<04:01,  2.02s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 85%|████████▌ | 692/811 [20:28<06:09,  3.10s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 85%|████████▌ | 693/811 [20:29<05:06,  2.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 86%|████████▌ | 694/811 [20:31<04:31,  2.32s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 86%|████████▌ | 695/811 [20:33<03:59,  2.07s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 86%|████████▌ | 696/811 [20:35<04:16,  2.23s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 86%|████████▌ | 697/811 [20:37<03:45,  1.98s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 86%|████████▌ | 698/811 [20:39<03:43,  1.97s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 86%|████████▌ | 699/811 [20:40<03:30,  1.88s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 86%|████████▋ | 700/811 [20:42<03:17,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 86%|████████▋ | 701/811 [20:43<03:12,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 87%|████████▋ | 702/811 [20:45<03:11,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 87%|████████▋ | 703/811 [20:47<03:09,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 87%|████████▋ | 704/811 [20:48<02:59,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 87%|████████▋ | 705/811 [20:50<02:57,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 87%|████████▋ | 706/811 [20:52<03:02,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 87%|████████▋ | 707/811 [20:53<02:52,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 87%|████████▋ | 708/811 [20:55<02:59,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 87%|████████▋ | 709/811 [20:57<03:04,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 88%|████████▊ | 710/811 [21:00<03:13,  1.92s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 88%|████████▊ | 711/811 [21:01<02:58,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 88%|████████▊ | 712/811 [21:03<02:56,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 88%|████████▊ | 713/811 [21:04<02:48,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 88%|████████▊ | 714/811 [21:06<02:39,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 88%|████████▊ | 715/811 [21:07<02:33,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 88%|████████▊ | 716/811 [21:09<02:38,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 88%|████████▊ | 717/811 [21:11<02:36,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 89%|████████▊ | 718/811 [21:12<02:32,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 89%|████████▊ | 719/811 [21:14<02:26,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 89%|████████▉ | 720/811 [21:16<02:27,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 89%|████████▉ | 721/811 [21:17<02:27,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 89%|████████▉ | 722/811 [21:21<03:09,  2.13s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 89%|████████▉ | 723/811 [21:22<02:53,  1.97s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 89%|████████▉ | 724/811 [21:24<02:48,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 89%|████████▉ | 725/811 [21:26<02:35,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 90%|████████▉ | 726/811 [21:27<02:35,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 90%|████████▉ | 727/811 [21:29<02:29,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 90%|████████▉ | 728/811 [21:31<02:24,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 90%|████████▉ | 729/811 [21:33<02:28,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 90%|█████████ | 730/811 [21:34<02:18,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 90%|█████████ | 731/811 [21:36<02:14,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 90%|█████████ | 732/811 [21:37<02:04,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 90%|█████████ | 733/811 [21:40<02:29,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████ | 734/811 [21:41<02:18,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████ | 735/811 [21:43<02:14,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████ | 736/811 [21:44<02:05,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████ | 737/811 [21:46<02:04,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████ | 738/811 [21:51<03:02,  2.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████ | 739/811 [21:53<03:08,  2.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████ | 740/811 [21:55<02:40,  2.27s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████▏| 741/811 [21:57<02:25,  2.08s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████▏| 742/811 [21:58<02:14,  1.94s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 92%|█████████▏| 743/811 [22:00<02:06,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 92%|█████████▏| 744/811 [22:01<01:57,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 92%|█████████▏| 745/811 [22:03<01:55,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 92%|█████████▏| 746/811 [22:05<01:49,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 92%|█████████▏| 747/811 [22:06<01:50,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 92%|█████████▏| 748/811 [22:08<01:54,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 92%|█████████▏| 749/811 [22:11<02:11,  2.12s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 92%|█████████▏| 750/811 [22:13<01:59,  1.95s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 93%|█████████▎| 751/811 [22:15<01:54,  1.92s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 93%|█████████▎| 752/811 [22:16<01:44,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 93%|█████████▎| 753/811 [22:18<01:40,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 93%|█████████▎| 754/811 [22:22<02:14,  2.37s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 93%|█████████▎| 755/811 [22:23<02:01,  2.16s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 93%|█████████▎| 756/811 [22:25<01:46,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 93%|█████████▎| 757/811 [22:27<01:45,  1.96s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 93%|█████████▎| 758/811 [22:28<01:35,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 94%|█████████▎| 759/811 [22:30<01:39,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 94%|█████████▎| 760/811 [22:32<01:32,  1.82s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 94%|█████████▍| 761/811 [22:34<01:32,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 94%|█████████▍| 762/811 [22:35<01:26,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 94%|█████████▍| 763/811 [22:37<01:21,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 94%|█████████▍| 764/811 [22:41<01:51,  2.38s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 94%|█████████▍| 765/811 [22:43<01:38,  2.15s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 94%|█████████▍| 766/811 [22:44<01:32,  2.05s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 95%|█████████▍| 767/811 [22:46<01:25,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 95%|█████████▍| 768/811 [22:48<01:21,  1.89s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 95%|█████████▍| 769/811 [22:49<01:16,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 95%|█████████▍| 770/811 [22:51<01:09,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 95%|█████████▌| 771/811 [22:52<01:06,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 95%|█████████▌| 772/811 [22:54<01:06,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 95%|█████████▌| 773/811 [22:56<01:05,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 95%|█████████▌| 774/811 [22:58<01:06,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 96%|█████████▌| 775/811 [23:00<01:02,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 96%|█████████▌| 776/811 [23:01<01:01,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 96%|█████████▌| 777/811 [23:04<01:12,  2.14s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 96%|█████████▌| 778/811 [23:06<01:04,  1.97s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 96%|█████████▌| 779/811 [23:08<01:00,  1.88s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 96%|█████████▌| 780/811 [23:09<00:54,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 96%|█████████▋| 781/811 [23:11<00:52,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 96%|█████████▋| 782/811 [23:13<00:51,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 97%|█████████▋| 783/811 [23:14<00:48,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 97%|█████████▋| 784/811 [23:16<00:44,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 97%|█████████▋| 785/811 [23:18<00:44,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 97%|█████████▋| 786/811 [23:19<00:42,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 97%|█████████▋| 787/811 [23:21<00:42,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 97%|█████████▋| 788/811 [23:23<00:40,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 97%|█████████▋| 789/811 [23:25<00:38,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 97%|█████████▋| 790/811 [23:27<00:39,  1.88s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 98%|█████████▊| 791/811 [23:29<00:36,  1.82s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 98%|█████████▊| 792/811 [23:30<00:32,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 98%|█████████▊| 793/811 [23:32<00:29,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 98%|█████████▊| 794/811 [23:33<00:28,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 98%|█████████▊| 795/811 [23:35<00:27,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 98%|█████████▊| 796/811 [23:38<00:30,  2.06s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 98%|█████████▊| 797/811 [23:40<00:26,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 98%|█████████▊| 798/811 [23:41<00:24,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 99%|█████████▊| 799/811 [23:43<00:23,  1.92s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 99%|█████████▊| 800/811 [23:45<00:20,  1.87s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 99%|█████████▉| 801/811 [23:47<00:18,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 99%|█████████▉| 802/811 [23:49<00:16,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 99%|█████████▉| 803/811 [23:50<00:13,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 99%|█████████▉| 804/811 [23:52<00:11,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 99%|█████████▉| 805/811 [23:53<00:09,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 99%|█████████▉| 806/811 [23:55<00:08,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
100%|█████████▉| 807/811 [23:56<00:05,  1.46s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
100%|█████████▉| 808/811 [23:57<00:04,  1.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
100%|█████████▉| 809/811 [23:59<00:03,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
100%|█████████▉| 810/811 [24:00<00:01,  1.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
100%|██████████| 811/811 [24:03<00:00,  1.84s/it]100%|██████████| 811/811 [24:03<00:00,  1.78s/it]

5229284_20201_2_0,ov1nmn4icz,-1.1515724815825734,-110.41676662118311,-25.88790566619278

2631820_20201_2_0,ov5bsn4icz,-0.45037600758026464,-123.13783813731169,-30.810076703001243

1938598_20201_2_0,ov6dun4icz,1.3083231085735139,-87.16185683969135,-46.486157891890784

3935585_20201_2_0,ov7y0o4icz,0.234963040499415,-77.07825190714877,-42.2420430171

4307932_20201_2_0,ov9spo4icz,0.3761889883132067,-118.58335213786208,-33.65573777389764

1645604_20201_2_0,ova5jn4icz,-3.4262676005015393,-91.50078369661864,-31.469571974593606

4031604_20201_2_0,ovf9pn4icz,-1.1119307496560047,-103.95681456288781,-30.664001351083925

5388129_20201_2_0,ovhzgo4icz,3.7847192286641267,-87.2232882996102,-52.6204406871324

3280595_20201_2_0,oviu0o4icz,0.9591853753471072,-100.58280683328871,-36.25556984860452

4026224_20201_2_0,ovkdgo4icz,1.0114550977329244,-70.34139523640104,-47.64900952194465

5122565_20201_2_0,bjearo4icz,2.8922536315502487,-57.32611592457394,-46.445753577121835

3592784_20201_2_0,ovyopo4icz,-0.12760665518000913,-42.45286285685427,-48.00640416678604

1190977_20201_2_0,ow6lwo4icz,-3.062692798729163,-112.85425291925367,-14.632146558518798

3272292_20201_2_0,ow90wn4icz,-1.1042178690407503,-115.37641737290352,-17.63002704974585

4528857_20201_2_0,owbx3o4icz,-1.8655263865226344,-111.56706676403277,-26.707845003565254

2197418_20201_2_0,owf6bp4icz,-1.3456728748767557,-86.88857339820021,-49.12851392169628

5905323_20201_2_0,owm9pn4icz,0.16181386462592867,-114.78938693808851,-36.48336622865588

3195428_20201_2_0,owpyao4icz,-1.3702664547232686,-73.93038445318592,-38.90823371211263

3851205_20201_2_0,owrh9p4icz,0.7538973431219437,-55.30405883763356,-33.26036621226906

2265570_20201_2_0,owrz5p4icz,-0.3524567212903704,-83.96745087358764,-32.73765918555557

2641914_20201_2_0,owu2io4icz,-5.131356579062121,-101.70179781029859,-7.822323873231767

3838587_20201_2_0,oww3rn4icz,15.448609478906638,-94.60768329033661,-108.76260296291846

3809282_20201_2_0,owwvjp4icz,0.5196597884356778,-89.25642327771516,-37.87363763568419

4774701_20201_2_0,owx4on4icz,4.094966847270473,-114.5029417499602,-39.51936896718746

5501783_20201_2_0,owxmmn4icz,0.43481614203578167,-86.98572789678605,-36.57777307954653

1118933_20201_2_0,ox3xqo4icz,2.1579648751050735,-103.03984950898254,-49.15587335669082

2015230_20201_2_0,ox423p4icz,7.878304849056343,-78.41781546120359,-91.71891644847945

2955731_20201_2_0,ox92nn4icz,-0.6363461537193613,-87.97871602729484,-34.91018696960144

1110380_20201_2_0,oxe2go4icz,0.6884144608224859,-79.80645813011697,-30.866368661115757

2315179_20201_2_0,oxjcvo4icz,-8.505079086983812,-107.40064574962418,20.09864038415502

5157970_20201_2_0,oxjyip4icz,-1.0021648532551612,-72.56650147262306,-30.16315490195035

5949221_20201_2_0,oxkv3o4icz,0.48669154552834415,-88.43367578936716,-16.133519714372028

3177302_20201_2_0,oxmxjo4icz,-3.0190312806981594,-48.87284631434048,-13.592776313065471

1546340_20201_2_0,oxpgjo4icz,1.0345487011188743,-131.82945631332123,-40.462197170938026

4561346_20201_2_0,oxquoo4icz,-2.137506181408813,-72.83156856258506,-15.95224325161665

1957596_20201_2_0,oxs7gn4icz,-1.5309709004027725,-110.06868685104561,-21.642994853597685

5545637_20201_2_0,oxuyao4icz,-1.2480042470567927,-89.03437864969075,-24.479730329644923

2380069_20201_2_0,oxwtun4icz,-1.0970253454352508,-70.12351474611566,-27.547810811738188

1769893_20201_2_0,oxyh8o4icz,1.0723754395742195,-71.07336523054403,-52.96780941042432

1469289_20201_2_0,oxzuqo4icz,1.245262651479046,-26.66365477697832,-54.75819356021984

1459090_20201_2_0,oy3fpn4icz,-2.0835115137888445,-117.00260465474219,-18.09926154846488

4475693_20201_2_0,oy4bxo4icz,-0.9551985448877569,-84.92442741205389,-32.72330109694947

1467330_20201_2_0,oybymn4icz,0.10404540638955206,-103.74069277927134,-45.98834420700689

3111873_20201_2_0,oyd8go4icz,18.325194671096845,-20.665138401895632,-122.81349621781476

5164487_20201_2_0,oyetfp4icz,1.3206214943756196,-107.37792009287378,-42.91938543425995

2334653_20201_2_0,oyg73o4icz,-1.4270728253241936,-49.534849314136125,-22.074473358561107

4789062_20201_2_0,oyiqap4icz,-2.85852564153255,-113.87422605478645,-3.5923874224251477

2713717_20201_2_0,oyni7o4icz,-1.6003931480646194,-97.96975671679633,-26.185287012799947

4742823_20201_2_0,oyurfp4icz,-4.527483072722108,-132.2808851876895,-20.249265175347105

3195978_20201_2_0,oyvsyo4icz,0.49837123198392635,-125.7949375115052,-46.56763437537663

2039454_20201_2_0,oyyjdo4icz,-1.7901903088261903,-73.78184603870483,-32.06715747408367

2853138_20201_2_0,oyzfon4icz,2.6346365656107658,-55.82619549127605,-42.0028076165454

3679047_20201_2_0,oz2ctn4icz,2.27912727198607,-64.62400964003223,-71.5336143715803

2071008_20201_2_0,oz5jno4icz,6.944209612216751,-84.96781778743298,-69.52962558328645

5020719_20201_2_0,ozaj4o4icz,1.557696681695612,-110.19319674618706,-37.361781257017014

4453793_20201_2_0,ozcmjp4icz,1.8734081993919176,-100.00604093085965,-41.93512574074835

5775456_20201_2_0,ozepjn4icz,-2.0619040548724397,-106.45988928342652,-17.75377044264856

4536491_20201_2_0,ozhgwn4icz,-3.615538166856369,-75.5049148063577,-4.848097293706303

5403762_20201_2_0,ozlk5p4icz,2.7548579792214367,-87.73821985774444,-35.93181892913229

2747364_20201_2_0,ozme1o4icz,2.2632006694972358,-82.92937794691264,-46.46440027469069

5334246_20201_2_0,ozn22o4icz,-0.5372876214109309,-119.71802278335574,-31.391110289527205

4313877_20201_2_0,ozpnxn4icz,0.6514430102235801,-121.4496045359522,-34.03333740327264

4361029_20201_2_0,ozrxjp4icz,0.6309401481075394,-117.89407328961633,-35.62412218318737

1790542_20201_2_0,ozt9lo4icz,1.5104523053057388,-124.13585470434683,-54.06603493392653

5632605_20201_2_0,ozwopo4icz,2.527195241981564,-35.08165541919334,-45.70475495712802

4574602_20201_2_0,ozzk7o4icz,0.8519764835955143,-78.38049157945571,-35.87552841468538

4415096_20201_2_0,p04k8p4icz,1.2604106439175213,-98.7756427345982,-41.57731208628823

3524507_20201_2_0,p0998o4icz,-1.9307436395421953,-126.37330215660833,-27.06123953261975

5757590_20201_2_0,p0c9uo4icz,-0.8909389899317051,-92.42471085246902,-36.88467586820255

3551154_20201_2_0,p0e1oo4icz,3.8091151424858083,-95.46840416567005,-53.969707786896606

1871920_20201_2_0,p0knip4icz,0.39790987200653627,-119.37941847583957,-28.97008963497531

4894367_20201_2_0,p0lijo4icz,-1.5324561939210848,-106.1437228643471,-26.38211727613492

4422998_20201_2_0,p0mrqo4icz,1.7142419729992289,-114.88796707578106,-25.00228626394832

3010402_20201_2_0,p0pt3o4icz,-1.473206551400252,-137.17273476938772,-16.717071943101033

1057848_20201_2_0,p0vzno4icz,3.6098418858683736,-63.77668184238064,-59.110652387650475

5773078_20201_2_0,p0w5rn4icz,0.8106427425045488,-85.71363783400747,-44.230772750680146

3492931_20201_2_0,p0w8jn4icz,-0.3287045508663121,-96.10108784598197,-49.621467029643505

3471599_20201_2_0,p10k0p4icz,-0.7262603300991222,-114.75849772119105,-35.28222763167446

5449896_20201_2_0,p10lkn4icz,-2.6670173090226004,-91.69304831926257,-19.119499447992368

4819871_20201_2_0,p1dbap4icz,4.361583374067034,-53.43579477211989,-65.92784916964523

5585724_20201_2_0,p1dz3o4icz,2.5574678964952335,-132.24317582829113,-33.795875596052554

4809425_20201_2_0,p1e01p4icz,-3.8015864560492156,-90.48643160522471,-25.23987587275525

5454908_20201_2_0,p1ep6n4icz,1.3236596153766886,-88.19818829049655,-48.68613451232845

3303111_20201_2_0,p1fiap4icz,2.485546076402108,-91.58445581615226,-56.61749257318141

4212658_20201_2_0,p1h7qo4icz,1.6916266277569498,-100.11552561935801,-47.2255676307432

1783788_20201_2_0,p1p5lo4icz,0.3321139403248884,-119.36768131035456,-23.77665020791639

5120417_20201_2_0,p1rbbn4icz,-0.5927273488486501,-132.39433214270824,-29.73406369191217

4981507_20201_2_0,p1v9tn4icz,-2.852373427151178,-113.51413565958805,-18.00823273081143

5766143_20201_2_0,p1xorn4icz,1.1663010388083612,-124.27862753109781,-49.649402042348555

3701495_20201_2_0,p25kbp4icz,0.3598965093121986,-64.77204357384508,-57.41024751987142

5654035_20201_2_0,p25non4icz,-1.6710195434975714,-84.171364504124,-12.838152181219712

3092791_20201_2_0,p2ffio4icz,-2.320414045442256,-64.19879221476083,-10.833798149361641

2756015_20201_2_0,p2l9ep4icz,2.297353200028474,-27.37458622949947,-49.17953294344636

4242683_20201_2_0,p2q8oo4icz,-1.9353464170453953,-116.9888218306956,-25.872356916080065

2780898_20201_2_0,p2qnip4icz,-0.3240977597066169,-68.80172304577755,-20.590840636329204

5074446_20201_2_0,p2s5wo4icz,-0.6034846249734259,-110.62547502634101,-39.72966648298491

4524587_20201_2_0,p2w2kp4icz,1.1379511546555012,-59.80680479500859,-44.58809467236786

2988998_20201_2_0,p2zijp4icz,1.1512910963464733,-113.75114710305792,-29.956599540614377

4157317_20201_2_0,p32oxo4icz,-3.0735073502295123,-56.0722420051525,-19.176165933241535

5974798_20201_2_0,p37qcn4icz,8.329239675351541,-70.89136802351015,-89.09229748858291

2727820_20201_2_0,p3b6to4icz,3.1628836580405917,-58.539875419803394,-50.379500688330225

5932031_20201_2_0,p3ewgo4icz,2.0471015457531805,-91.39889788598214,-56.85267765534131

3998473_20201_2_0,p3fien4icz,0.1585217246899758,-128.4915850250996,-26.45004740208637

4824552_20201_2_0,p3i7cp4icz,0.4662601685963942,-112.5747508691808,-46.70150540879956

1423237_20201_2_0,p3lcfo4icz,2.2934874508777865,-74.21416823409052,-39.277540021503256

5639601_20201_2_0,4f0uwn4icz,2.986318607877911,-83.94718998582627,-46.603266483405676

1287447_20201_2_0,p3qwip4icz,2.7481784316185855,-101.09077267097251,-46.87568355312442

3829878_20201_2_0,p405fn4icz,15.874038189255462,-71.9275042769982,-92.94962794099837

1610941_20201_2_0,p44r8o4icz,-1.9425258920624313,-111.50973441273663,-24.975841926259875

1857178_20201_2_0,p456bo4icz,1.160976172731918,-79.64768813171182,-43.23800171510295

1784697_20201_2_0,p4a3fn4icz,2.770494778073501,-85.20713788465068,-51.49569291989093

4305402_20201_2_0,p4aiso4icz,-0.35231620983842954,-79.68626536863763,-26.83374313579091

3534560_20201_2_0,p4aixn4icz,0.2390413875845475,-115.42881880257187,-38.60530652220267

4576627_20201_2_0,p4azco4icz,1.1960783498007923,-64.00703525218714,-33.03612531218005

2270485_20201_2_0,p4ca7p4icz,-1.7487668263907614,-140.89016810032365,-27.794900237539622

4764085_20201_2_0,p4gcdp4icz,10.74912626260833,-84.73567079968754,-92.00657545277511

5829310_20201_2_0,p4mnfn4icz,0.6791566313354612,-111.77848664037691,-34.869206522818274

1993768_20201_2_0,p4mzrn4icz,1.004630132765946,-69.65584803462943,-36.51152724898856

4731027_20201_2_0,p4nz5o4icz,1.1981660956616345,-96.85730945490042,-38.086240822317095

4343084_20201_2_0,p4o2cp4icz,0.9475829141772357,-109.9356652791081,-55.84487502397256

4630839_20201_2_0,p4oblo4icz,1.9779176580250326,-102.67757435714341,-59.22214362014711

5975581_20201_2_0,p4v53p4icz,-0.8147352795761639,-75.0169814252261,-18.96699977847973

1989243_20201_2_0,p4vh2o4icz,-2.267060116003275,-97.421920179246,-11.218385576696335

5636525_20201_2_0,p4wgap4icz,-0.35641115259230904,-67.56209831366468,-17.940128146546456

1485449_20201_2_0,p4ypwn4icz,1.16431029678404,-102.68155497311366,-31.704172816601243

3308283_20201_2_0,p4zhcn4icz,1.9672125175057353,-82.83968027591615,-52.457429224216085

2741462_20201_2_0,p525fo4icz,-7.9387117729561965,-109.63234027957549,10.500618031598833

2719869_20201_2_0,p52s5p4icz,-0.33787538418283447,-89.0530041109451,-24.352472866237036

2352182_20201_2_0,p54vcn4icz,-1.4371844557443432,-116.16689099519547,-22.2936497502549

1296885_20201_2_0,p558pn4icz,0.7790041240330775,-88.44021670238996,-43.42292736585431

4306656_20201_2_0,p583ho4icz,1.3086327601057863,-76.61353462631996,-64.60714174723886

1625559_20201_2_0,p5aaxn4icz,1.5715567891857454,-96.80158776064837,-38.01211763858092

5890870_20201_2_0,p5ad7o4icz,0.7561178448515807,-114.91748120422625,-39.382026814466485

1736601_20201_2_0,p5cejn4icz,-1.4833516626839665,-109.25052277619963,-26.042624037486235

4575650_20201_2_0,p5cldo4icz,-1.6775778032739221,-132.0409701605806,-24.950148130184687

1698149_20201_2_0,p5g03o4icz,-4.057680893747989,-117.03889035029565,4.222834884188018

2796384_20201_2_0,p5iaxn4icz,-1.3294006047445885,-123.38690230044216,-25.482649817675778

5070854_20201_2_0,p5k42p4icz,-2.779111306088553,-99.49841995440022,-22.388037716056004

1267065_20201_2_0,p5kien4icz,-1.1181110049688467,-119.53448873894834,-15.83996010097023

2439187_20201_2_0,p5tecn4icz,2.2754543418330386,-105.64515794957208,-42.53430128526227

5964854_20201_2_0,p5tp4p4icz,-3.3523939368025935,-142.55886000940694,-29.387097960439988

5207887_20201_2_0,p5xsto4icz,-2.31459207501955,-57.077031856127576,-15.63550183158992

3122319_20201_2_0,p5ydmo4icz,1.7183720363664101,-55.81612597218253,-35.06651881820815

1641601_20201_2_0,p62slo4icz,-1.368934239473631,-114.88039271700148,-40.903198674063816

2652008_20201_2_0,p6aspn4icz,1.950442746356953,-80.46274007262772,-34.76964293559166

4848516_20201_2_0,p6dzwo4icz,0.9757011460937588,-61.599600503914445,-42.819564354886396

4602853_20201_2_0,p6fl2p4icz,-1.7450295119340025,-66.97136225047919,-26.612617219344656

1467242_20201_2_0,p6h8tn4icz,-2.4557448448563,-67.97209728971296,-29.284559801841084

2937241_20201_2_0,p6io7n4icz,-5.4406322333659,-68.85286671116111,-27.713528986954074

3724906_20201_2_0,p6rdro4icz,-0.2823101384198575,-47.51932768488001,-18.719419212897762

1071298_20201_2_0,p6tlxo4icz,1.2115372112402927,-105.76889209652597,-45.61123896122268

3569662_20201_2_0,p6u7jp4icz,0.06568503495239668,-123.04362778413784,-43.22324823399072

1134759_20201_2_0,p74cgo4icz,-3.24503611019337,-107.62983113053721,-19.241692744754445

4499958_20201_2_0,p79qwo4icz,2.7983513052244167,-49.12343262044374,-45.16932940463134

4101053_20201_2_0,p7b80p4icz,0.3370714973638321,-87.1991250708246,-34.351426051898926

3161146_20201_2_0,p7gdwo4icz,32.256558353562504,126.99494050089837,-122.65883103163928

4183131_20201_2_0,p7htqn4icz,-2.0838423388287963,-103.78727640100612,-46.240686079217284

4127364_20201_2_0,p7i93o4icz,0.4379608322818641,-72.3394531309583,-34.270923449934756

1452671_20201_2_0,p7oczo4icz,-1.3252985032319717,-94.19046813777942,-26.77319677775114

1485366_20201_2_0,p7rcdp4icz,-0.4715985224019567,-100.17911957455317,-36.555231633364315

5959237_20201_2_0,p7x5en4icz,4.637826469017431,-48.39175242285924,-55.193049769017776

2844937_20201_2_0,p7xpun4icz,-3.9693837930427613,-118.50276707825645,0.20468063078882892

5572157_20201_2_0,p81rmn4icz,0.02773846426722643,-86.48973568244986,-47.631036144302584

1713797_20201_2_0,p82l5p4icz,0.4811061213307992,-92.04793561834637,-28.973345205391198

5083789_20201_2_0,p84dzo4icz,1.2568362230998873,-98.68589342625057,-31.572683369029136

3389906_20201_2_0,p88e0p4icz,2.0881587208572348,-102.08870845223484,-50.111291925047

3127396_20201_2_0,p88txo4icz,3.4108870431943847,-75.59281928657978,-66.5756604446271

3312964_20201_2_0,p8ch9p4icz,0.060120465298114274,-107.2609098931992,-26.929187474599132

2489176_20201_2_0,p8i6go4icz,-0.019336736440649264,-113.14909838882866,-40.917459182984146

4143369_20201_2_0,p8ir6o4icz,-2.338366187035431,-99.20579343234817,-15.90345586361073

5467884_20201_2_0,p8jbnn4icz,-0.7741403038082183,-84.26304955849369,-25.2168621998797

5631799_20201_2_0,p8ubep4icz,0.47620165600608855,-70.20634740509911,-28.850510261567052

5428695_20201_2_0,p8vpho4icz,2.1138453863050355,-67.79762630268073,-34.46488042791273

2887052_20201_2_0,p92x8o4icz,0.43763428374709656,-117.306256216735,-44.49048465336941

4661471_20201_2_0,p95cdo4icz,2.1066721478928105,-44.81374225893666,-45.78024605664726

5926698_20201_2_0,p95oso4icz,-0.4551070802482514,-120.49553719518454,-46.13893959728624

2675388_20201_2_0,p98p2p4icz,-1.3446353934790127,-73.20424379168293,-33.918564160244074

5802456_20201_2_0,p98s9o4icz,1.2156274998219456,-62.61156967241098,-53.80012841485754

4727925_20201_2_0,p98ubo4icz,4.104814315143732,-80.86751310210244,-57.10819601126026

1676046_20201_2_0,ar8spn4icz,1.2391003098026352,-106.56284937770118,-36.71753728064077

5830124_20201_2_0,p9g56p4icz,-0.3832560481884376,-89.18456887054936,-26.149320634204514

3817397_20201_2_0,p9jjdn4icz,6.4347711487981565,-109.80559222743835,-67.20733923027282

4165744_20201_2_0,p9kdep4icz,3.9385975366205015,-90.97000161654947,-62.01104747282935

2835692_20201_2_0,p9nvcp4icz,-1.1533789514586266,-115.09373334075707,-31.373209572855814

6024111_20201_2_0,p9o4mn4icz,4.514340926642744,-86.57256049557606,-55.646372046179934

2399373_20201_2_0,pa0iko4icz,-6.142428629586702,-96.42660396535345,6.747197195717675

5849184_20201_2_0,pa1zln4icz,-0.037716086532447395,-116.97008235017907,-38.34393497401794

4654788_20201_2_0,pa59oo4icz,-15.166635773233429,-84.70832449056002,53.60536361519847

5110210_20201_2_0,pa82en4icz,-0.9172233022236955,-72.09880412517171,-29.798563051957046

1492405_20201_2_0,paaf3o4icz,2.046085068728605,-95.9834733066647,-41.402333818306886

3954714_20201_2_0,paaihp4icz,-3.3637246527685445,-95.22543843406666,-25.543549321413565

2645850_20201_2_0,pab6eo4icz,2.653271918809062,-108.89621705210993,-45.833053302312805

2968958_20201_2_0,pab8fn4icz,-0.6376233113280774,-47.55341058632757,-40.08183711635351

5305425_20201_2_0,pae53o4icz,-0.8355838378455481,-108.50452197003625,-36.7899317025238

5566513_20201_2_0,paewip4icz,0.09045509849469761,-104.89897166803385,-42.51676359772671

1763654_20201_2_0,pagpjn4icz,-0.2907079170678242,-116.38491040172471,-36.01382864633865

5807774_20201_2_0,pagsbn4icz,0.531547323956144,-108.52326603160262,-46.603656155866304

3925514_20201_2_0,pahi7n4icz,-2.8623988192671868,-119.51228302183358,-26.397916220596898

4273330_20201_2_0,pahnbo4icz,-1.5847684157289388,-123.85557661924466,-21.06835375708276

5579806_20201_2_0,n4qf7o4icz,-0.6814531379593753,-114.84791264331113,-36.29044723834596

5676391_20201_2_0,panmin4icz,0.7999355914378058,-134.1873799644722,-46.361845550867386

4664528_20201_2_0,parfpo4icz,-4.385059569992768,-73.77982781865836,-10.185358416944169

4350229_20201_2_0,pb31bp4icz,0.6405031295179862,-84.07488517853022,-41.58253319500744

1735858_20201_2_0,pb90ap4icz,16.865989086723506,-36.01888287815464,-143.03010330963002

5789024_20201_2_0,pbb23p4icz,1.4417957008259692,-104.33256537560229,-47.28680136449782

2363877_20201_2_0,pbi4ep4icz,1.5489982998506622,-70.392041051619,-72.27901315620943

1401327_20201_2_0,pbl7cp4icz,0.6058667659819964,-57.17574805549711,-45.2533552778533

2549727_20201_2_0,pbntao4icz,2.0719993043282856,-112.44276753908349,-50.873438383027434

5953288_20201_2_0,pbtw9p4icz,-3.956515598688554,-146.46770288092844,-22.163933501777592

3964560_20201_2_0,pbuaqo4icz,1.8747270853659905,-138.66587748549122,-65.48195407134571

5246820_20201_2_0,pbub0p4icz,16.18544647688716,-105.87853962998787,-111.51441249752268

2277832_20201_2_0,pbuk7p4icz,3.499022639386055,-74.22900947094115,-45.982015870691185

1406077_20201_2_0,pbyqvn4icz,5.695284074405676,-76.52781330353082,-89.12157873364566

4022867_20201_2_0,pc0pip4icz,1.1180374660206507,-64.52070845489104,-38.05121190122341

3335868_20201_2_0,pc4fyn4icz,-1.169659922973989,-100.96364724152284,-35.51259892370969

4336126_20201_2_0,pc4jyo4icz,0.7318895390026148,-30.10754196033082,-37.49502104887064

3141879_20201_2_0,pc5vfo4icz,-4.552494179025321,-128.7750325734888,-19.842092363702292

2490743_20201_2_0,pcaafo4icz,0.05534212303185685,-68.52067612470336,-42.33603137264727

2655160_20201_2_0,pcdsjp4icz,-2.139662199079935,-72.7910255742253,-22.209450678940414

3025035_20201_2_0,pcenvn4icz,1.6789376035067498,-94.49649600044455,-42.53871811545693

5840287_20201_2_0,pcr4do4icz,0.4419258399840451,-108.27848307225798,-38.125593009663476

4748424_20201_2_0,pcsdrn4icz,-0.11021349591013908,-77.68795910146616,-42.58422677464168

5361026_20201_2_0,pcudyo4icz,-0.5985797422248442,-95.93518408224045,-44.69230974693329

2876065_20201_2_0,pddu7o4icz,-1.330600479823005,-77.61878485326048,-30.377058857434577

5302231_20201_2_0,pdfizn4icz,-1.2480541097477778,-77.05421589568249,-31.07532848051801

3492186_20201_2_0,pdkumo4icz,0.42730219995775776,-92.3990249783887,-28.716397786879654

3168675_20201_2_0,pdo0rn4icz,-2.141277488944187,-137.59680182594263,-13.570080690849053

2191977_20201_2_0,pdph4o4icz,-0.6022197527670992,-129.31838292072715,-34.56580363613054

2651090_20201_2_0,pdptsn4icz,2.5519168625877504,-82.5024373753898,-32.080539233323876

5746370_20201_2_0,pdujvn4icz,-0.14517925609908097,-75.41301451348784,-27.29610599137827

3983993_20201_2_0,pduq2o4icz,-1.6163471097755473,-105.6049101374301,-32.13236671835722

3250448_20201_2_0,pdyfgp4icz,-0.9100270459199494,-122.03107950088301,-45.47974513595085

5882588_20201_2_0,pe11vo4icz,5.910545844458344,-119.53669299419056,-77.79576564607098

2760799_20201_2_0,pe1swn4icz,-1.9614258742467297,-150.53118238877838,-11.82736959768016

5669716_20201_2_0,pe4cbp4icz,-1.7064098036590545,-71.47342091116482,-14.527163424211267

5642430_20201_2_0,pe4jrn4icz,0.5500291353601494,-113.32054673009861,-44.0562140027552

4038634_20201_2_0,pe5eko4icz,1.1535709734682027,-83.43409976658725,-41.84303024653916

4775577_20201_2_0,pe5nmn4icz,-0.20839602724027803,-70.60495761895714,-30.69322313995025

5447100_20201_2_0,pe7wpo4icz,2.073693698375915,-95.96788991548496,-44.37952898341038

2751150_20201_2_0,pea5ao4icz,-0.3441668528814708,-86.78384282226978,-33.52596457560938

5994827_20201_2_0,pejf9p4icz,0.634914794518102,-99.24901768385871,-22.837068064972442

5057300_20201_2_0,penc8p4icz,0.5549048045664061,-94.8094790854482,-61.783988524793756

1912917_20201_2_0,peotlo4icz,0.03288023822631727,-101.20735547480012,-41.59901143463709

2952016_20201_2_0,peqiln4icz,-3.0203754979852935,-111.7715779185873,-24.385149278882196

5200038_20201_2_0,pesl2p4icz,0.29970400928032437,-50.89307928399404,-34.025346711509485

1561338_20201_2_0,peu7zo4icz,1.028041013082612,-105.7654452899456,-29.645414701574794

2763655_20201_2_0,peyadp4icz,-5.098891314547824,-133.87457890288826,-30.2668921349118

4182175_20201_2_0,pf026p4icz,-2.2563769317017246,-92.98809388818913,-13.979664410188462

5229903_20201_2_0,pf3e2o4icz,0.8992573535726938,-122.06832413612386,-44.69324952719839

5408418_20201_2_0,pf4gto4icz,0.6733170191479092,-98.07407588081784,-28.694575080369745

1619226_20201_2_0,pf829o4icz,0.8886694269952755,-49.14088346294619,-50.9553731057091

3793934_20201_2_0,egfoln4icz,-3.560890343010342,-116.52809059472341,-9.040818687268356

/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/torch/cuda/__init__.py:52: UserWarning: CUDA initialization: Found no NVIDIA driver on your system. Please check that you have an NVIDIA GPU and installed a driver from http://www.nvidia.com/Download/index.aspx (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729006826/work/c10/cuda/CUDAFunctions.cpp:100.)
  return torch._C._cuda_getDeviceCount() > 0
  0%|          | 0/102 [00:00<?, ?it/s]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  1%|          | 1/102 [00:01<02:44,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  2%|▏         | 2/102 [00:03<02:37,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  3%|▎         | 3/102 [00:04<02:36,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  4%|▍         | 4/102 [00:06<02:30,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  5%|▍         | 5/102 [00:07<02:30,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  6%|▌         | 6/102 [00:09<02:27,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  7%|▋         | 7/102 [00:10<02:29,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  8%|▊         | 8/102 [00:12<02:32,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▉         | 9/102 [00:14<02:28,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 10%|▉         | 10/102 [00:15<02:24,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 11%|█         | 11/102 [00:17<02:25,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 12%|█▏        | 12/102 [00:19<02:29,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 13%|█▎        | 13/102 [00:20<02:26,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 14%|█▎        | 14/102 [00:22<02:23,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 15%|█▍        | 15/102 [00:24<02:29,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 16%|█▌        | 16/102 [00:25<02:28,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 17%|█▋        | 17/102 [00:27<02:24,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 18/102 [00:29<02:16,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 19%|█▊        | 19/102 [00:30<02:15,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 20%|█▉        | 20/102 [00:32<02:09,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 21%|██        | 21/102 [00:33<02:08,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 22%|██▏       | 22/102 [00:35<02:13,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 23%|██▎       | 23/102 [00:37<02:07,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 24%|██▎       | 24/102 [00:39<02:13,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▍       | 25/102 [00:40<02:06,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▌       | 26/102 [00:42<02:11,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 26%|██▋       | 27/102 [00:44<02:08,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 28/102 [00:45<02:07,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 28%|██▊       | 29/102 [00:47<02:01,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 29%|██▉       | 30/102 [00:48<01:56,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 30%|███       | 31/102 [00:50<01:57,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 31%|███▏      | 32/102 [00:52<01:56,  1.66s/it] 32%|███▏      | 33/102 [00:53<01:50,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 33%|███▎      | 34/102 [00:55<01:54,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 34%|███▍      | 35/102 [00:58<02:21,  2.12s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 35%|███▌      | 36/102 [01:00<02:09,  1.97s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▋      | 37/102 [01:01<01:59,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 37%|███▋      | 38/102 [01:04<02:09,  2.02s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 38%|███▊      | 39/102 [01:05<01:59,  1.89s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 39%|███▉      | 40/102 [01:07<01:53,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 40%|████      | 41/102 [01:09<01:47,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 41%|████      | 42/102 [01:10<01:43,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 42%|████▏     | 43/102 [01:12<01:37,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 43%|████▎     | 44/102 [01:14<01:37,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 44%|████▍     | 45/102 [01:15<01:34,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▌     | 46/102 [01:17<01:33,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 46%|████▌     | 47/102 [01:19<01:30,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 47%|████▋     | 48/102 [01:20<01:32,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 48%|████▊     | 49/102 [01:22<01:29,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 49%|████▉     | 50/102 [01:24<01:31,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|█████     | 51/102 [01:26<01:27,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 51%|█████     | 52/102 [01:27<01:24,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 52%|█████▏    | 53/102 [01:29<01:21,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 53%|█████▎    | 54/102 [01:31<01:23,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 54%|█████▍    | 55/102 [01:32<01:21,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▍    | 56/102 [01:34<01:18,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 56%|█████▌    | 57/102 [01:40<02:10,  2.90s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 57%|█████▋    | 58/102 [01:42<01:53,  2.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 58%|█████▊    | 59/102 [01:43<01:39,  2.32s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 59%|█████▉    | 60/102 [01:45<01:29,  2.12s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 60%|█████▉    | 61/102 [01:46<01:19,  1.94s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 61%|██████    | 62/102 [01:48<01:13,  1.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 62%|██████▏   | 63/102 [01:50<01:09,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 63%|██████▎   | 64/102 [01:52<01:08,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▎   | 65/102 [01:53<01:06,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 65%|██████▍   | 66/102 [01:55<01:00,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 66%|██████▌   | 67/102 [01:57<01:07,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 67%|██████▋   | 68/102 [01:59<01:01,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 68%|██████▊   | 69/102 [02:01<00:59,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 69%|██████▊   | 70/102 [02:02<00:56,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 70%|██████▉   | 71/102 [02:04<00:57,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 71%|███████   | 72/102 [02:06<00:54,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 72%|███████▏  | 73/102 [02:08<00:50,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 74/102 [02:09<00:48,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 74%|███████▎  | 75/102 [02:11<00:46,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▍  | 76/102 [02:13<00:44,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▌  | 77/102 [02:15<00:44,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 76%|███████▋  | 78/102 [02:16<00:41,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 77%|███████▋  | 79/102 [02:19<00:46,  2.02s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 78%|███████▊  | 80/102 [02:21<00:42,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 79%|███████▉  | 81/102 [02:23<00:40,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 80%|████████  | 82/102 [02:24<00:36,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 81%|████████▏ | 83/102 [02:26<00:34,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 84/102 [02:30<00:46,  2.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 83%|████████▎ | 85/102 [02:32<00:38,  2.24s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 84%|████████▍ | 86/102 [02:33<00:33,  2.09s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 85%|████████▌ | 87/102 [02:35<00:28,  1.90s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 86%|████████▋ | 88/102 [02:36<00:24,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 87%|████████▋ | 89/102 [02:38<00:23,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 88%|████████▊ | 90/102 [02:40<00:21,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 89%|████████▉ | 91/102 [02:42<00:19,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 90%|█████████ | 92/102 [02:43<00:17,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████ | 93/102 [02:45<00:16,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 92%|█████████▏| 94/102 [02:47<00:13,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 93%|█████████▎| 95/102 [02:48<00:11,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 94%|█████████▍| 96/102 [02:50<00:09,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 95%|█████████▌| 97/102 [02:51<00:07,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 96%|█████████▌| 98/102 [02:54<00:07,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 97%|█████████▋| 99/102 [02:55<00:05,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 98%|█████████▊| 100/102 [02:58<00:03,  1.97s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 99%|█████████▉| 101/102 [03:01<00:02,  2.24s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
100%|██████████| 102/102 [03:03<00:00,  2.18s/it]100%|██████████| 102/102 [03:03<00:00,  1.80s/it]
Trying to load from /users/rhydian/self-supervised-project/model_weights/SSECEncodersBothBoth
==> Resuming model trained for 106 epochs...
Trying to load from ../model_weights/angle_regressor4
==> Resuming model trained for 7 epochs...
3287308_20201_2_0,mxejin4icz,-0.22259613289276933,-71.92533048871212,-40.20079778547728

1954762_20201_2_0,my9fnn4icz,-3.2930660824081968,-90.89640689365314,-20.607383052971755

3066356_20201_2_0,myspcn4icz,3.98196143548496,-80.20369299088003,-59.49436002108388

5202847_20201_2_0,n0vk3p4icz,-0.4213174627237259,-80.72537877912589,-42.01654698466632

2249229_20201_2_0,n11ido4icz,-0.8777663826204853,-118.16055817156774,-37.445982401863546

5829107_20201_2_0,n120sn4icz,-1.5066636221187326,-82.85650044516046,-19.778065421621932

2547821_20201_2_0,n1fzlo4icz,0.7749800978481169,-88.5489118998992,-52.52801277516181

5283768_20201_2_0,n2bben4icz,-3.4498156593397047,-54.492659536536195,-21.9806345368942

1271198_20201_2_0,n2yvhp4icz,-1.4419741237671895,-55.61895133396729,-40.81081079137488

3015326_20201_2_0,n3dm3p4icz,-1.0283866186312856,-71.15634331758295,-36.5951394211951

2225134_20201_2_0,n3mf7p4icz,1.1076656985151017,-97.58692113869697,-20.614201504810765

5561263_20201_2_0,n49pon4icz,0.30439544265692625,-77.24761334675702,-30.7122182470127

3253180_20201_2_0,n4hrcn4icz,3.2560483373592564,-122.73770585270015,-36.70318162890385

5426145_20201_2_0,n4yaln4icz,-0.9331627107402763,-78.09229688700717,-26.30224030125403

3571329_20201_2_0,n5ts6o4icz,5.808036936930125,-71.9066772195628,-66.08492334460547

1490612_20201_2_0,n5xdgo4icz,-2.1735220447400363,-111.38039338103366,-32.541873912986304

5877428_20201_2_0,n6svao4icz,0.6873932873573311,-84.75807034604722,-31.949709426623443

4988687_20201_2_0,n74o8o4icz,-0.967286160323824,-91.69639054410888,-32.579751471437476

2349528_20201_2_0,n8j1ip4icz,0.059523306821332514,-108.29291536017777,-29.13353136193666

5073703_20201_2_0,n8p4mn4icz,-0.8979940995697004,-126.57012519729588,-37.05768939899062

3268058_20201_2_0,n9rxyo4icz,2.854953347913755,-69.9429776631199,-43.6777289252079

3790303_20201_2_0,n9xldp4icz,5.389534057051818,-92.41218894732128,-75.06960072381099

3125981_20201_2_0,nas9pn4icz,2.5321795739171646,-95.4454288906974,-69.24489665273236

4827213_20201_2_0,ncijip4icz,1.330037644059406,-73.43349494226374,-34.78931547953616

3809401_20201_2_0,ndo9cp4icz,1.5984573034857719,-71.07894669781365,-48.90280644419036

1356635_20201_2_0,nem09n4icz,0.6439707471023629,-91.52635932352464,-44.27091405453696

4827173_20201_2_0,nem5so4icz,-1.7854104056378888,-102.37015080625272,-14.17497489863824

1340279_20201_2_0,nen71o4icz,-2.3275657415396935,-110.76919308333544,-34.60939066845762

4572806_20201_2_0,nf5ueo4icz,-1.3760141824478398,-51.96193016191694,-33.69971590822772

5487402_20201_2_0,ngph7p4icz,0.6692201539967684,-108.75340238506786,-50.917471148179345

2496577_20201_2_0,ngqkrn4icz,-0.051776461415069905,-114.59050071231314,-44.87638650460396

5651708_20201_2_0,ngvwvn4icz,1.66251274053053,-61.12882028152626,-34.47331934090626

1920037_20201_2_0,ngx3zo4icz,146.74745191197184,414.62437899679674,-245.5199074337998

1676280_20201_2_0,nitkjp4icz,2.046802785871807,-116.30593502908738,-39.6882663411146

2086450_20201_2_0,nk9t8o4icz,0.2665336919505534,-124.88915201717265,-35.181301963050544

2647384_20201_2_0,nkvqyo4icz,-3.1862377122951093,-95.08589632888103,-8.105612882091691

5751975_20201_2_0,nllqtn4icz,-2.1851054304860793,-130.94615827342932,-22.725372572746664

3953995_20201_2_0,nlw7jp4icz,1.6738584687598375,-94.39211209443877,-37.65273152374651

5132691_20201_2_0,nmz8bp4icz,-1.1100572760107108,-113.13560998859498,-45.6453898877987

2345971_20201_2_0,nodabp4icz,-0.7549953461333058,-87.56985961180305,-35.14800602227217

5296625_20201_2_0,nojgso4icz,-1.9890719581342424,-89.55315341823959,-28.798355950118065

2813919_20201_2_0,nooj7p4icz,2.954506369619144,-95.91897524448609,-52.46217938643636

5988524_20201_2_0,np0t6p4icz,-2.71109811117196,-106.67846475937688,-27.785335226594043

4428453_20201_2_0,np5k3o4icz,-2.171715893151235,-86.78712788659999,-25.20007275530655

5193257_20201_2_0,npdnbp4icz,-2.3245248819276236,-76.99978461802039,-15.389884495670316

1577408_20201_2_0,nqhgso4icz,2.894395863483313,-45.863510952762454,-54.60609050870809

2342726_20201_2_0,nrs8qn4icz,1.1014484900727612,-124.2612001880498,-19.490423388747615

3733569_20201_2_0,ntnm3o4icz,-1.2653204173256707,-78.8103028072903,-28.885213891281424

3089653_20201_2_0,ntt2rn4icz,0.17111811226992113,-141.02991603048918,-28.915698050171244

3773463_20201_2_0,nvi8yo4icz,-0.8393670166508058,-83.19256465132551,-19.68658573436997

2869989_20201_2_0,nxx7kn4icz,-8.550165875835665,-93.94461254737195,1.7538156600575405

3975246_20201_2_0,nybabn4icz,-1.196118463735527,-119.00159656846279,-32.1290524674675

4543178_20201_2_0,nzetqn4icz,-2.9273366016646434,-141.91101981764942,-29.96008387393212

1655578_20201_2_0,nzpr8p4icz,0.11265305736863926,-107.62596668853504,-50.35169654309615

4762925_20201_2_0,o1f5dp4icz,4.28914737362008,-88.5757572734239,-69.16422414474162

4109487_20201_2_0,o1yvin4icz,4.341712295325358,-107.73650291621084,-59.32912421059798

3112918_20201_2_0,o30aep4icz,-0.38076051704777303,-132.87016666514154,-32.31110019014119

5419741_20201_2_0,o322no4icz,-0.4863173165243917,-141.97552119316583,-48.60061179730124

5051942_20201_2_0,o3mmjo4icz,-1.057333342478194,-78.71170364579214,-21.998825485899346

3983847_20201_2_0,o3x7uo4icz,0.2972921851125363,-85.66427402329992,-52.02755315040187

1192029_20201_2_0,o4ffjp4icz,-3.563695823212093,-112.91437551495477,-9.650499190299598

1486485_20201_2_0,o6ycln4icz,-0.13237668324847687,-114.28440000263907,-2.5985102359271934

1771815_20201_2_0,o7liln4icz,1.7717008127898508,-98.30428264652494,-42.03883904231664

3192062_20201_2_0,o89e2o4icz,2.290923394077342,-116.43450868776299,-42.59983991354507

3735933_20201_2_0,o9btzo4icz,-0.07501753659414945,-59.563343836640485,-39.61101310404389

5507302_20201_2_0,o9ebrn4icz,1.3039610734857985,-104.42854438951505,-47.90549189037614

5007270_20201_2_0,o9z0vo4icz,0.03387477368610064,-80.41542139664776,-32.64064367372936

5136209_20201_2_0,ob9hpn4icz,1.4908685621320383,-56.51340476281541,-44.494693894445675

1636822_20201_2_0,obphvo4icz,0.2796500088804871,-80.99791546765846,-34.77101695660596

4527143_20201_2_0,oc7uuo4icz,1.257396054811774,-89.0026954402324,-45.17601395998712

1803154_20201_2_0,ockrzo4icz,-3.1931803503271823,-96.47843509045745,-1.5275026653990125

5321142_20201_2_0,ocqh0p4icz,-0.2855242432835852,-135.3158670644734,-24.195410990839704

4786337_20201_2_0,od0e0p4icz,0.6999873580630069,-52.51400314585504,-45.35465929863565

5371886_20201_2_0,oeogwn4icz,-1.287841234880135,-111.39891408133448,-38.46255559784922

1329496_20201_2_0,oficvo4icz,1.3921417163829592,-104.93669067129355,-35.61639437034407

1471435_20201_2_0,ogl1ip4icz,0.11223664878535282,-67.81278389503379,-26.884869746346055

4041690_20201_2_0,oh8ftn4icz,-0.4970954874019142,-129.5973136208085,-23.0467184596379

1449988_20201_2_0,ojacvn4icz,0.2273958886836403,-105.35221832256593,-33.362192250953

1144970_20201_2_0,ok4nbo4icz,-5.947002373738875,-113.3388009611129,14.753124186216724

1451022_20201_2_0,okaqgo4icz,-6.673973242578879,-100.40953581954119,-9.940265849222115

1835391_20201_2_0,okrv5p4icz,2.3503716209541317,-98.05426933498813,-53.16761964363046

5793060_20201_2_0,ol8qap4icz,1.0423211565536064,-78.63011367290125,-35.65212445706925

2579431_20201_2_0,olhhko4icz,3.4325481371016635,-78.34158033004806,-51.732775113440596

4687659_20201_2_0,om0x6p4icz,0.9886507263041708,-107.20312772828152,-36.83003163776455

2935656_20201_2_0,om9lfn4icz,34.6417360088085,61.55870907571577,-209.30157837303656

2875616_20201_2_0,omntho4icz,2.428494164260547,-32.71667673017211,-42.23040980301384

1202416_20201_2_0,ompzco4icz,1.3694325304926234,-37.478923065159506,-48.81798992649247

4730389_20201_2_0,on1dgn4icz,-4.902766650326722,-118.78038652842915,-7.786555456650817

1442103_20201_2_0,oo65fn4icz,0.005522585648218992,-101.85566717531609,-32.20519214883487

3173382_20201_2_0,oosfvn4icz,1.4670915660549448,-94.10861293728857,-51.09645655698972

2376270_20201_2_0,op5oho4icz,0.4716443971836674,-108.84322445881455,-15.324449414685532

5999052_20201_2_0,opzeso4icz,-0.30107619614629616,-94.98930230523786,-39.3924215567437

3600891_20201_2_0,oq84dn4icz,1.1256577339438223,-93.8684129588658,-36.90783260130176

2104289_20201_2_0,oqxr6p4icz,0.244638116641954,-99.52102423862121,-50.65203292754647

3735392_20201_2_0,orhcto4icz,-0.7948276496330406,-91.29117624822652,-39.423976687689176

1258133_20201_2_0,ortxjp4icz,0.38995170978207666,-93.13838292661421,-48.82074595727528

5616825_20201_2_0,os76ro4icz,2.192616441875321,-93.08713275048501,-45.23132347528032

4622760_20201_2_0,osrrzo4icz,3.5527766950690602,-99.51998167050749,-54.13133226303849

4720993_20201_2_0,ot5map4icz,0.6389034473165162,-74.42976092818566,-24.625467734017576

3918190_20201_2_0,ow4bso4icz,-2.987974583265307,-79.7299768434541,-18.85597626532835

4763471_20201_2_0,ow9k5n4icz,0.5125613367786045,-134.8591389176191,-33.004742987804946

3706705_20201_2_0,l1blvo4icz,0.7531990651813791,-58.881503845964176,-37.28656790423119

/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/torch/cuda/__init__.py:52: UserWarning: CUDA initialization: Found no NVIDIA driver on your system. Please check that you have an NVIDIA GPU and installed a driver from http://www.nvidia.com/Download/index.aspx (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729006826/work/c10/cuda/CUDAFunctions.cpp:100.)
  return torch._C._cuda_getDeviceCount() > 0
  0%|          | 0/101 [00:00<?, ?it/s]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  1%|          | 1/101 [00:01<02:35,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  2%|▏         | 2/101 [00:03<02:34,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  3%|▎         | 3/101 [00:04<02:35,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  4%|▍         | 4/101 [00:07<03:06,  1.92s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  5%|▍         | 5/101 [00:09<02:55,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  6%|▌         | 6/101 [00:10<02:48,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  7%|▋         | 7/101 [00:12<02:41,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  8%|▊         | 8/101 [00:13<02:33,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▉         | 9/101 [00:15<02:37,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 10%|▉         | 10/101 [00:17<02:35,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 11%|█         | 11/101 [00:18<02:28,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 12%|█▏        | 12/101 [00:20<02:32,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 13%|█▎        | 13/101 [00:22<02:23,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 14%|█▍        | 14/101 [00:24<02:34,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 15%|█▍        | 15/101 [00:29<03:57,  2.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 16%|█▌        | 16/101 [00:31<03:28,  2.46s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 17%|█▋        | 17/101 [00:32<03:00,  2.15s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 18/101 [00:34<02:46,  2.01s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 19%|█▉        | 19/101 [00:35<02:37,  1.92s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 20%|█▉        | 20/101 [00:37<02:29,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 21%|██        | 21/101 [00:39<02:22,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 22%|██▏       | 22/101 [00:40<02:13,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 23%|██▎       | 23/101 [00:42<02:06,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 24%|██▍       | 24/101 [00:44<02:13,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▍       | 25/101 [00:45<02:09,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 26%|██▌       | 26/101 [00:47<02:09,  1.73s/it] 27%|██▋       | 27/101 [00:49<02:04,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 28%|██▊       | 28/101 [00:53<02:53,  2.38s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 29%|██▊       | 29/101 [00:54<02:37,  2.19s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 30%|██▉       | 30/101 [00:56<02:31,  2.13s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 31%|███       | 31/101 [00:58<02:19,  1.99s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 32%|███▏      | 32/101 [01:00<02:20,  2.03s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 33%|███▎      | 33/101 [01:02<02:10,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 34%|███▎      | 34/101 [01:04<02:05,  1.87s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 35%|███▍      | 35/101 [01:05<01:54,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▌      | 36/101 [01:07<01:52,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 37%|███▋      | 37/101 [01:09<01:51,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 38%|███▊      | 38/101 [01:11<01:54,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 39%|███▊      | 39/101 [01:12<01:44,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 40%|███▉      | 40/101 [01:13<01:38,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 41%|████      | 41/101 [01:15<01:39,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 42%|████▏     | 42/101 [01:17<01:36,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 43%|████▎     | 43/101 [01:18<01:37,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 44%|████▎     | 44/101 [01:20<01:32,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▍     | 45/101 [01:22<01:34,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 46%|████▌     | 46/101 [01:23<01:30,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 47%|████▋     | 47/101 [01:25<01:33,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 48%|████▊     | 48/101 [01:27<01:33,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 49%|████▊     | 49/101 [01:29<01:30,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|████▉     | 50/101 [01:31<01:27,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|█████     | 51/101 [01:32<01:24,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 51%|█████▏    | 52/101 [01:34<01:22,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 52%|█████▏    | 53/101 [01:35<01:19,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 53%|█████▎    | 54/101 [01:37<01:18,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 54%|█████▍    | 55/101 [01:39<01:17,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▌    | 56/101 [01:40<01:13,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 56%|█████▋    | 57/101 [01:42<01:13,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 57%|█████▋    | 58/101 [01:44<01:17,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 58%|█████▊    | 59/101 [01:46<01:14,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 59%|█████▉    | 60/101 [01:48<01:12,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 60%|██████    | 61/101 [01:50<01:12,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 61%|██████▏   | 62/101 [01:51<01:07,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 62%|██████▏   | 63/101 [01:53<01:04,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 63%|██████▎   | 64/101 [01:54<01:02,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▍   | 65/101 [01:58<01:20,  2.23s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 65%|██████▌   | 66/101 [02:00<01:13,  2.10s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 66%|██████▋   | 67/101 [02:01<01:03,  1.88s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 67%|██████▋   | 68/101 [02:03<00:59,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 68%|██████▊   | 69/101 [02:04<00:57,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 69%|██████▉   | 70/101 [02:06<00:55,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 70%|███████   | 71/101 [02:08<00:52,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 71%|███████▏  | 72/101 [02:09<00:49,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 72%|███████▏  | 73/101 [02:11<00:46,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 74/101 [02:13<00:43,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 74%|███████▍  | 75/101 [02:15<00:47,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▌  | 76/101 [02:16<00:43,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 76%|███████▌  | 77/101 [02:18<00:41,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 77%|███████▋  | 78/101 [02:20<00:40,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 78%|███████▊  | 79/101 [02:22<00:38,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 79%|███████▉  | 80/101 [02:23<00:36,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 80%|████████  | 81/101 [02:25<00:34,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 81%|████████  | 82/101 [02:27<00:33,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 83/101 [02:29<00:31,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 83%|████████▎ | 84/101 [02:30<00:29,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 84%|████████▍ | 85/101 [02:32<00:27,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 85%|████████▌ | 86/101 [02:34<00:25,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 86%|████████▌ | 87/101 [02:35<00:23,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 87%|████████▋ | 88/101 [02:37<00:20,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 88%|████████▊ | 89/101 [02:38<00:19,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 89%|████████▉ | 90/101 [02:41<00:19,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 90%|█████████ | 91/101 [02:43<00:19,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████ | 92/101 [02:45<00:16,  1.87s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 92%|█████████▏| 93/101 [02:47<00:17,  2.19s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 93%|█████████▎| 94/101 [02:49<00:14,  2.04s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 94%|█████████▍| 95/101 [02:51<00:11,  1.94s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 95%|█████████▌| 96/101 [02:52<00:09,  1.82s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 96%|█████████▌| 97/101 [02:54<00:07,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 97%|█████████▋| 98/101 [02:56<00:05,  1.92s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 98%|█████████▊| 99/101 [02:58<00:03,  1.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 99%|█████████▉| 100/101 [03:00<00:01,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
100%|██████████| 101/101 [03:01<00:00,  1.76s/it]100%|██████████| 101/101 [03:01<00:00,  1.80s/it]
Trying to load from /users/rhydian/self-supervised-project/model_weights/SSECEncodersBothBoth
==> Resuming model trained for 106 epochs...
Trying to load from ../model_weights/angle_regressor4
==> Resuming model trained for 7 epochs...
4386843_20201_2_0,nd6rzn4icz,0.014810988543556678,-79.24137962905695,-30.72304605440877

4569332_20201_2_0,ndm9in4icz,-1.6015622068101236,-120.25742271615889,-31.72396980311906

5428491_20201_2_0,ndwq2p4icz,-2.227420851021507,-76.90119979901073,-27.122444955712496

4154697_20201_2_0,ne0xvo4icz,-0.3034752782424302,-125.84654186139622,-41.7380497605609

4032691_20201_2_0,ni4w0o4icz,0.5067776185763369,-75.26771298562329,-42.84329651186111

2520083_20201_2_0,njbqpn4icz,-0.4038999045962859,-127.81635667390651,-28.664358230899495

2189592_20201_2_0,nk57xn4icz,-1.2103244287648482,-81.2261333402422,-19.57644789057001

2890654_20201_2_0,nkk2in4icz,2.2417583716479363,-112.56209898560701,-46.692241667997266

4299009_20201_2_0,nkl75o4icz,5.44492232914612,-97.67772712279915,-55.29964170647571

4048004_20201_2_0,nm5q7o4icz,-1.6039961085815877,-78.0065358786656,-10.976996687084878

3768180_20201_2_0,nm6oso4icz,1.157983516190226,-81.23627591179928,-52.2172371037602

5874414_20201_2_0,nmkvun4icz,2.228412565406076,-91.7170757851228,-25.10052837836342

1167798_20201_2_0,nmn4ep4icz,-1.7803215752381447,-117.06377120670646,-32.42269490279685

3883359_20201_2_0,nmuvln4icz,1.6268251869230466,-116.58698130657254,-50.88267954771935

1405827_20201_2_0,nnccjn4icz,0.08507626666872009,-115.01179881388268,-32.60754778420004

4094541_20201_2_0,nooyfn4icz,2.600425560215179,-118.42908576749758,-58.147602960807234

3584737_20201_2_0,npjafn4icz,-6.453448702237285,-142.37709975614186,7.790332835266156

2555166_20201_2_0,npuo3p4icz,-6.3553168786253895,-140.8157219944511,-38.778494560248745

5728375_20201_2_0,nqbs0o4icz,-1.0244899418667,-87.06752243292613,-29.218110752936667

3989716_20201_2_0,nrkwdo4icz,1.1283707019295532,-59.10860159577061,-33.126605914987294

5045486_20201_2_0,nrm3qn4icz,0.4746408141414055,-93.26163892026904,-44.60963143537904

5490826_20201_2_0,ns20wn4icz,0.5500354962967317,-85.57517374518972,-31.05879237440331

1089369_20201_2_0,nslukn4icz,-2.5508264876720816,-103.94961630627344,-49.16753530113598

4243128_20201_2_0,nthadp4icz,-5.185261697353949,-81.0522166599363,-20.10205580589931

3800284_20201_2_0,ntxa6o4icz,-0.9204255152794315,-91.08587219741742,-29.837750389297497

1139297_20201_2_0,nu19ln4icz,-0.4791598782587017,-74.3413856975279,-37.453266014076846

2461939_20201_2_0,nua6vn4icz,120.07242909140611,155.55279013870984,-163.45631071436225

3340378_20201_2_0,nv0isn4icz,-0.921950199103611,-78.82126404654929,-31.02762452700449

3660312_20201_2_0,nv289p4icz,0.3512860711985714,-85.09530671178891,-43.567094905344135

4169389_20201_2_0,nw3oho4icz,-0.34740447660571794,-68.1312526199803,-33.578266632565516

5697275_20201_2_0,nzlf0p4icz,4.91379935981974,-106.09775286663614,-54.99148254511252

1497751_20201_2_0,g7bzjn4icz,-0.1807352923623977,-66.8153473431492,-52.18738120414736

3690815_20201_2_0,o0akao4icz,-2.3950781498740707,-64.04290133635237,-36.384793926041624

2822300_20201_2_0,o0d43p4icz,-0.4166243439181276,-84.69736471381583,-25.6156670448794

2773898_20201_2_0,o0eh9p4icz,-2.034334938750926,-113.34569286151637,-20.372872807494062

2085962_20201_2_0,o25o6p4icz,0.34138376642441853,-115.90122857670443,-70.98785902436367

1711530_20201_2_0,o2ed1p4icz,1.896351730055219,-84.29745986135433,-52.30101468117668

1440200_20201_2_0,o2tw6o4icz,0.34175888449562325,-105.6121360636931,-40.275304175060626

1852246_20201_2_0,o3p5sn4icz,-0.18025694805003561,-75.45820453953667,-46.75366798047165

2514076_20201_2_0,o43gdo4icz,0.01773494890329458,-67.67625203317192,-34.20757338243544

4132197_20201_2_0,o45dap4icz,-1.6415191529525974,-121.1433453039669,-42.27630682764935

4116225_20201_2_0,o4etho4icz,-0.10738596255017371,-82.18592400759806,-27.518331167705668

3776601_20201_2_0,o522ln4icz,-1.0106764433844928,-88.40692002532097,-40.525851815742996

4935331_20201_2_0,o5yqvo4icz,1.1982398734974296,-66.59997288798829,-32.18476685315997

4114719_20201_2_0,o66xco4icz,0.3911233199340891,-98.96075044042578,-21.158217926046206

4918334_20201_2_0,o6cu4o4icz,0.9567211441307747,-73.82976903386711,-24.28762491137597

4532375_20201_2_0,o6hr8o4icz,-1.1696094554286849,-86.34724401996075,-27.957358853512957

2207750_20201_2_0,o6moeo4icz,-1.640059275086653,-100.09937352491707,-15.975428049134734

3411746_20201_2_0,o79t6o4icz,0.8689797519738262,-77.35562997482918,-19.76894545059787

2524050_20201_2_0,o7wwho4icz,3.9763738006703506,-92.2623960122857,-36.39279014801157

2570977_20201_2_0,o7xymo4icz,-1.3852713386394844,-88.6668734189933,-22.562850049201614

3952389_20201_2_0,o9cx5o4icz,-2.313300645413989,-124.85052078949829,-26.88069589448041

5217283_20201_2_0,o9go5o4icz,-0.5682886788794347,-55.62217333355727,-29.810146351311488

4296519_20201_2_0,oa8w9n4icz,-0.4910541622353182,-136.08305373679033,-31.45224530206832

1394682_20201_2_0,oaa9pn4icz,0.0908301773349844,-70.68735819331104,-49.940589305682494

4418445_20201_2_0,oagvoo4icz,3.085067802038585,-105.35492989165502,-48.666997582991826

5742263_20201_2_0,oaoisn4icz,0.11530811538389443,-111.38689515759512,-45.198287208763986

4747044_20201_2_0,ob4h9o4icz,-0.3918542314933849,-71.73406671579443,-47.0147488836504

2385295_20201_2_0,obkx8p4icz,0.7214298044608664,-77.67660780278317,-29.458181663026622

1073016_20201_2_0,obrtgn4icz,1.685197035153956,-92.22566764027383,-55.09624787725765

1618524_20201_2_0,obvhbp4icz,0.334726661361235,-85.69485211796791,-38.526410460292325

5372451_20201_2_0,oc16hp4icz,-3.412430678161304,-99.05994025557598,-20.18536821071001

5170623_20201_2_0,ocvp4p4icz,0.7176107423369915,-97.27778690947585,-40.201561922164544

3089991_20201_2_0,od5pvn4icz,3.8529099322587244,-78.87379030929714,-57.37760901401478

4269847_20201_2_0,odv18p4icz,-0.9511449595754736,-121.44465759424486,-37.02287981797333

6021756_20201_2_0,oejyfn4icz,-1.7628112951751334,-79.27447774201468,-34.910249177433116

3152170_20201_2_0,of4vun4icz,-2.0359107391984055,-121.65888342363257,-24.6690325229186

1765850_20201_2_0,of5wvn4icz,-3.158380806968854,-85.44646461016487,-21.385624081118948

4332403_20201_2_0,ofe3dp4icz,5.187767670375169,-79.54283772372634,-59.18425077074758

4970460_20201_2_0,ofoqmn4icz,-2.4125187327108355,-107.5350202335845,-35.5574250591111

5395933_20201_2_0,ogs79o4icz,-1.4643877391805666,-97.12450834659342,-13.00386125258214

4272294_20201_2_0,ogurpn4icz,-2.2359152073558697,-79.4993111319533,-19.711993964564314

1388668_20201_2_0,ohr8to4icz,-1.3770248615802987,-74.66374658002749,-29.808770886208947

1747046_20201_2_0,ojfcko4icz,-1.0169256454284097,-128.44135005544982,-21.697001760539138

1589516_20201_2_0,ok5c0p4icz,-2.3485716147054823,-114.01645495229013,-22.283394311083725

3352588_20201_2_0,okpemo4icz,2.4083136293754857,-118.99058599409759,-46.56272181898049

1429751_20201_2_0,okq6kp4icz,0.03811717434615549,-131.38300672433834,-48.95447902998163

1675876_20201_2_0,olph9o4icz,-0.7175220039449364,-118.47281422788481,-25.522838251617543

4994968_20201_2_0,on0eon4icz,-1.3253121918042974,-71.62917708513729,-13.43618068478466

2728539_20201_2_0,on89ln4icz,1.4453962462733272,-74.2357178534318,-49.71402438849478

5157953_20201_2_0,on92no4icz,-1.5599907075222728,-138.29233797796113,-25.18021064593539

4758049_20201_2_0,ook22o4icz,0.2828622399488696,-96.60419124759349,-30.083002673479683

5714636_20201_2_0,opa58n4icz,2.3911912187912066,-129.57735383039727,-50.60393788084306

5623588_20201_2_0,opfy7p4icz,3.3044529924771657,-95.14245397747334,-56.0774098627283

4876103_20201_2_0,opwecp4icz,-1.1829467013238393,-98.95194655705569,-33.410568387429564

4341065_20201_2_0,oq6f3o4icz,-0.501538135388135,-69.4318874913723,-22.159780328991545

3503961_20201_2_0,oqq7hp4icz,2.930913858817649,-73.8788879792944,-69.10204149769262

2624598_20201_2_0,os4dwn4icz,-2.091247382078235,-57.570222628840924,-27.04835744307543

4080868_20201_2_0,oskczn4icz,1.8292165929802897,-97.55877939594896,-46.79296962292378

2033014_20201_2_0,osnpmo4icz,-0.9743064792934226,-71.26942971399882,-29.36443213474699

4397516_20201_2_0,7z1wgo4icz,0.08828231077402118,-132.76357092447262,-52.79323143876812

3726449_20201_2_0,otmo7p4icz,0.30776674070394544,-85.57962090772506,-53.17162101662684

2762587_20201_2_0,8y7e6n4icz,4.069824623740377,-87.21688308996806,-76.76263916304417

3532251_20201_2_0,ovtjfp4icz,2.565542832513953,-63.880158621899426,-59.09317151219605

3365121_20201_2_0,ovurcp4icz,-2.390602475870207,-132.08842725564273,-26.675192330757582

1094256_20201_2_0,ow9wvn4icz,-0.2774949045105401,-112.49103661216552,-44.33381105954568

2866000_20201_2_0,ox8fwn4icz,1.7671748571649246,-82.70021956062092,-50.88788467999717

1962259_20201_2_0,oxm9ap4icz,-2.978112737902506,-89.36027892590761,-0.5346565104781291

3868127_20201_2_0,oxprfo4icz,-1.521144765836534,-57.138575738444786,-14.610432166125278

3195356_20201_2_0,oznxhp4icz,0.2925009162964326,-113.63504762930529,-48.565467439616995

4148351_20201_2_0,y8jwko4icz,-0.8826363930634485,-65.22712329067514,-44.276415276880044


7 th decile
.35
.40
Traceback (most recent call last):
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/git/__init__.py", line 83, in <module>
    refresh()
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/git/__init__.py", line 73, in refresh
    if not Git.refresh(path=path):
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/git/cmd.py", line 278, in refresh
    raise ImportError(err)
ImportError: Bad git executable.
The git executable must be specified in one of the following ways:
    - be included in your $PATH
    - be set via $GIT_PYTHON_GIT_EXECUTABLE
    - explicitly set via git.refresh()

All git commands will error until this is rectified.

This initial warning can be silenced or aggravated in the future by setting the
$GIT_PYTHON_REFRESH environment variable. Use one of the following values:
    - quiet|q|silence|s|none|n|0: for no warning or exception
    - warn|w|warning|1: for a printed warning
    - error|e|raise|r|2: for a raised exception

Example:
    export GIT_PYTHON_REFRESH=quiet


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "transfer_all_segmentations.py", line 14, in <module>
    from train_SSEC import load_models
  File "/users/rhydian/self-supervised-project/train_SSEC.py", line 26, in <module>
    from sacred import Experiment
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/sacred/__init__.py", line 11, in <module>
    from sacred.experiment import Experiment
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/sacred/experiment.py", line 22, in <module>
    from sacred.observers.file_storage import file_storage_option
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/sacred/observers/__init__.py", line 2, in <module>
    from sacred.observers.file_storage import FileStorageObserver
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/sacred/observers/file_storage.py", line 14, in <module>
    from sacred.dependencies import get_digest
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/sacred/dependencies.py", line 10, in <module>
    from git import Repo, InvalidGitRepositoryError
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/git/__init__.py", line 85, in <module>
    raise ImportError('Failed to initialize: {0}'.format(exc)) from exc
ImportError: Failed to initialize: Bad git executable.
The git executable must be specified in one of the following ways:
    - be included in your $PATH
    - be set via $GIT_PYTHON_GIT_EXECUTABLE
    - explicitly set via git.refresh()

All git commands will error until this is rectified.

This initial warning can be silenced or aggravated in the future by setting the
$GIT_PYTHON_REFRESH environment variable. Use one of the following values:
    - quiet|q|silence|s|none|n|0: for no warning or exception
    - warn|w|warning|1: for a printed warning
    - error|e|raise|r|2: for a raised exception

Example:
    export GIT_PYTHON_REFRESH=quiet

Traceback (most recent call last):
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/git/__init__.py", line 83, in <module>
    refresh()
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/git/__init__.py", line 73, in refresh
    if not Git.refresh(path=path):
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/git/cmd.py", line 278, in refresh
    raise ImportError(err)
ImportError: Bad git executable.
The git executable must be specified in one of the following ways:
    - be included in your $PATH
    - be set via $GIT_PYTHON_GIT_EXECUTABLE
    - explicitly set via git.refresh()

All git commands will error until this is rectified.

This initial warning can be silenced or aggravated in the future by setting the
$GIT_PYTHON_REFRESH environment variable. Use one of the following values:
    - quiet|q|silence|s|none|n|0: for no warning or exception
    - warn|w|warning|1: for a printed warning
    - error|e|raise|r|2: for a raised exception

Example:
    export GIT_PYTHON_REFRESH=quiet


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "transfer_all_segmentations.py", line 14, in <module>
    from train_SSEC import load_models
  File "/users/rhydian/self-supervised-project/train_SSEC.py", line 26, in <module>
    from sacred import Experiment
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/sacred/__init__.py", line 11, in <module>
    from sacred.experiment import Experiment
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/sacred/experiment.py", line 22, in <module>
    from sacred.observers.file_storage import file_storage_option
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/sacred/observers/__init__.py", line 2, in <module>
    from sacred.observers.file_storage import FileStorageObserver
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/sacred/observers/file_storage.py", line 14, in <module>
    from sacred.dependencies import get_digest
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/sacred/dependencies.py", line 10, in <module>
    from git import Repo, InvalidGitRepositoryError
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/git/__init__.py", line 85, in <module>
    raise ImportError('Failed to initialize: {0}'.format(exc)) from exc
ImportError: Failed to initialize: Bad git executable.
The git executable must be specified in one of the following ways:
    - be included in your $PATH
    - be set via $GIT_PYTHON_GIT_EXECUTABLE
    - explicitly set via git.refresh()

All git commands will error until this is rectified.

This initial warning can be silenced or aggravated in the future by setting the
$GIT_PYTHON_REFRESH environment variable. Use one of the following values:
    - quiet|q|silence|s|none|n|0: for no warning or exception
    - warn|w|warning|1: for a printed warning
    - error|e|raise|r|2: for a raised exception

Example:
    export GIT_PYTHON_REFRESH=quiet

Traceback (most recent call last):
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/git/__init__.py", line 83, in <module>
    refresh()
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/git/__init__.py", line 73, in refresh
    if not Git.refresh(path=path):
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/git/cmd.py", line 278, in refresh
    raise ImportError(err)
ImportError: Bad git executable.
The git executable must be specified in one of the following ways:
    - be included in your $PATH
    - be set via $GIT_PYTHON_GIT_EXECUTABLE
    - explicitly set via git.refresh()

All git commands will error until this is rectified.

This initial warning can be silenced or aggravated in the future by setting the
$GIT_PYTHON_REFRESH environment variable. Use one of the following values:
    - quiet|q|silence|s|none|n|0: for no warning or exception
    - warn|w|warning|1: for a printed warning
    - error|e|raise|r|2: for a raised exception

Example:
    export GIT_PYTHON_REFRESH=quiet


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "transfer_all_segmentations.py", line 14, in <module>
    from train_SSEC import load_models
  File "/users/rhydian/self-supervised-project/train_SSEC.py", line 26, in <module>
    from sacred import Experiment
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/sacred/__init__.py", line 11, in <module>
    from sacred.experiment import Experiment
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/sacred/experiment.py", line 22, in <module>
    from sacred.observers.file_storage import file_storage_option
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/sacred/observers/__init__.py", line 2, in <module>
    from sacred.observers.file_storage import FileStorageObserver
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/sacred/observers/file_storage.py", line 14, in <module>
    from sacred.dependencies import get_digest
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/sacred/dependencies.py", line 10, in <module>
    from git import Repo, InvalidGitRepositoryError
  File "/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/git/__init__.py", line 85, in <module>
    raise ImportError('Failed to initialize: {0}'.format(exc)) from exc
ImportError: Failed to initialize: Bad git executable.
The git executable must be specified in one of the following ways:
    - be included in your $PATH
    - be set via $GIT_PYTHON_GIT_EXECUTABLE
    - explicitly set via git.refresh()

All git commands will error until this is rectified.

This initial warning can be silenced or aggravated in the future by setting the
$GIT_PYTHON_REFRESH environment variable. Use one of the following values:
    - quiet|q|silence|s|none|n|0: for no warning or exception
    - warn|w|warning|1: for a printed warning
    - error|e|raise|r|2: for a raised exception

Example:
    export GIT_PYTHON_REFRESH=quiet


19 th decile
.95
1.00
/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/torch/cuda/__init__.py:52: UserWarning: CUDA initialization: Found no NVIDIA driver on your system. Please check that you have an NVIDIA GPU and installed a driver from http://www.nvidia.com/Download/index.aspx (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729006826/work/c10/cuda/CUDAFunctions.cpp:100.)
  return torch._C._cuda_getDeviceCount() > 0
  0%|          | 0/811 [00:00<?, ?it/s]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  0%|          | 1/811 [00:01<22:03,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  0%|          | 2/811 [00:03<21:18,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  0%|          | 3/811 [00:04<20:09,  1.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  0%|          | 4/811 [00:06<23:31,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  1%|          | 5/811 [00:08<22:42,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  1%|          | 6/811 [00:09<20:51,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  1%|          | 7/811 [00:10<19:36,  1.46s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  1%|          | 8/811 [00:12<19:48,  1.48s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  1%|          | 9/811 [00:13<18:33,  1.39s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  1%|          | 10/811 [00:14<18:47,  1.41s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  1%|▏         | 11/811 [00:16<18:44,  1.41s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  1%|▏         | 12/811 [00:20<28:40,  2.15s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  2%|▏         | 13/811 [00:21<25:02,  1.88s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  2%|▏         | 14/811 [00:23<26:42,  2.01s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  2%|▏         | 15/811 [00:24<23:20,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  2%|▏         | 16/811 [00:26<22:28,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  2%|▏         | 17/811 [00:27<21:27,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  2%|▏         | 18/811 [00:29<21:09,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  2%|▏         | 19/811 [00:31<23:17,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  2%|▏         | 20/811 [00:32<21:24,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  3%|▎         | 21/811 [00:34<20:53,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  3%|▎         | 22/811 [00:35<20:20,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  3%|▎         | 23/811 [00:37<19:08,  1.46s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  3%|▎         | 24/811 [00:38<18:26,  1.41s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  3%|▎         | 25/811 [00:39<17:26,  1.33s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  3%|▎         | 26/811 [00:40<17:00,  1.30s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  3%|▎         | 27/811 [00:42<16:35,  1.27s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  3%|▎         | 28/811 [00:43<18:39,  1.43s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  4%|▎         | 29/811 [00:45<17:51,  1.37s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  4%|▎         | 30/811 [00:46<17:31,  1.35s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  4%|▍         | 31/811 [00:49<23:33,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  4%|▍         | 32/811 [00:50<21:35,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  4%|▍         | 33/811 [00:51<20:12,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  4%|▍         | 34/811 [00:53<19:32,  1.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  4%|▍         | 35/811 [00:54<19:00,  1.47s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  4%|▍         | 36/811 [00:56<20:46,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  5%|▍         | 37/811 [00:57<19:28,  1.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  5%|▍         | 38/811 [01:01<28:03,  2.18s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  5%|▍         | 39/811 [01:03<27:25,  2.13s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  5%|▍         | 40/811 [01:05<24:34,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  5%|▌         | 41/811 [01:06<22:56,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  5%|▌         | 42/811 [01:08<22:12,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  5%|▌         | 43/811 [01:09<20:34,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  5%|▌         | 44/811 [01:10<19:53,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  6%|▌         | 45/811 [01:11<18:02,  1.41s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  6%|▌         | 46/811 [01:13<17:32,  1.38s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  6%|▌         | 47/811 [01:14<17:42,  1.39s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  6%|▌         | 48/811 [01:16<17:48,  1.40s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  6%|▌         | 49/811 [01:18<22:41,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  6%|▌         | 50/811 [01:20<20:34,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  6%|▋         | 51/811 [01:22<22:55,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  6%|▋         | 52/811 [01:23<21:10,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  7%|▋         | 53/811 [01:24<19:48,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  7%|▋         | 54/811 [01:27<24:51,  1.97s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  7%|▋         | 55/811 [01:29<22:53,  1.82s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  7%|▋         | 56/811 [01:30<20:55,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  7%|▋         | 57/811 [01:32<20:11,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  7%|▋         | 58/811 [01:33<18:49,  1.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  7%|▋         | 59/811 [01:34<18:22,  1.47s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  7%|▋         | 60/811 [01:36<17:46,  1.42s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  8%|▊         | 61/811 [01:37<16:57,  1.36s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  8%|▊         | 62/811 [01:38<17:07,  1.37s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  8%|▊         | 63/811 [01:39<16:33,  1.33s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  8%|▊         | 64/811 [01:41<16:58,  1.36s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  8%|▊         | 65/811 [01:42<16:22,  1.32s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  8%|▊         | 66/811 [01:43<16:39,  1.34s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  8%|▊         | 67/811 [01:45<16:37,  1.34s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  8%|▊         | 68/811 [01:46<16:19,  1.32s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▊         | 69/811 [01:48<17:00,  1.38s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▊         | 70/811 [01:49<17:00,  1.38s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▉         | 71/811 [01:50<17:17,  1.40s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▉         | 72/811 [01:52<18:07,  1.47s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▉         | 73/811 [01:54<18:44,  1.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▉         | 74/811 [01:55<18:01,  1.47s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▉         | 75/811 [01:56<17:22,  1.42s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▉         | 76/811 [01:59<20:28,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▉         | 77/811 [02:00<19:32,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 10%|▉         | 78/811 [02:01<17:41,  1.45s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 10%|▉         | 79/811 [02:04<21:42,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 10%|▉         | 80/811 [02:05<20:13,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 10%|▉         | 81/811 [02:06<18:53,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 10%|█         | 82/811 [02:08<17:39,  1.45s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 10%|█         | 83/811 [02:09<18:14,  1.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 10%|█         | 84/811 [02:11<18:04,  1.49s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 10%|█         | 85/811 [02:13<19:48,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 11%|█         | 86/811 [02:14<20:09,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 11%|█         | 87/811 [02:15<17:58,  1.49s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 11%|█         | 88/811 [02:17<17:27,  1.45s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 11%|█         | 89/811 [02:18<17:16,  1.44s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 11%|█         | 90/811 [02:20<17:19,  1.44s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 11%|█         | 91/811 [02:21<18:21,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 11%|█▏        | 92/811 [02:23<19:14,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 11%|█▏        | 93/811 [02:24<17:51,  1.49s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 12%|█▏        | 94/811 [02:26<17:36,  1.47s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 12%|█▏        | 95/811 [02:27<16:53,  1.42s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 12%|█▏        | 96/811 [02:28<16:04,  1.35s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 12%|█▏        | 97/811 [02:30<16:07,  1.36s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 12%|█▏        | 98/811 [02:31<15:44,  1.32s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 12%|█▏        | 99/811 [02:32<15:26,  1.30s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 12%|█▏        | 100/811 [02:33<15:14,  1.29s/it] 12%|█▏        | 101/811 [02:35<15:13,  1.29s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 13%|█▎        | 102/811 [02:36<14:59,  1.27s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 13%|█▎        | 103/811 [02:38<16:21,  1.39s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 13%|█▎        | 104/811 [02:39<15:37,  1.33s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 13%|█▎        | 105/811 [02:40<15:14,  1.30s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 13%|█▎        | 106/811 [02:41<15:22,  1.31s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 13%|█▎        | 107/811 [02:43<15:28,  1.32s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 13%|█▎        | 108/811 [02:44<15:48,  1.35s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 13%|█▎        | 109/811 [02:45<15:33,  1.33s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 14%|█▎        | 110/811 [02:47<15:14,  1.30s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 14%|█▎        | 111/811 [02:48<15:09,  1.30s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 14%|█▍        | 112/811 [02:49<15:31,  1.33s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 14%|█▍        | 113/811 [02:51<15:22,  1.32s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 14%|█▍        | 114/811 [02:52<15:08,  1.30s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 14%|█▍        | 115/811 [02:53<15:26,  1.33s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 14%|█▍        | 116/811 [02:55<15:33,  1.34s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 14%|█▍        | 117/811 [02:56<15:23,  1.33s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 15%|█▍        | 118/811 [02:57<15:22,  1.33s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 15%|█▍        | 119/811 [02:59<15:08,  1.31s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 15%|█▍        | 120/811 [03:00<15:19,  1.33s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 15%|█▍        | 121/811 [03:01<15:55,  1.38s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 15%|█▌        | 122/811 [03:03<15:26,  1.34s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 15%|█▌        | 123/811 [03:04<15:04,  1.31s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 15%|█▌        | 124/811 [03:05<15:21,  1.34s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 15%|█▌        | 125/811 [03:06<14:40,  1.28s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 16%|█▌        | 126/811 [03:08<15:10,  1.33s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 16%|█▌        | 127/811 [03:09<15:46,  1.38s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 16%|█▌        | 128/811 [03:11<15:52,  1.39s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 16%|█▌        | 129/811 [03:13<19:10,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 16%|█▌        | 130/811 [03:14<17:40,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 16%|█▌        | 131/811 [03:16<16:58,  1.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 16%|█▋        | 132/811 [03:17<16:05,  1.42s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 16%|█▋        | 133/811 [03:19<16:24,  1.45s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 17%|█▋        | 134/811 [03:20<15:50,  1.40s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 17%|█▋        | 135/811 [03:22<17:05,  1.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 17%|█▋        | 136/811 [03:23<15:45,  1.40s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 17%|█▋        | 137/811 [03:24<15:09,  1.35s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 17%|█▋        | 138/811 [03:25<15:08,  1.35s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 17%|█▋        | 139/811 [03:27<15:00,  1.34s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 17%|█▋        | 140/811 [03:28<14:18,  1.28s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 17%|█▋        | 141/811 [03:29<14:35,  1.31s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 142/811 [03:30<14:27,  1.30s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 143/811 [03:32<15:56,  1.43s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 144/811 [03:34<16:08,  1.45s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 145/811 [03:35<16:38,  1.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 146/811 [03:37<15:43,  1.42s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 147/811 [03:38<15:18,  1.38s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 148/811 [03:39<15:29,  1.40s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 149/811 [03:41<15:53,  1.44s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 150/811 [03:42<16:01,  1.45s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 19%|█▊        | 151/811 [03:44<15:17,  1.39s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 19%|█▊        | 152/811 [03:45<14:34,  1.33s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 19%|█▉        | 153/811 [03:46<14:56,  1.36s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 19%|█▉        | 154/811 [03:48<16:20,  1.49s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 19%|█▉        | 155/811 [03:49<15:33,  1.42s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 19%|█▉        | 156/811 [03:51<15:06,  1.38s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 19%|█▉        | 157/811 [03:52<15:34,  1.43s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 19%|█▉        | 158/811 [03:53<15:02,  1.38s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 20%|█▉        | 159/811 [03:55<16:58,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 20%|█▉        | 160/811 [03:57<16:53,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 20%|█▉        | 161/811 [03:59<17:20,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 20%|█▉        | 162/811 [04:00<16:35,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 20%|██        | 163/811 [04:01<16:09,  1.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 20%|██        | 164/811 [04:03<17:32,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 20%|██        | 165/811 [04:05<17:37,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 20%|██        | 166/811 [04:07<17:29,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 21%|██        | 167/811 [04:08<18:02,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 21%|██        | 168/811 [04:10<17:30,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 21%|██        | 169/811 [04:11<16:34,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 21%|██        | 170/811 [04:13<16:36,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 21%|██        | 171/811 [04:14<15:55,  1.49s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 21%|██        | 172/811 [04:16<15:51,  1.49s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 21%|██▏       | 173/811 [04:17<16:33,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 21%|██▏       | 174/811 [04:19<17:13,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 22%|██▏       | 175/811 [04:21<17:54,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 22%|██▏       | 176/811 [04:22<17:04,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 22%|██▏       | 177/811 [04:24<16:26,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 22%|██▏       | 178/811 [04:25<16:28,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 22%|██▏       | 179/811 [04:27<16:19,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 22%|██▏       | 180/811 [04:29<16:52,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 22%|██▏       | 181/811 [04:30<16:02,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 22%|██▏       | 182/811 [04:31<15:29,  1.48s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 23%|██▎       | 183/811 [04:33<15:25,  1.47s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 23%|██▎       | 184/811 [04:34<15:10,  1.45s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 23%|██▎       | 185/811 [04:36<15:23,  1.48s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 23%|██▎       | 186/811 [04:37<15:53,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 23%|██▎       | 187/811 [04:39<15:49,  1.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 23%|██▎       | 188/811 [04:41<16:19,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 23%|██▎       | 189/811 [04:43<17:50,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 23%|██▎       | 190/811 [04:44<17:08,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 24%|██▎       | 191/811 [04:46<17:31,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 24%|██▎       | 192/811 [04:48<17:34,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 24%|██▍       | 193/811 [04:49<17:37,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 24%|██▍       | 194/811 [04:51<17:07,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 24%|██▍       | 195/811 [04:53<17:15,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 24%|██▍       | 196/811 [04:54<16:50,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 24%|██▍       | 197/811 [04:56<16:28,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 24%|██▍       | 198/811 [04:58<17:22,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▍       | 199/811 [04:59<17:12,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▍       | 200/811 [05:01<17:21,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▍       | 201/811 [05:03<17:18,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▍       | 202/811 [05:05<17:41,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▌       | 203/811 [05:06<17:30,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▌       | 204/811 [05:08<17:14,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▌       | 205/811 [05:09<16:32,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▌       | 206/811 [05:11<16:05,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 26%|██▌       | 207/811 [05:12<15:45,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 26%|██▌       | 208/811 [05:14<14:53,  1.48s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 26%|██▌       | 209/811 [05:15<14:31,  1.45s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 26%|██▌       | 210/811 [05:17<16:37,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 26%|██▌       | 211/811 [05:19<16:15,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 26%|██▌       | 212/811 [05:20<15:58,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 26%|██▋       | 213/811 [05:22<17:03,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 26%|██▋       | 214/811 [05:26<24:15,  2.44s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 215/811 [05:28<20:53,  2.10s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 216/811 [05:29<19:05,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 217/811 [05:31<18:24,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 218/811 [05:33<17:29,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 219/811 [05:34<16:49,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 220/811 [05:36<16:10,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 221/811 [05:37<16:04,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 222/811 [05:40<18:30,  1.89s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 223/811 [05:41<17:28,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 28%|██▊       | 224/811 [05:43<17:00,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 28%|██▊       | 225/811 [05:44<16:30,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 28%|██▊       | 226/811 [05:46<16:59,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 28%|██▊       | 227/811 [05:50<22:47,  2.34s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 28%|██▊       | 228/811 [05:51<20:01,  2.06s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 28%|██▊       | 229/811 [05:53<18:24,  1.90s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 28%|██▊       | 230/811 [05:54<16:57,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 28%|██▊       | 231/811 [05:56<16:57,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 29%|██▊       | 232/811 [05:58<17:07,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 29%|██▊       | 233/811 [06:01<19:20,  2.01s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 29%|██▉       | 234/811 [06:02<18:37,  1.94s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 29%|██▉       | 235/811 [06:04<17:48,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 29%|██▉       | 236/811 [06:05<16:53,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 29%|██▉       | 237/811 [06:08<19:15,  2.01s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 29%|██▉       | 238/811 [06:10<18:39,  1.95s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 29%|██▉       | 239/811 [06:11<17:11,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 30%|██▉       | 240/811 [06:13<16:44,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 30%|██▉       | 241/811 [06:15<16:31,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 30%|██▉       | 242/811 [06:17<16:43,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 30%|██▉       | 243/811 [06:19<19:09,  2.02s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 30%|███       | 244/811 [06:21<17:46,  1.88s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 30%|███       | 245/811 [06:22<17:04,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 30%|███       | 246/811 [06:24<16:06,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 30%|███       | 247/811 [06:26<16:02,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 31%|███       | 248/811 [06:27<16:07,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 31%|███       | 249/811 [06:29<16:23,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 31%|███       | 250/811 [06:31<15:57,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 31%|███       | 251/811 [06:32<15:33,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 31%|███       | 252/811 [06:34<14:33,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 31%|███       | 253/811 [06:35<14:14,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 31%|███▏      | 254/811 [06:37<13:58,  1.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 31%|███▏      | 255/811 [06:38<14:21,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 32%|███▏      | 256/811 [06:40<14:25,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 32%|███▏      | 257/811 [06:41<14:04,  1.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 32%|███▏      | 258/811 [06:43<13:46,  1.49s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 32%|███▏      | 259/811 [06:44<13:59,  1.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 32%|███▏      | 260/811 [06:46<13:29,  1.47s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 32%|███▏      | 261/811 [06:47<13:36,  1.48s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 32%|███▏      | 262/811 [06:49<14:05,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 32%|███▏      | 263/811 [06:50<14:04,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 33%|███▎      | 264/811 [06:52<14:13,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 33%|███▎      | 265/811 [06:53<14:07,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 33%|███▎      | 266/811 [06:55<13:37,  1.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 33%|███▎      | 267/811 [06:56<13:23,  1.48s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 33%|███▎      | 268/811 [06:58<13:57,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 33%|███▎      | 269/811 [06:59<13:56,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 33%|███▎      | 270/811 [07:08<31:57,  3.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 33%|███▎      | 271/811 [07:09<26:19,  2.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 34%|███▎      | 272/811 [07:11<22:32,  2.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 34%|███▎      | 273/811 [07:13<22:56,  2.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 34%|███▍      | 274/811 [07:15<21:00,  2.35s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 34%|███▍      | 275/811 [07:17<18:23,  2.06s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 34%|███▍      | 276/811 [07:18<17:30,  1.96s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 34%|███▍      | 277/811 [07:21<18:01,  2.03s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 34%|███▍      | 278/811 [07:22<17:13,  1.94s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 34%|███▍      | 279/811 [07:24<16:12,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 35%|███▍      | 280/811 [07:26<16:40,  1.88s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 35%|███▍      | 281/811 [07:27<15:30,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 35%|███▍      | 282/811 [07:29<14:39,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 35%|███▍      | 283/811 [07:30<14:48,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 35%|███▌      | 284/811 [07:32<14:12,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 35%|███▌      | 285/811 [07:33<13:43,  1.57s/it] 35%|███▌      | 286/811 [07:35<13:54,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 35%|███▌      | 287/811 [07:37<13:43,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▌      | 288/811 [07:38<14:05,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▌      | 289/811 [07:40<13:56,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▌      | 290/811 [07:42<14:31,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▌      | 291/811 [07:44<14:56,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▌      | 292/811 [07:45<14:17,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▌      | 293/811 [07:47<13:59,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▋      | 294/811 [07:48<14:23,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▋      | 295/811 [07:50<14:19,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▋      | 296/811 [07:52<13:59,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 37%|███▋      | 297/811 [07:53<13:43,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 37%|███▋      | 298/811 [07:55<13:48,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 37%|███▋      | 299/811 [07:56<13:52,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 37%|███▋      | 300/811 [07:58<14:00,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 37%|███▋      | 301/811 [08:00<14:22,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 37%|███▋      | 302/811 [08:01<13:55,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 37%|███▋      | 303/811 [08:03<13:56,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 37%|███▋      | 304/811 [08:05<13:59,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 38%|███▊      | 305/811 [08:07<16:07,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 38%|███▊      | 306/811 [08:09<15:11,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 38%|███▊      | 307/811 [08:11<15:03,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 38%|███▊      | 308/811 [08:12<14:01,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 38%|███▊      | 309/811 [08:14<15:05,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 38%|███▊      | 310/811 [08:16<16:37,  1.99s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 38%|███▊      | 311/811 [08:18<16:25,  1.97s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 38%|███▊      | 312/811 [08:20<15:30,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 39%|███▊      | 313/811 [08:22<15:12,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 39%|███▊      | 314/811 [08:23<14:25,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 39%|███▉      | 315/811 [08:25<13:35,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 39%|███▉      | 316/811 [08:26<13:34,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 39%|███▉      | 317/811 [08:28<14:12,  1.73s/it] 39%|███▉      | 318/811 [08:30<13:50,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 39%|███▉      | 319/811 [08:31<13:06,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 39%|███▉      | 320/811 [08:33<13:11,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 40%|███▉      | 321/811 [08:35<13:20,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 40%|███▉      | 322/811 [08:36<13:08,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 40%|███▉      | 323/811 [08:38<14:00,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 40%|███▉      | 324/811 [08:40<13:37,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 40%|████      | 325/811 [08:41<13:14,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 40%|████      | 326/811 [08:44<15:25,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 40%|████      | 327/811 [08:47<19:33,  2.43s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 40%|████      | 328/811 [08:49<16:54,  2.10s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 41%|████      | 329/811 [08:50<14:57,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 41%|████      | 330/811 [08:51<13:37,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 41%|████      | 331/811 [08:53<13:21,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 41%|████      | 332/811 [08:55<13:02,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 41%|████      | 333/811 [08:56<13:03,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 41%|████      | 334/811 [08:58<12:48,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 41%|████▏     | 335/811 [08:59<12:31,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 41%|████▏     | 336/811 [09:01<12:12,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 42%|████▏     | 337/811 [09:02<11:46,  1.49s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 42%|████▏     | 338/811 [09:04<12:03,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 42%|████▏     | 339/811 [09:05<12:11,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 42%|████▏     | 340/811 [09:07<12:37,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 42%|████▏     | 341/811 [09:08<11:54,  1.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 42%|████▏     | 342/811 [09:10<11:58,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 42%|████▏     | 343/811 [09:11<11:59,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 42%|████▏     | 344/811 [09:15<15:37,  2.01s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 43%|████▎     | 345/811 [09:16<14:31,  1.87s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 43%|████▎     | 346/811 [09:18<14:30,  1.87s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 43%|████▎     | 347/811 [09:25<27:11,  3.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 43%|████▎     | 348/811 [09:27<22:53,  2.97s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 43%|████▎     | 349/811 [09:29<19:26,  2.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 43%|████▎     | 350/811 [09:30<17:15,  2.25s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 43%|████▎     | 351/811 [09:32<15:45,  2.06s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 43%|████▎     | 352/811 [09:33<14:56,  1.95s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 44%|████▎     | 353/811 [09:35<14:35,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 44%|████▎     | 354/811 [09:38<15:40,  2.06s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 44%|████▍     | 355/811 [09:39<14:50,  1.95s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 44%|████▍     | 356/811 [09:41<13:52,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 44%|████▍     | 357/811 [09:43<13:21,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 44%|████▍     | 358/811 [09:44<12:39,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 44%|████▍     | 359/811 [09:46<13:09,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 44%|████▍     | 360/811 [09:47<12:32,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▍     | 361/811 [09:49<12:46,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▍     | 362/811 [09:51<13:03,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▍     | 363/811 [09:53<13:08,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▍     | 364/811 [09:54<12:45,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▌     | 365/811 [09:56<12:09,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▌     | 366/811 [09:57<11:53,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▌     | 367/811 [09:59<11:18,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▌     | 368/811 [10:01<13:22,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▌     | 369/811 [10:03<13:05,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 46%|████▌     | 370/811 [10:07<19:05,  2.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 46%|████▌     | 371/811 [10:10<17:56,  2.45s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 46%|████▌     | 372/811 [10:11<16:08,  2.21s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Trying to load from /users/rhydian/self-supervised-project/model_weights/SSECEncodersBothBoth
==> Resuming model trained for 106 epochs...
Trying to load from ../model_weights/angle_regressor4
==> Resuming model trained for 7 epochs...
2710819_20201_2_0,y7u2fn4icz,-2.8201753311108497,-147.94229903402882,-33.59682024049539

6001020_20201_2_0,y7ufio4icz,-0.1709189939044601,-63.90096095230186,-41.46022447143474

2679702_20201_2_0,y7yu9p4icz,-1.6565347632875185,-112.56685408444608,-23.148120469580547

5299381_20201_2_0,y89cbo4icz,1.505738735764887,-65.74799573046187,-34.96559693837645

3821213_20201_2_0,y8abwo4icz,-2.2781502422158795,-59.927982642826095,-23.130564658516292

4980216_20201_2_0,y8d0gn4icz,0.15651019952077455,-75.4745574356102,-39.32802546304684

4813911_20201_2_0,y8d47p4icz,2.8198002740763486,-99.58131673769086,-28.32455826358614

4569446_20201_2_0,y8fyvo4icz,-0.25965738725518833,-109.22747143937372,-37.48904536106693

3070627_20201_2_0,y8j65p4icz,-2.403985105943674,-101.14384721460576,-23.576862378106114

1424236_20201_2_0,y8kn8o4icz,-3.504159585495161,-105.29389760642292,-29.315800370608372

3488451_20201_2_0,nzb1vn4icz,-4.403497787535578,-92.56121744723748,-20.907804513110335

4429698_20201_2_0,y8qr6p4icz,-0.7952305710831307,-110.67944308264757,-31.300140284109858

4539465_20201_2_0,y8yvrn4icz,0.864524054224956,-82.54391938329229,-51.57266587323217

5858344_20201_2_0,y8z9to4icz,-0.5956621625290826,-140.3501001986972,-33.367605858149574

1193887_20201_2_0,y9787o4icz,1.276617043328001,-120.274856207537,-40.91900078954653

4991360_20201_2_0,y984yo4icz,3.494229215706664,-105.94427818459147,-45.437272899554245

5076975_20201_2_0,y9blyo4icz,0.30225560795710654,-83.80709353513251,-27.57254652329854

5341384_20201_2_0,y9cmln4icz,-2.1383939291160914,-154.11203725673096,-17.122128781745687

2557960_20201_2_0,y9dmsn4icz,-1.9265496591782343,-129.16794177565674,-20.546005732014123

5887322_20201_2_0,y9epip4icz,-1.4832862937990448,-94.29261872991233,-41.524623892326886

2994112_20201_2_0,y9ljbo4icz,1.0635066062395924,-92.47447758047221,-45.69170387895778

4637259_20201_2_0,y9lpdp4icz,2.5455100541301006,-80.13197714445866,-57.999179345599075

4232847_20201_2_0,y9m47p4icz,4.83160586315506,-78.43449371315626,-78.14756230733758

2272079_20201_2_0,y9z9io4icz,-1.9241631544243152,-93.38147167605533,-33.46821811239852

4769992_20201_2_0,y9zk9n4icz,2.8419214079343162,-85.3263980538116,-52.31860353750383

1338180_20201_2_0,y9zmbo4icz,-0.8254040936280156,-112.4433952435142,-31.09063715634548

5308833_20201_2_0,y9zyso4icz,0.15281503507941924,-70.25027478375463,-38.818584214637454

3247303_20201_2_0,ya0ltn4icz,1.3945371436965734,-89.3586902082107,-42.26371820237888

5751018_20201_2_0,ya27xo4icz,-0.9479806917525995,-110.38210728626689,-40.9109300763502

5346759_20201_2_0,ya9j2o4icz,-0.38074096774616073,-84.33298405551349,-31.78840826521595

4750485_20201_2_0,yaae4p4icz,1.6262341365571003,-95.30610712198876,-36.392918843615675

5406801_20201_2_0,yaegso4icz,0.29732266719423867,-107.16547772501508,-29.063376541047035

3956358_20201_2_0,yafa7p4icz,0.5052508028493996,-109.52321987800357,-46.328023962701565

5171021_20201_2_0,yajdpo4icz,-0.5632130593064436,-79.13722023448815,-40.33472271739204

5468577_20201_2_0,yakknn4icz,2.2732630424629825,-110.74722477326728,-54.62389726962596

2816774_20201_2_0,yalhgp4icz,-6.370780899314513,-133.50235154767608,6.133419886299663

5594941_20201_2_0,yalkao4icz,-3.509452137863853,-102.55516555188578,-26.52874605471544

4377539_20201_2_0,yaloyo4icz,2.701065026374698,-77.06099711293172,-61.2839315986478

4451026_20201_2_0,yannho4icz,-9.972967742443235,-110.44952424937384,25.40468522726715

2732565_20201_2_0,yapcvo4icz,-1.614170794051441,-109.24327275328807,-17.897277960640466

4642041_20201_2_0,yav8dp4icz,-1.9088136374989313,-106.48964225151954,-21.079668392962603

4898132_20201_2_0,yayeap4icz,-0.46652846596042974,-45.500669950837136,-40.73188597470437

5500140_20201_2_0,yaz00p4icz,-4.208317079433093,-114.86993598037125,-2.1269489151873415

3276616_20201_2_0,yb0ljp4icz,0.3012737417721581,-72.11626320376567,-41.48792060865583

3324103_20201_2_0,yb889p4icz,1.6914130626409656,-125.85400344577465,-51.87349707788857

1932364_20201_2_0,yb8rqo4icz,-0.8159321597868386,-65.65370616414037,-30.953418078460288

3868482_20201_2_0,yb9aro4icz,-0.2074578914672637,-107.02546614842089,-11.907842479989398

1166017_20201_2_0,ybabzo4icz,1.3273930104127982,-62.262542934404166,-32.19035803549312

5103238_20201_2_0,ybcako4icz,-2.0163094046271275,-94.56770623705023,-17.775970251608356

3187330_20201_2_0,ybd36o4icz,0.8265110047878107,-74.85921402168168,-47.671065742076905

5361486_20201_2_0,cb8quo4icz,-0.6640871796563139,-95.84527967670283,-44.15397622231782

3868093_20201_2_0,ybfi4p4icz,0.8902301919149017,-114.91663666058045,-63.38200659699629

5691719_20201_2_0,ybnq9o4icz,-1.203251198465558,-44.80306627275655,-26.940044943179757

1467970_20201_2_0,ybtven4icz,1.6742842282178634,-128.76462799149039,-50.691649593785485

3623363_20201_2_0,yc06po4icz,0.8601876991802176,-104.09450265658236,-42.23451298816907

5359058_20201_2_0,yc3yyn4icz,1.2061583160915996,-84.80964551154696,-37.435515033981645

1890477_20201_2_0,yc56uo4icz,-0.02622660555294648,-87.86289521621208,-28.957612956029266

3400672_20201_2_0,yc6nip4icz,2.579234387835232,-100.89864815532573,-67.67030132211855

2413848_20201_2_0,yc8zsn4icz,-1.2096741426054338,-129.09356879807277,-27.942608897753473

3890406_20201_2_0,yc9lip4icz,-0.2821023349700415,-85.71479453401247,-37.45761259625016

4666354_20201_2_0,yccxhp4icz,-0.1781331651228451,-154.1039236384947,-36.99815505006735

1185534_20201_2_0,ycdwvn4icz,-0.439014575230637,-73.34893749968353,-47.21861207338597

2915043_20201_2_0,ych3ao4icz,-0.22224329782382918,-72.40836924707898,-17.04643503904535

3091666_20201_2_0,ycj9wn4icz,0.9802298649183234,-98.36918957170352,-40.70148052617583

4394478_20201_2_0,yckico4icz,-1.0569089960523723,-116.4202224338614,-7.088375941672979

5445269_20201_2_0,ycnhyo4icz,2.246651153569084,-87.30267900401438,-50.59231696473351

3137477_20201_2_0,ycogen4icz,-3.3762544422479026,-85.20762970296059,-11.001721073178828

2633002_20201_2_0,ycrdeo4icz,1.816161639640003,-81.59630859197341,-51.64058871822732

4094566_20201_2_0,ycuuvo4icz,-0.568477345469733,-97.05650374120711,-30.212361275623635

1215687_20201_2_0,ycwrwo4icz,-1.1003550272988445,-98.50569038959347,-12.447611383163007

3577462_20201_2_0,yd3q6p4icz,0.510919474699956,-106.10011265513768,-47.76178892778256

4472502_20201_2_0,ydbj0o4icz,-4.211025242230177,-54.66442284015858,-31.10111347487748

4025539_20201_2_0,ydcsen4icz,1.670909064239542,-100.73120833974679,-34.77595773541361

4351524_20201_2_0,ydcx8p4icz,-5.51731225595515,-99.10478241042486,-4.667490871290767

2247685_20201_2_0,ydf73o4icz,1.3175366563417579,-65.70950194714788,-34.44414374675172

2426710_20201_2_0,ydg4in4icz,5.380688812003672,-89.70404493019618,-59.79824583751868

2817422_20201_2_0,ydh4po4icz,1.5298585115586785,-108.94973707378585,-27.538393407385826

4844985_20201_2_0,ydnijp4icz,-0.1342348458497178,-105.11805132768507,-41.76251457613965

2732412_20201_2_0,ydvskn4icz,-3.6591780916519023,-112.95337101371243,-6.288282030154477

3471295_20201_2_0,ydvv5o4icz,0.7497432127979974,-116.08439716469826,-44.81496415052976

1879582_20201_2_0,ydy4kp4icz,0.4740600805625049,-117.45050074151638,-54.83743293367681

1151250_20201_2_0,ydzxvn4icz,-0.8511191835445983,-83.83192794718559,-33.54399339751575

2848646_20201_2_0,g6xbon4icz,-0.44171502764638837,-66.64606296958212,-38.20492685434155

3893562_20201_2_0,ye3r6o4icz,1.923989067129977,-109.93825974288166,-50.81495456199879

4568151_20201_2_0,5y65mo4icz,-2.162861476931578,-85.3225148418839,-20.70143109611348

1898714_20201_2_0,ye89sn4icz,1.1650900454271755,-94.64309934842456,-46.353562166909924

1808655_20201_2_0,ye8map4icz,-1.536920050790924,-98.84504808436654,-40.875395909416994

4059162_20201_2_0,yead8p4icz,2.9880166160686685,-50.10325926112361,-32.01469265637405

5667525_20201_2_0,yehwbo4icz,0.17167894113394339,-43.74104934885304,-24.81587356939484

2852826_20201_2_0,yei14p4icz,-3.6292872200575257,-100.25107061728738,-20.16904179992045

3054784_20201_2_0,yevgfp4icz,-3.172324583958776,-108.29178196269604,-17.442644404824804

4332620_20201_2_0,yf0ato4icz,-1.9297371837474022,-112.32985371571579,-29.727597833499274

1983641_20201_2_0,yf3qap4icz,-4.219166068292917,-112.37775315669816,-1.8855875915533602

3442086_20201_2_0,yf8mjo4icz,0.6479097353485268,-52.09971640915086,-45.529715191714075

4813380_20201_2_0,yfbe9p4icz,-0.9706346023756252,-96.53135497919828,-31.16081457389032

3855143_20201_2_0,yfc1ho4icz,0.5892758884341625,-83.43883375738042,-49.00111557098195

4790919_20201_2_0,yfc5kp4icz,0.27754929125722066,-62.691199980335426,-49.88982032659908

1136823_20201_2_0,yffkap4icz,2.6809197070527886,-86.78709947777583,-51.74880241579871

4462250_20201_2_0,yfghon4icz,0.3474380203921572,-109.29192215171972,-32.862858906270404

4523813_20201_2_0,yfku6o4icz,67.22456366632775,270.00641347828986,-175.9928239578206

5943944_20201_2_0,yg14rn4icz,-142.04925482526642,631.4505975970357,177.19361675732358

3090919_20201_2_0,yg2agp4icz,3.311200881050046,-147.32285367473258,-66.59583543266626

4418954_20201_2_0,yg2onn4icz,-1.6198014720041884,-65.58324212501398,-16.53553191556405

1987169_20201_2_0,yg554o4icz,0.7546041361241447,-104.95834375900148,-52.258346932377776

1996660_20201_2_0,yg7oun4icz,-0.32514295274219934,-124.45335057972468,-36.36403500396162

4782351_20201_2_0,ygc36o4icz,0.36665842742032834,-95.53552581875624,-23.86350899022898

4874014_20201_2_0,yghlgp4icz,-3.7890381194144247,-117.45610471962917,-12.937274916030901

4039727_20201_2_0,yghp8o4icz,0.5919100327743982,-86.06372317279295,-27.503456317901254

3154811_20201_2_0,yghzwn4icz,-2.2189817742940803,-114.79997924634523,-21.349356047542813

4355323_20201_2_0,ygk1oo4icz,-0.9381119626720374,-119.91812500473216,-26.052310259481146

1487993_20201_2_0,ygkk1o4icz,0.5515112931238784,-120.56202106391495,-28.59958101285605

2339494_20201_2_0,ygp7gn4icz,1.5090684166021004,-88.3292942372783,-46.3473513126866

3671659_20201_2_0,ygrj9p4icz,-0.09838789621059348,-111.0394747593999,-16.922997686812366

4928660_20201_2_0,ygs4mo4icz,7.457023425582932,-77.91510018294073,-80.2812645282797

3822367_20201_2_0,yh34jp4icz,0.677861714994087,-98.74227464780137,-35.82182755200901

2743992_20201_2_0,yh6gxn4icz,0.2049165386039965,-77.28541682123463,-26.644858372248265

4792613_20201_2_0,yh7jpn4icz,3.0586189012036096,-94.41484685754045,-61.11871414108394

1453950_20201_2_0,yhcw5p4icz,-2.749397200217456,-162.51954102781022,-15.587207074515092

1492678_20201_2_0,yhfpfn4icz,-4.177033652999394,-112.0289510160656,-17.803017452332114

5306012_20201_2_0,yhfznn4icz,-7.379963824453339,-97.8771194787503,7.937744652651659

5382577_20201_2_0,yhhzso4icz,2.3843350990081404,-99.72962643903554,-34.064359057403976

1503111_20201_2_0,yhig3o4icz,-1.8372032996835954,-110.12240845021998,-36.08246118975012

4396727_20201_2_0,yhknfp4icz,1.9013916449990533,-112.00089931172269,-33.117445996617306

5021549_20201_2_0,yhrhbp4icz,-4.007803571435819,-150.3218303886279,-23.592172810824493

1898262_20201_2_0,yhzfxn4icz,-0.17845486147566944,-104.06747815418419,-28.662392062879988

2246038_20201_2_0,yi1dcp4icz,-1.7856164047330352,-76.92727449660384,-41.182350198853214

4732728_20201_2_0,yi6cio4icz,-3.238774309257265,-53.33607695050907,-34.804825782280346

2215947_20201_2_0,yi7gfp4icz,2.142035349927379,-70.16296746310076,-52.636729189941505

5922548_20201_2_0,yifavo4icz,-1.028480572358989,-86.55752069248538,-25.30261472402107

3707674_20201_2_0,yifkcp4icz,2.836621841174037,-65.0266428384374,-63.95138136102817

2596322_20201_2_0,yijg3o4icz,-2.6762423993442006,-85.60286276095607,-22.179600096368418

2026283_20201_2_0,yikfrn4icz,-1.0965989855106573,-88.77360538859966,-18.414528646761084

4615313_20201_2_0,yileho4icz,-14.385919617864646,-169.91689340281394,37.50792246655166

1755221_20201_2_0,yim4do4icz,-2.0247595717455584,-107.69035430093035,-36.50928109066858

2579758_20201_2_0,yip3nn4icz,3.668844203474193,-97.76913202407437,-50.417222883396846

5594828_20201_2_0,yiv7ep4icz,0.40090737931119375,-123.84303566169822,-44.108005647027824

4967080_20201_2_0,yiwuvn4icz,-1.8283526010256015,-102.56449566185154,-29.016087497384603

3690410_20201_2_0,yj3e8n4icz,0.8445978192979067,-127.59034624404262,-38.34887127987514

5276881_20201_2_0,yj4own4icz,0.6981363960969271,-90.02060946977403,-35.65184135875279

3544543_20201_2_0,yjb8tn4icz,3.3909363206643817,-96.61772851210182,-58.53478130177973

1949314_20201_2_0,yjcnro4icz,-4.031450060463875,-106.94039908158018,-16.396230449547488

1153972_20201_2_0,yjgeto4icz,0.16547400048725652,-69.79391415471036,-36.88723184008548

3695235_20201_2_0,yjgkcp4icz,-0.9872742642056921,-114.3921630276304,-46.88180349062023

5981396_20201_2_0,yjh4wo4icz,0.3390322999352598,-99.9248017585771,-45.96816376260318

2352822_20201_2_0,yjis2o4icz,-0.302771284071479,-68.35538878238637,-24.498479666023

1666917_20201_2_0,yjp11p4icz,-0.0561494834218422,-67.13087678087632,-44.1498913704297

1701912_20201_2_0,yjtzyo4icz,3.2154855882493134,-87.4503857934966,-53.58076932748986

5238858_20201_2_0,yjwl6p4icz,-1.0281964614064374,-98.1207455711561,-12.80208598979732

4195821_20201_2_0,yjychp4icz,1.8354510555442678,-99.96266026956525,-46.44690908474972

3632683_20201_2_0,yk8jgn4icz,-2.4349007777038016,-81.68723751652169,-24.24127169771579

2034075_20201_2_0,ykcrfn4icz,-1.8380283659763634,-81.19037392946507,-23.370008459783065

3643791_20201_2_0,ykduro4icz,0.6638832365030193,-76.19544653057372,-48.37244531323819

5687377_20201_2_0,yke7en4icz,1.2217309809344643,-108.00101034926615,-44.50092916016146

3278993_20201_2_0,ykfiln4icz,1.3484141870087707,-106.05117339087334,-43.89087263714961

4831996_20201_2_0,ykfj9p4icz,-0.7200904608378036,-131.8919327114621,-26.74393236333495

2740195_20201_2_0,ykit6p4icz,-3.7384616106385176,-129.3651348542106,-7.78236465074572

4755345_20201_2_0,ykmobo4icz,-0.3384936019819963,-129.8418244688528,-25.964060077213603

4184694_20201_2_0,ykmpmo4icz,-4.235999436736612,-106.14773662165834,-14.079359698703541

4535077_20201_2_0,ykr37n4icz,-0.672794413591349,-61.116680332877934,-17.211842792869447

4866404_20201_2_0,ykr97o4icz,-1.3438164705341415,-77.98853100180443,-25.010183087528645

5358841_20201_2_0,ykxt3o4icz,-1.6007207280383493,-133.10051255899077,-28.557506863158892

2888183_20201_2_0,ykyucn4icz,-2.1465261275386207,-94.82826243672193,-23.67094203187824

2311873_20201_2_0,yl2upo4icz,1.6806852514699873,-88.18349404789518,-41.2644284830499

4760302_20201_2_0,yl8z5o4icz,-5.467423276486233,-107.06329305628853,-24.801609520735497

1456191_20201_2_0,yla6ko4icz,-1.6812884257122236,-55.792354819831246,-24.225009895659483

2306260_20201_2_0,yldqhp4icz,-0.2888527829590308,-66.78502174237798,-37.010945712702124

3612344_20201_2_0,yldzzo4icz,1.879820046658794,-87.90165876730765,-51.76133799893469

2498533_20201_2_0,yleflo4icz,-1.5173542776906181,-87.98716173284328,-22.5050495961913

5842900_20201_2_0,ylgexo4icz,2.6692990221123334,-70.85183894683433,-61.58723460270345

1362488_20201_2_0,ylgqbn4icz,0.21652698318153615,-121.00002660030088,-48.72711647362473

4431716_20201_2_0,ylgx5o4icz,0.07539638901015112,-118.32023858376547,-33.96120065543758

3008031_20201_2_0,ylhw4o4icz,-0.8502769434436547,-94.17540601986275,-26.374672594049756

2321001_20201_2_0,yli25o4icz,-1.139491021646871,-88.31827551739795,-21.467314291874487

2418903_20201_2_0,ylod9p4icz,-2.2767987839656287,-123.19176317564254,-29.114013833848418

4079041_20201_2_0,ylqpbp4icz,8.038352434823462,-36.5679542011963,-45.57123788989401

5598996_20201_2_0,yls0ro4icz,-2.351594840346993,-113.17347888668493,-26.22757672321211

3910185_20201_2_0,ylu9dn4icz,-2.0986746902006335,-105.30752039882458,-23.747506628107345

5597047_20201_2_0,ym0bnn4icz,-0.8688829495928665,-91.71982159654263,-29.532261111959258

3539159_20201_2_0,ym48rn4icz,-10.058159580754648,-119.19428670276034,29.37217307647137

5636098_20201_2_0,ym5mun4icz,3.2197293342674396,-76.60508520349075,-54.37966062890362

1065851_20201_2_0,ym82gn4icz,-0.3171290101536903,-135.2576715980468,-30.36262780498639

3034104_20201_2_0,ym95bp4icz,2.830270736400598,-95.92467486845197,-57.0406862612314

3762698_20201_2_0,ymd8kn4icz,-3.63448243100137,-89.3027162883296,-15.452454036877185

3818985_20201_2_0,ymdudn4icz,0.11320261078795014,-94.06878089670965,-23.865603530259023

4529194_20201_2_0,ymfl5p4icz,-1.2998370905262957,-102.54905118153175,-29.888071231097896

2607772_20201_2_0,ymfuyn4icz,-2.508279695753663,-143.07210096322157,-28.091550328773565

1805970_20201_2_0,ymi4wo4icz,2.0725154821096625,-81.43482247964965,-42.7017294489751

1824892_20201_2_0,ymigqn4icz,-0.3770387410053671,-115.93812901315061,-35.80818716588165

5248552_20201_2_0,ymnhep4icz,-2.914618559079488,-101.08396654055142,-29.739908360881856

3433743_20201_2_0,ymoiqo4icz,2.1683960609890587,-64.06104464509875,-55.73499086327885

5785381_20201_2_0,ymuxgp4icz,-9.094574974814234,-133.50765130569363,4.980959301507255

1323464_20201_2_0,yn3zqo4icz,-1.201450814621937,-68.87817131639278,-6.5882024294970165

4261907_20201_2_0,yn43vn4icz,0.9932041549466571,-66.98917124261075,-35.62923192320615

1793144_20201_2_0,yn5sbn4icz,-1.056218332649827,-118.65109498430016,-27.689328195373847

5226234_20201_2_0,yn7gfo4icz,-4.906917636126291,-133.28077299323053,-5.408801626024058

1215915_20201_2_0,ynbzwo4icz,1.73139107202059,-82.64433800186762,-60.6296843369651

5589747_20201_2_0,ynd1sn4icz,1.6162744891962812,-93.55476334594067,-45.226783776481156

2981282_20201_2_0,yng6io4icz,-6.649427617207203,-53.06735419143931,-5.354422929787674

2145761_20201_2_0,ynkqep4icz,-5.478616961037397,-101.22293704648257,-11.772962554776953

3569741_20201_2_0,ynplcn4icz,-15.390613090055176,-99.31644099432174,61.03571433944322

4181171_20201_2_0,ynpzkn4icz,1.4166141050589725,-92.08721519599666,-57.80041886083809

1364116_20201_2_0,ynqh2o4icz,-0.23983238136842452,-72.99727852845936,-25.43740290614562

5677252_20201_2_0,ynujbp4icz,3.3360112264625834,-112.64453341281268,-51.92909854131247

5144946_20201_2_0,yo6mxo4icz,-0.5405853352485215,-102.19999008037132,-38.43531891429467

4363764_20201_2_0,yo8ohp4icz,8.73143450942608,-88.30790373535018,-78.25970440011662

4640693_20201_2_0,yoc56p4icz,-1.6902185684359674,-134.40722948991257,-27.356435824564002

1975971_20201_2_0,yoc7jo4icz,0.5476661653606605,-38.696115980411776,-70.23139947799751

4683273_20201_2_0,yocg1o4icz,-0.3590208059573184,-77.85579197377427,-35.630597009502395

5850177_20201_2_0,yodu3p4icz,-1.2385984480712366,-129.02857203295,-29.401317765854927

5507973_20201_2_0,e2dj9p4icz,4.390905535933032,-81.74867750309204,-66.78324252920092

4599711_20201_2_0,yogrto4icz,-1.5465127858255623,-124.748959449099,-35.59592187048675

3661826_20201_2_0,yogrvo4icz,-4.426263914055765,-38.29949177491491,-11.08005109146739

3716358_20201_2_0,yohn6p4icz,0.26226021912523834,-99.80569447500395,-35.1980799620529

5211200_20201_2_0,yolb9o4icz,1.695944793368195,-132.53626528372902,-22.1896633540548

4635761_20201_2_0,yolqin4icz,-0.8969757507514698,-109.76882987471322,-29.408404416382695

2349288_20201_2_0,yoocip4icz,-2.500716218522221,-94.29076284902419,-21.565805727604072

5193972_20201_2_0,yop3so4icz,7.606062521719718,-85.03827219840923,-92.26778691430388

2852470_20201_2_0,yopsdo4icz,11.702816050676068,-44.65801743561249,-57.300385813955984

3793410_20201_2_0,yorlcn4icz,3.2782237682618423,-61.5718765036043,-46.918607655970106

2660957_20201_2_0,yoslan4icz,0.4397017811444741,-101.93672331236894,-36.76447020351537

2207718_20201_2_0,yp1kao4icz,-1.9873513396690983,-89.58739870347043,-23.96585557111598

3868017_20201_2_0,yp1qzo4icz,3.4354390921478912,-117.5928739445774,-53.80432278243629

4660609_20201_2_0,yp20ho4icz,1.6872630772045691,-102.53936101505016,-33.17463102606784

2646762_20201_2_0,yp3s3p4icz,-2.2848807068100636,-97.53748841133935,-23.66883521611915

2628097_20201_2_0,yp89lo4icz,0.3164099408476609,-118.43989506918967,-43.85084580358165

3301627_20201_2_0,ypc6bo4icz,-0.42420837074335943,-73.81268209953251,-2.230369861715147

1266153_20201_2_0,ypcnxn4icz,1.0798168410180042,-76.46734387350799,-49.44234152984042

5259724_20201_2_0,ypdspn4icz,-4.787339325161624,-176.10119243003888,-40.062501883243996

1697277_20201_2_0,ypos5p4icz,-0.847394615361403,-86.95403164427225,-31.7418542240071

5121047_20201_2_0,yppzrn4icz,0.8470301786589279,-176.3909090333313,-49.78437175252573

5925868_20201_2_0,yprmeo4icz,-1.6625077172020588,-102.12335333835921,-36.05886666040351

1508622_20201_2_0,ypwpcn4icz,16.762944340675382,-23.86577197292428,-167.7500253588056

1867657_20201_2_0,kipf7p4icz,0.21028498832163436,-89.4751349586247,-43.283449586332026

5453987_20201_2_0,yq1p5p4icz,0.9439129650345213,-120.98235647667056,-41.8219693134409

2131275_20201_2_0,yq4upn4icz,0.18635916333966304,-129.9275742269924,-22.932822857654017

3788055_20201_2_0,yq76tn4icz,0.34573075863412994,-123.95948003500223,-33.801584516447946

5566183_20201_2_0,yq9mnn4icz,0.650854127335987,-109.86206391195779,-44.51074956965185

2786722_20201_2_0,yqbn9p4icz,1.2952362601512397,-83.2308742301183,-39.582830783879814

4084386_20201_2_0,yqf98p4icz,0.9383665559489559,-107.24946149469721,-65.24555490832773

5144662_20201_2_0,yqjmcp4icz,-1.0250548365670045,-87.42306160538666,-50.75459362268106

3152166_20201_2_0,yqkdbn4icz,4.47991428391888,-74.08343426635889,-49.035532370192854

4328029_20201_2_0,yqn88n4icz,-3.11762982420362,-98.74503627541557,-36.76948868936235

4860888_20201_2_0,yqn89p4icz,3.0862039873787057,-144.65855708896618,-35.161152491618964

4557156_20201_2_0,yqo20p4icz,1.2112260209355346,-134.3030934304594,-24.611113467441356

2464295_20201_2_0,yqorso4icz,0.16805092494646282,-104.76588628292558,-33.92564510880247

2481483_20201_2_0,yqs9ap4icz,0.30811041366460246,-127.23585087333004,-49.0277055436396

1756079_20201_2_0,yqt5eo4icz,0.752155325178302,-78.51195552733492,-48.315761104488146

3167476_20201_2_0,yqwjcn4icz,0.1613779711724351,-78.57740394402538,-26.864097490369716

2903822_20201_2_0,yr172p4icz,0.744154836409921,-90.74952263685452,-40.78005206068302

5777495_20201_2_0,yr1ojo4icz,-0.5245598391335679,-116.52071396287138,-35.77179951784899

5075110_20201_2_0,yr3sbn4icz,-0.6754805257911879,-82.66977347673875,-40.70828887410032

5273456_20201_2_0,yr4zen4icz,1.3796948529048716,-79.00851762516774,-41.03516522820502

3007518_20201_2_0,yr63ho4icz,-0.04379853966228834,-96.42125136951071,-26.429174791053526

2112822_20201_2_0,yr6zen4icz,1.8346641417531626,-69.61142698298409,-48.99234762372643

3546217_20201_2_0,yrckxo4icz,-5.18707382051522,-96.11402281408385,0.8105165888170802

1003010_20201_2_0,yre71p4icz,1.7086441919782853,-91.9227747089806,-42.25294083610217

4327042_20201_2_0,yrfh7o4icz,0.29057664733460803,-81.37128462634811,-36.94200863376845

3123333_20201_2_0,yrv75o4icz,-3.6173159462627806,-137.7852727636939,-14.672138510671715

4727614_20201_2_0,yrvocp4icz,-0.13763313431199756,-37.77749667633873,-37.69104668454206

3382334_20201_2_0,yryzyo4icz,5.227549157476552,-34.65750901385809,-62.904460673530394

2327186_20201_2_0,ys1qjp4icz,2.002050358636199,-90.56953335325895,-39.19661774669365

1035330_20201_2_0,ys42no4icz,0.20135203350147593,-69.61366788279761,-35.862702487600856

5590729_20201_2_0,ys7uin4icz,1.2800349312009085,-40.201732020681305,-36.95659519663252

4090806_20201_2_0,ysbezn4icz,4.205020464634325,-68.06667508069006,-45.120066172528226

3496564_20201_2_0,ysbqhp4icz,1.9291490390010528,-51.464353126369616,-40.53964081900773

3085076_20201_2_0,ysnrcn4icz,-1.5485770106499237,-96.56976341074957,-18.015262697115432

1586558_20201_2_0,yso9gn4icz,-4.042956624694863,-128.06462430172857,-24.887186134975536

5343269_20201_2_0,ysxa8o4icz,-2.7361509392290606,-133.4859302581148,-30.08933221571209

1828435_20201_2_0,yszb0p4icz,0.34763303074002205,-77.172977636484,-40.69359789617012

4844044_20201_2_0,yt0i0p4icz,4.517987971142702,-85.81853016936915,-65.3528212645932

3174639_20201_2_0,yt5qso4icz,-1.3451141021914454,-131.48583082560162,-26.46699885971981

2036242_20201_2_0,yt88ip4icz,-3.4793229433573245,-95.23291722755457,-49.43001035011099

5716287_20201_2_0,ytajio4icz,-0.5853393732977694,-72.96214852587707,-22.363310785711576

5471559_20201_2_0,ytd38p4icz,-2.936401505349277,-108.01142334669578,-13.453720574682421

4731695_20201_2_0,ytgxyn4icz,-0.5696634666596981,-70.40479477838431,-36.200443632124035

4392946_20201_2_0,yti9in4icz,6.804038896991487,-84.29615032715188,-62.62610615670387

4614513_20201_2_0,ytiezn4icz,0.5598868090102546,-103.08694658821028,-43.72102228228496

4577075_20201_2_0,ytiftn4icz,-0.09524593500856143,-108.77502722183345,-33.90970769107325

1605840_20201_2_0,ytjdpn4icz,0.689146683303608,-123.29368774263568,-48.02377917704462
 46%|████▌     | 373/811 [10:15<18:35,  2.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 46%|████▌     | 374/811 [10:16<16:14,  2.23s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 46%|████▌     | 375/811 [10:18<14:49,  2.04s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 46%|████▋     | 376/811 [10:20<14:34,  2.01s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 46%|████▋     | 377/811 [10:21<13:50,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 47%|████▋     | 378/811 [10:23<12:30,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 47%|████▋     | 379/811 [10:24<11:54,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 47%|████▋     | 380/811 [10:25<11:29,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 47%|████▋     | 381/811 [10:27<11:15,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 47%|████▋     | 382/811 [10:28<10:57,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 47%|████▋     | 383/811 [10:30<11:04,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 47%|████▋     | 384/811 [10:32<11:52,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 47%|████▋     | 385/811 [10:33<11:15,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 48%|████▊     | 386/811 [10:35<10:49,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 48%|████▊     | 387/811 [10:36<10:50,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 48%|████▊     | 388/811 [10:38<10:55,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 48%|████▊     | 389/811 [10:40<11:08,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 48%|████▊     | 390/811 [10:41<10:43,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 48%|████▊     | 391/811 [10:43<11:15,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 48%|████▊     | 392/811 [10:44<11:03,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 48%|████▊     | 393/811 [10:46<10:49,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 49%|████▊     | 394/811 [10:47<10:47,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 49%|████▊     | 395/811 [10:49<10:55,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 49%|████▉     | 396/811 [10:50<10:41,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 49%|████▉     | 397/811 [10:52<10:29,  1.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 49%|████▉     | 398/811 [10:53<10:29,  1.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 49%|████▉     | 399/811 [10:55<10:26,  1.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 49%|████▉     | 400/811 [10:56<10:27,  1.53s/it] 49%|████▉     | 401/811 [10:58<10:38,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|████▉     | 402/811 [11:00<10:53,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|████▉     | 403/811 [11:01<10:42,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|████▉     | 404/811 [11:03<10:25,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|████▉     | 405/811 [11:04<10:11,  1.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|█████     | 406/811 [11:06<10:09,  1.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|█████     | 407/811 [11:07<10:34,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|█████     | 408/811 [11:09<10:27,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|█████     | 409/811 [11:10<10:24,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 51%|█████     | 410/811 [11:12<10:43,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 51%|█████     | 411/811 [11:14<10:21,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 51%|█████     | 412/811 [11:16<11:05,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 51%|█████     | 413/811 [11:17<11:19,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 51%|█████     | 414/811 [11:19<11:15,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 51%|█████     | 415/811 [11:21<11:04,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 51%|█████▏    | 416/811 [11:22<10:55,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 51%|█████▏    | 417/811 [11:24<10:27,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 52%|█████▏    | 418/811 [11:25<10:04,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 52%|█████▏    | 419/811 [11:27<10:01,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 52%|█████▏    | 420/811 [11:28<10:06,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 52%|█████▏    | 421/811 [11:30<10:18,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 52%|█████▏    | 422/811 [11:31<09:57,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 52%|█████▏    | 423/811 [11:33<10:29,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 52%|█████▏    | 424/811 [11:35<10:10,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 52%|█████▏    | 425/811 [11:37<11:04,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 53%|█████▎    | 426/811 [11:38<10:23,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 53%|█████▎    | 427/811 [11:40<10:03,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 53%|█████▎    | 428/811 [11:42<11:04,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 53%|█████▎    | 429/811 [11:43<10:56,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 53%|█████▎    | 430/811 [11:45<11:06,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 53%|█████▎    | 431/811 [11:47<10:23,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 53%|█████▎    | 432/811 [11:48<10:42,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 53%|█████▎    | 433/811 [11:50<10:29,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 54%|█████▎    | 434/811 [11:51<09:54,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 54%|█████▎    | 435/811 [11:53<09:48,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 54%|█████▍    | 436/811 [11:55<10:03,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 54%|█████▍    | 437/811 [11:56<10:12,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 54%|█████▍    | 438/811 [12:01<15:03,  2.42s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 54%|█████▍    | 439/811 [12:02<13:41,  2.21s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 54%|█████▍    | 440/811 [12:04<12:18,  1.99s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 54%|█████▍    | 441/811 [12:05<11:49,  1.92s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▍    | 442/811 [12:07<10:50,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▍    | 443/811 [12:09<10:43,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▍    | 444/811 [12:10<10:19,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▍    | 445/811 [12:12<10:07,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▍    | 446/811 [12:13<10:00,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▌    | 447/811 [12:15<10:04,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▌    | 448/811 [12:17<09:51,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▌    | 449/811 [12:18<10:10,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▌    | 450/811 [12:20<09:47,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 56%|█████▌    | 451/811 [12:21<09:35,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 56%|█████▌    | 452/811 [12:23<09:35,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 56%|█████▌    | 453/811 [12:25<09:37,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 56%|█████▌    | 454/811 [12:26<09:25,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 56%|█████▌    | 455/811 [12:28<10:06,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 56%|█████▌    | 456/811 [12:30<09:47,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 56%|█████▋    | 457/811 [12:31<09:31,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 56%|█████▋    | 458/811 [12:33<09:32,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 57%|█████▋    | 459/811 [12:35<09:51,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 57%|█████▋    | 460/811 [12:36<09:42,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 57%|█████▋    | 461/811 [12:38<09:18,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 57%|█████▋    | 462/811 [12:39<09:15,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 57%|█████▋    | 463/811 [12:41<09:01,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 57%|█████▋    | 464/811 [12:42<09:04,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 57%|█████▋    | 465/811 [12:44<08:53,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 57%|█████▋    | 466/811 [12:46<09:30,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 58%|█████▊    | 467/811 [12:47<09:15,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 58%|█████▊    | 468/811 [12:49<09:01,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 58%|█████▊    | 469/811 [12:50<08:36,  1.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 58%|█████▊    | 470/811 [12:52<08:41,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 58%|█████▊    | 471/811 [12:53<08:26,  1.49s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 58%|█████▊    | 472/811 [12:55<08:39,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 58%|█████▊    | 473/811 [12:57<09:43,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 58%|█████▊    | 474/811 [12:59<09:45,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 59%|█████▊    | 475/811 [13:00<09:37,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 59%|█████▊    | 476/811 [13:02<09:23,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 59%|█████▉    | 477/811 [13:04<09:36,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 59%|█████▉    | 478/811 [13:05<09:20,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 59%|█████▉    | 479/811 [13:07<09:11,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 59%|█████▉    | 480/811 [13:09<09:15,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 59%|█████▉    | 481/811 [13:11<09:41,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 59%|█████▉    | 482/811 [13:12<09:38,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 60%|█████▉    | 483/811 [13:14<09:01,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 60%|█████▉    | 484/811 [13:15<08:42,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 60%|█████▉    | 485/811 [13:17<08:43,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 60%|█████▉    | 486/811 [13:18<08:32,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 60%|██████    | 487/811 [13:20<08:34,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 60%|██████    | 488/811 [13:22<09:11,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 60%|██████    | 489/811 [13:24<09:44,  1.82s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 60%|██████    | 490/811 [13:26<09:04,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 61%|██████    | 491/811 [13:27<08:34,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 61%|██████    | 492/811 [13:29<08:53,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 61%|██████    | 493/811 [13:30<08:40,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 61%|██████    | 494/811 [13:32<09:23,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 61%|██████    | 495/811 [13:34<08:44,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 61%|██████    | 496/811 [13:36<09:00,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 61%|██████▏   | 497/811 [13:37<09:07,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 61%|██████▏   | 498/811 [13:39<08:38,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 62%|██████▏   | 499/811 [13:41<08:39,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 62%|██████▏   | 500/811 [13:42<08:24,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 62%|██████▏   | 501/811 [13:47<13:53,  2.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 62%|██████▏   | 502/811 [13:49<12:35,  2.44s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 62%|██████▏   | 503/811 [13:51<11:07,  2.17s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 62%|██████▏   | 504/811 [13:52<10:20,  2.02s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 62%|██████▏   | 505/811 [13:54<10:16,  2.02s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 62%|██████▏   | 506/811 [13:56<09:38,  1.90s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 63%|██████▎   | 507/811 [13:57<08:55,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 63%|██████▎   | 508/811 [13:59<08:15,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 63%|██████▎   | 509/811 [14:01<08:25,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 63%|██████▎   | 510/811 [14:02<08:14,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 63%|██████▎   | 511/811 [14:04<07:56,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 63%|██████▎   | 512/811 [14:05<07:59,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 63%|██████▎   | 513/811 [14:07<08:18,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 63%|██████▎   | 514/811 [14:09<08:03,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▎   | 515/811 [14:10<08:01,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▎   | 516/811 [14:12<08:05,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▎   | 517/811 [14:13<07:57,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▍   | 518/811 [14:15<08:13,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▍   | 519/811 [14:17<08:01,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▍   | 520/811 [14:18<07:52,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▍   | 521/811 [14:21<08:42,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▍   | 522/811 [14:22<08:31,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▍   | 523/811 [14:24<08:09,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 65%|██████▍   | 524/811 [14:26<08:15,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 65%|██████▍   | 525/811 [14:28<09:45,  2.05s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 65%|██████▍   | 526/811 [14:30<09:00,  1.90s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 65%|██████▍   | 527/811 [14:31<08:12,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 65%|██████▌   | 528/811 [14:34<09:28,  2.01s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 65%|██████▌   | 529/811 [14:35<08:33,  1.82s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 65%|██████▌   | 530/811 [14:37<08:21,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 65%|██████▌   | 531/811 [14:39<08:01,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 66%|██████▌   | 532/811 [14:40<07:38,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 66%|██████▌   | 533/811 [14:42<07:57,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 66%|██████▌   | 534/811 [14:44<08:03,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 66%|██████▌   | 535/811 [14:46<08:10,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 66%|██████▌   | 536/811 [14:47<07:59,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 66%|██████▌   | 537/811 [14:49<07:34,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 66%|██████▋   | 538/811 [14:50<07:07,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 66%|██████▋   | 539/811 [14:52<07:25,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 67%|██████▋   | 540/811 [14:54<07:37,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 67%|██████▋   | 541/811 [14:55<07:26,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 67%|██████▋   | 542/811 [14:57<07:10,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 67%|██████▋   | 543/811 [14:59<08:06,  1.82s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 67%|██████▋   | 544/811 [15:01<07:43,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 67%|██████▋   | 545/811 [15:02<07:45,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 67%|██████▋   | 546/811 [15:04<07:22,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 67%|██████▋   | 547/811 [15:06<07:13,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 68%|██████▊   | 548/811 [15:07<07:00,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 68%|██████▊   | 549/811 [15:08<06:34,  1.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 68%|██████▊   | 550/811 [15:10<06:49,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 68%|██████▊   | 551/811 [15:12<06:46,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 68%|██████▊   | 552/811 [15:13<06:34,  1.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 68%|██████▊   | 553/811 [15:15<06:32,  1.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 68%|██████▊   | 554/811 [15:16<06:46,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 68%|██████▊   | 555/811 [15:20<10:01,  2.35s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 69%|██████▊   | 556/811 [15:22<09:00,  2.12s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 69%|██████▊   | 557/811 [15:24<09:28,  2.24s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 69%|██████▉   | 558/811 [15:28<10:24,  2.47s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 69%|██████▉   | 559/811 [15:29<09:05,  2.16s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 69%|██████▉   | 560/811 [15:32<09:43,  2.32s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 69%|██████▉   | 561/811 [15:33<08:28,  2.04s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 69%|██████▉   | 562/811 [15:34<07:35,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 69%|██████▉   | 563/811 [15:36<07:01,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 70%|██████▉   | 564/811 [15:37<06:49,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 70%|██████▉   | 565/811 [15:39<06:56,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 70%|██████▉   | 566/811 [15:41<06:44,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 70%|██████▉   | 567/811 [15:42<06:30,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 70%|███████   | 568/811 [15:44<06:35,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 70%|███████   | 569/811 [15:45<06:18,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 70%|███████   | 570/811 [15:47<06:04,  1.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 70%|███████   | 571/811 [15:49<06:59,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 71%|███████   | 572/811 [15:51<06:48,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 71%|███████   | 573/811 [15:54<08:35,  2.16s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 71%|███████   | 574/811 [15:58<11:13,  2.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 71%|███████   | 575/811 [16:00<09:45,  2.48s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 71%|███████   | 576/811 [16:02<09:24,  2.40s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 71%|███████   | 577/811 [16:04<08:30,  2.18s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 71%|███████▏  | 578/811 [16:05<07:43,  1.99s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 71%|███████▏  | 579/811 [16:07<06:58,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 72%|███████▏  | 580/811 [16:08<06:47,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 72%|███████▏  | 581/811 [16:10<06:24,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 72%|███████▏  | 582/811 [16:12<06:34,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 72%|███████▏  | 583/811 [16:13<06:21,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 72%|███████▏  | 584/811 [16:15<06:29,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 72%|███████▏  | 585/811 [16:17<06:17,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 72%|███████▏  | 586/811 [16:18<06:17,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 72%|███████▏  | 587/811 [16:20<06:15,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 588/811 [16:23<07:18,  1.97s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 589/811 [16:24<06:46,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 590/811 [16:26<07:22,  2.00s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 591/811 [16:30<08:36,  2.35s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 592/811 [16:31<07:30,  2.06s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 593/811 [16:32<06:44,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 594/811 [16:35<07:49,  2.16s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 595/811 [16:37<07:11,  2.00s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 596/811 [16:38<06:40,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 74%|███████▎  | 597/811 [16:40<06:22,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 74%|███████▎  | 598/811 [16:41<05:53,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 74%|███████▍  | 599/811 [16:43<05:53,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 74%|███████▍  | 600/811 [16:45<05:42,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 74%|███████▍  | 601/811 [16:46<05:50,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 74%|███████▍  | 602/811 [16:49<06:58,  2.00s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 74%|███████▍  | 603/811 [16:51<06:32,  1.89s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 74%|███████▍  | 604/811 [16:52<06:19,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▍  | 605/811 [16:54<05:56,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▍  | 606/811 [16:55<05:36,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▍  | 607/811 [16:57<05:29,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▍  | 608/811 [17:00<06:32,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▌  | 609/811 [17:01<06:16,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▌  | 610/811 [17:04<06:40,  1.99s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▌  | 611/811 [17:05<06:09,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▌  | 612/811 [17:07<06:29,  1.96s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 76%|███████▌  | 613/811 [17:09<06:04,  1.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 76%|███████▌  | 614/811 [17:10<05:37,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 76%|███████▌  | 615/811 [17:12<05:15,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 76%|███████▌  | 616/811 [17:13<05:17,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 76%|███████▌  | 617/811 [17:15<05:36,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 76%|███████▌  | 618/811 [17:19<07:49,  2.43s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 76%|███████▋  | 619/811 [17:21<06:58,  2.18s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 76%|███████▋  | 620/811 [17:22<06:09,  1.94s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 77%|███████▋  | 621/811 [17:24<05:33,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 77%|███████▋  | 622/811 [17:25<05:16,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 77%|███████▋  | 623/811 [17:27<05:33,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 77%|███████▋  | 624/811 [17:29<05:08,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 77%|███████▋  | 625/811 [17:30<05:07,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 77%|███████▋  | 626/811 [17:32<05:01,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 77%|███████▋  | 627/811 [17:33<04:50,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 77%|███████▋  | 628/811 [17:35<04:56,  1.62s/it] 78%|███████▊  | 629/811 [17:36<04:48,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 78%|███████▊  | 630/811 [17:37<04:13,  1.40s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 78%|███████▊  | 631/811 [17:39<04:15,  1.42s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 78%|███████▊  | 632/811 [17:41<05:16,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 78%|███████▊  | 633/811 [17:43<04:54,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 78%|███████▊  | 634/811 [17:45<04:56,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 78%|███████▊  | 635/811 [17:47<05:28,  1.87s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 78%|███████▊  | 636/811 [17:49<05:23,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 79%|███████▊  | 637/811 [17:50<05:06,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 79%|███████▊  | 638/811 [17:52<04:53,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 79%|███████▉  | 639/811 [17:53<04:41,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 79%|███████▉  | 640/811 [17:55<04:36,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 79%|███████▉  | 641/811 [17:57<04:38,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 79%|███████▉  | 642/811 [18:02<08:05,  2.87s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 79%|███████▉  | 643/811 [18:04<06:58,  2.49s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 79%|███████▉  | 644/811 [18:05<06:02,  2.17s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 80%|███████▉  | 645/811 [18:07<05:38,  2.04s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 80%|███████▉  | 646/811 [18:09<05:10,  1.88s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 80%|███████▉  | 647/811 [18:11<05:23,  1.97s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 80%|███████▉  | 648/811 [18:12<04:57,  1.82s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 80%|████████  | 649/811 [18:14<04:34,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 80%|████████  | 650/811 [18:15<04:22,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 80%|████████  | 651/811 [18:17<04:18,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 80%|████████  | 652/811 [18:19<04:26,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 81%|████████  | 653/811 [18:20<04:13,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

4271848_20201_2_0,ytqk3p4icz,-0.6426500995170114,-86.39482382995493,-37.36204858256977

1341328_20201_2_0,ytqw8n4icz,0.18931022267950093,-111.73468766147391,-37.000288137196335

4973425_20201_2_0,ytu5rn4icz,2.809747553297041,-101.58273377500089,-51.48956855030778

4051056_20201_2_0,ytvzyo4icz,0.403392696984936,-51.76589842791236,-22.945237560627874

5748893_20201_2_0,yu46gp4icz,-1.5061964965631576,-130.296961542575,-26.664708402988083

3721172_20201_2_0,yu92tn4icz,-2.403436816118358,-77.31839524237057,-28.46908538384504

3763891_20201_2_0,yubafn4icz,-114.89675205130631,359.64696060658105,569.6884465626162

2063810_20201_2_0,yuhduo4icz,0.6518795636414345,-67.82631231978485,-31.083655043745566

3211829_20201_2_0,yuleun4icz,-0.7012374250393363,-126.80975580402765,-29.410044810164223

5383974_20201_2_0,yuljgp4icz,-1.4275573439461091,-57.9592269337918,-28.240485560004927

2314038_20201_2_0,yuplan4icz,0.12954604601523212,-110.9211458219649,-38.83405970457946

4189844_20201_2_0,yuqocp4icz,-0.7524591820217286,-111.46806764873685,-36.15099169020044

5195707_20201_2_0,yuraan4icz,2.3604852606638,-66.9633211474983,-26.714345025731816

5379503_20201_2_0,yurvwo4icz,-1.8263350194785095,-75.94427734948886,-27.41216627831109

5160752_20201_2_0,yuwokn4icz,-0.6079161659483011,-92.88346925943762,-39.06523389245895

2210499_20201_2_0,yv9c4p4icz,2.921747438384357,-67.45013725914959,-43.229370670929214

1209727_20201_2_0,yvdc6p4icz,1.4030875167470536,-114.05801306762282,-46.36583806386267

4508941_20201_2_0,yvdoao4icz,1.0048737171660576,-73.90169625826249,-46.6461444057818

4806899_20201_2_0,yviu9o4icz,1.7815520964821108,-74.64090169514753,-44.09002135162072

5548989_20201_2_0,yvlldp4icz,1.2623033078830868,-66.8297434938095,-38.77540492212445

1119641_20201_2_0,nrzajn4icz,-1.1499429455899282,-120.31251940700784,-28.188601944309056

5231694_20201_2_0,yvon6p4icz,-0.8966030835742164,-97.31672771781871,-28.527569048663764

3060986_20201_2_0,yvwcjn4icz,0.10964297883303759,-162.92468234880377,-31.53641189241054

1074656_20201_2_0,yvxoro4icz,0.9914995672438147,-114.93455427831881,-43.08813123720125

5138323_20201_2_0,yvzfvn4icz,2.5831312230058114,-81.21639086301423,-45.40313105334603

3485415_20201_2_0,yvzxpn4icz,-0.006052596851545203,-115.47392847936513,-44.367354032453974

5181326_20201_2_0,yw36wo4icz,-5.403182265593779,-103.68086934381449,-3.5897422923985403

1325181_20201_2_0,yw4xfn4icz,-0.26174393219547254,-129.17297105000554,-32.69051706634433

4410725_20201_2_0,yw5huo4icz,-2.0323687020283843,-73.46802726195716,-25.2218255007365

4854188_20201_2_0,ywbpan4icz,-0.7456049969205899,-91.39970850349266,-44.704232067279236

2978179_20201_2_0,cldtip4icz,0.6563163882159115,-129.1499019949947,-59.218899047023285

2658847_20201_2_0,ywr25p4icz,-1.1433110751134812,-91.13181870551011,-36.142962017114485

5088612_20201_2_0,ywrxco4icz,0.9321960493725928,-78.92130180555577,-32.921334184353555

1348890_20201_2_0,yws8ho4icz,1.8767701782299415,-52.549823153374234,-37.93939765534829

3263840_20201_2_0,ywtu8o4icz,1.0783530229875624,-98.50203311439819,-69.04941534303164

3610010_20201_2_0,ywux5o4icz,0.506093864441999,-116.01244868803761,-53.347517135779

2387585_20201_2_0,ywvino4icz,-2.9312137724307714,-68.96018559902046,-3.175452409772163

3225934_20201_2_0,ywx38p4icz,1.0429218824215571,-116.342535870098,-32.11111260170887

2918770_20201_2_0,ywxino4icz,17.8873016677054,-35.860142813970754,157.40368102724378

5556375_20201_2_0,ywyr3o4icz,0.6855531947534017,-110.64691453379194,-54.084823868682605

2003636_20201_2_0,ywzkgo4icz,-2.389188700110799,-106.13974610950959,-34.27012274311258

2701186_20201_2_0,yx07fn4icz,-0.8114839291136212,-67.57587527154348,-27.40108152434425

1815867_20201_2_0,yx1ygp4icz,1.4928770575005696,-95.32153141713144,-33.096401416588066

3210335_20201_2_0,yx69ln4icz,1.6434629566410637,-108.91435698522099,-51.339710195571755

3104224_20201_2_0,yx6efo4icz,-2.548304339710123,-63.32706512165922,-15.934204302748554

4201322_20201_2_0,yxdqlo4icz,-2.4720674793898003,-98.17448358430497,-37.09729793659693

1401722_20201_2_0,yxdzno4icz,-2.152595023801919,-66.88107131702563,-35.74649777043962

2867295_20201_2_0,yxe19p4icz,1.04781140177338,-68.7836300454718,-29.26007843127914

1365258_20201_2_0,yxfvqn4icz,3.8197382640078783,-73.04959895384661,-57.89701052466795

2020432_20201_2_0,yxovqo4icz,2.738072377441235,-77.53830056952711,-66.73356800284748

1709735_20201_2_0,yxsa6p4icz,0.5865912088869455,-105.17208665876771,-52.57587106653689

2018294_20201_2_0,yxwnqn4icz,0.1146137347578915,-84.00708732991063,-49.70964462761549

3752792_20201_2_0,yxwuip4icz,0.47187532573520086,-82.38692270966214,-37.753210726985714

3924465_20201_2_0,yxxtun4icz,-1.1536112687406608,-119.74177438496159,-35.39603320683615

5989275_20201_2_0,yy0yep4icz,2.691300168118405,-61.475876806328785,-57.335344252552616

4122576_20201_2_0,yy1gbp4icz,-1.8315993072641499,-104.87155282576106,-29.79276483967206

5584044_20201_2_0,yylhbo4icz,0.6389072157453233,-133.15179581532922,-28.551532581548727

3745647_20201_2_0,yyscnn4icz,-1.5512945976856756,-81.99402238286444,-26.09203649047926

2315929_20201_2_0,yystho4icz,1.1027947868989354,-101.1047765210518,-52.382389796967445

5244806_20201_2_0,yyuvjo4icz,0.03268749971510674,-55.26788860198127,-34.58632168806693

2748895_20201_2_0,yywm0o4icz,-7.294058801211008,-150.4504038897445,14.384031956629116

4156776_20201_2_0,yywnoo4icz,-0.08288631214851577,-106.21673861019468,-24.097447315401553

3354388_20201_2_0,yyy2vn4icz,5.0094763399215765,-81.41573689437934,-75.5965440909338

4402317_20201_2_0,yz0qxo4icz,0.23239977770032175,-59.32882239177806,-49.88761433826079

2131194_20201_2_0,yz1dqo4icz,2.3874463556627536,-73.88377957870381,-43.34120469944733

3532356_20201_2_0,yza5un4icz,-1.926758075915291,-121.02021212237676,-25.90777892503658

2224535_20201_2_0,yza7so4icz,0.9711627573027258,-85.84198132936831,-32.38859667776484

4748413_20201_2_0,yzkjkn4icz,-3.3687355118317743,-96.62037476742276,-12.867732092000054

5577310_20201_2_0,yzq7yo4icz,1.325258684057901,-69.27997589751999,-31.482912988626097

4935527_20201_2_0,yzsuto4icz,-0.8180097605162041,-92.70975607488216,-51.080032889202045

3704795_20201_2_0,yzu4vn4icz,1.1248700539613512,-92.58524898258122,-60.47825459853867

1088494_20201_2_0,yzwsmn4icz,-3.51399001056347,-145.17719555575502,-4.925473177470792

1529261_20201_2_0,z04x3o4icz,1.9340516733604531,-94.38866686266368,-41.514881500987

1729400_20201_2_0,z05wmn4icz,1.925000340094856,-86.68143198780126,-39.9437658081968

4671715_20201_2_0,cb7vun4icz,-1.9917768823298723,-116.14138471987246,-19.222653418797933

2739558_20201_2_0,z09cko4icz,0.9440948513422962,-95.71703103314053,-41.974321150418845

1112067_20201_2_0,z09zdp4icz,-0.9123742381899309,-103.72107236257116,-26.519133408304867

4375823_20201_2_0,z0bxsn4icz,-2.2985728099526965,-107.07899289921968,-26.539006116354543

4763106_20201_2_0,z0dkln4icz,-2.256012280813821,-117.8704493755051,-31.041475437215297

1056008_20201_2_0,z0e4io4icz,1.0072404607035135,-88.97357036415684,-41.4006923156563

2649628_20201_2_0,z0ecro4icz,-0.7408057740932901,-86.64412196993732,-43.45256364389097

4514562_20201_2_0,z0gq5o4icz,-2.8931612026828604,-132.68432216280235,-17.181435732364832

3689264_20201_2_0,z0h5fo4icz,1.1064836918201084,-123.66739630074426,-27.15285049039167

3364826_20201_2_0,z0i8oo4icz,-0.3945049470316342,-73.16030108301615,-29.150753267745415

2970749_20201_2_0,z0kf7p4icz,-1.342119599001899,-96.80556488104568,-41.986985490034414

2260285_20201_2_0,z0l2io4icz,-3.142571961671251,-130.43081433499972,-26.434436051045736

2397394_20201_2_0,z0mydp4icz,-0.46841002396457215,-117.65064385120158,-32.122098728075784

4912764_20201_2_0,z0o51p4icz,1.5866952073439429,-69.44658603008557,-49.31484221863194

1546496_20201_2_0,z0rmwo4icz,-2.7459582551276025,-63.83667663034791,-14.472901006666163

1498052_20201_2_0,z0w0bp4icz,1.8555990115517902,-69.23117518944346,-44.852388362126945

5908213_20201_2_0,z0yrjo4icz,2.55667991490967,-72.37488545292751,-41.03910709772801

1906205_20201_2_0,z0z4fn4icz,0.15060884566258434,-99.66915270006157,-34.14432184856636

3813152_20201_2_0,z11wbn4icz,-2.963102474053956,-111.81036936598491,-14.949983039732885

5447154_20201_2_0,z15b1o4icz,6.446188740379208,-80.46709452792953,-88.79633936440597

1703287_20201_2_0,z19fkn4icz,-0.34961350609139175,-77.0176099556428,-26.36093884442468

4222096_20201_2_0,z1brao4icz,1.4752069029279973,-101.5444939409426,-30.043674018400168

2398397_20201_2_0,z1caip4icz,-0.7278223085638423,-111.43821101303791,-31.732817866371974

2117215_20201_2_0,z1cwgo4icz,-4.245763011810094,-122.3839205811837,-35.620423742773454

1064913_20201_2_0,z1hqlo4icz,5.11103065697533,-103.38157547719061,-65.02665176732265

3581728_20201_2_0,z1n7in4icz,4.647086564556296,-27.255044889980468,-73.18713344593515

5962464_20201_2_0,z1ozhp4icz,1.5029853628431336,-80.54116028383262,-38.00277939520173

4742128_20201_2_0,z1p7eo4icz,-0.5541154167282913,-91.86962906953949,-20.31601859450936

3843788_20201_2_0,z1royo4icz,1.2250709416424213,-104.66150674731517,-63.73026060031597

3012574_20201_2_0,z1tk7p4icz,1.3237664029801186,-90.47771308578837,-38.74449058590538

4739546_20201_2_0,z1vy1o4icz,-2.5642254798437265,-102.69216903534141,-8.360845900446975

1933631_20201_2_0,z1xh0p4icz,-2.497855060749006,-94.89599545892543,-29.245070676415267

2811558_20201_2_0,z1xkep4icz,2.243677383864225,-105.05994824555862,-61.59748574783167

2954608_20201_2_0,z1zdko4icz,-0.309880524555145,-79.81515933773883,-55.845194309992024

4315904_20201_2_0,z22rfn4icz,0.17933020825021861,-120.35494579040247,-45.223955803500516

4594548_20201_2_0,z233gp4icz,1.2397218539317554,-70.14465233439901,-36.68927677105006

3704107_20201_2_0,z2ftjn4icz,0.38659267456904095,-77.26024563368978,-46.104191288860505

3456934_20201_2_0,z2pwbo4icz,1.0954301448802752,-49.185845760222065,-26.460006471110688

4098305_20201_2_0,z2qjmo4icz,-1.485038787804703,-61.58742797139979,-35.02475686851335

6004269_20201_2_0,z2w99n4icz,2.6639020627448025,-76.46259714570584,-52.64130867281395

4986323_20201_2_0,z2wc8o4icz,-0.26120582642794277,-96.58775378534494,-29.512338191830565

5044104_20201_2_0,z2x9eo4icz,-2.3462628893276256,-69.71148680976498,-56.916613631546184

1918633_20201_2_0,z2yhdo4icz,-1.2641633142628639,-103.56702580338015,-19.214111047230546

1321350_20201_2_0,z30nmn4icz,0.33106575104818453,-113.03118674193507,-19.875023858196755

1758771_20201_2_0,z336dn4icz,-0.03222747854123722,-86.44720011010699,-62.11536816353191

1508283_20201_2_0,z33ano4icz,-0.5197788182509641,-112.45372483704446,-26.640966863978534

4593238_20201_2_0,z360pn4icz,-0.09373792361197328,-94.28085545518599,-34.85322246548293

5709428_20201_2_0,z393on4icz,-63.08135224751665,-134.9640618125032,328.1273463149082

1262429_20201_2_0,z3g86o4icz,-0.1942093221926012,-88.54060681406347,-28.15406101782665

2559511_20201_2_0,z3nyho4icz,-0.17412075960084916,-118.06785405321631,-18.084496738238272

1151458_20201_2_0,z3opdp4icz,0.2033475257440743,-109.71651356216316,-33.7017553099103

1168515_20201_2_0,z3u3lo4icz,0.7992192996707529,-119.8297953877121,-45.42861507934715

3298403_20201_2_0,z3vojp4icz,1.5691914499164141,-74.97425626511594,-34.39869184124929

4659845_20201_2_0,z3w5gn4icz,-0.6097820697833309,-92.39930738295433,-47.06141957928327

1535816_20201_2_0,z45hnn4icz,-0.15509166201341876,-70.69548616430507,-24.775767829060143

4446004_20201_2_0,z4dwtn4icz,-1.4006931477373803,-76.94592804072144,-44.22757966279396

2838706_20201_2_0,z4mu9p4icz,-0.4715903802362055,-78.68152975108592,-32.76547115099528

2373032_20201_2_0,z4wiap4icz,-1.0447278367794899,-129.2364745307582,-19.31405884955251

2984244_20201_2_0,z50l9o4icz,2.455415243748602,-91.48590403906132,-64.85427759596485

3879521_20201_2_0,z5296o4icz,0.45874088051286854,-94.55070314286957,-22.968732153587524

1009421_20201_2_0,z533jn4icz,-0.7250356130945822,-60.22830060727756,-10.808308147421911

4731706_20201_2_0,z56xoo4icz,4.0467027986812125,-102.3513299461195,-39.21970763609502

5549384_20201_2_0,z5b98o4icz,0.18766790758554858,-89.10878206149664,-26.11125955451267

5082631_20201_2_0,z5ckun4icz,2.70771343508821,-83.36946992850133,-52.02859792357489

2233462_20201_2_0,z5cxwn4icz,-2.376890669774357,-148.30378995305992,-0.5682768931051214

1835029_20201_2_0,z5du6n4icz,-0.4109248857529369,-113.28838974079798,-28.755901021221064

3021528_20201_2_0,z5gupo4icz,-6.2521107032951875,-132.6444651313538,-21.79456901591874

4270601_20201_2_0,z5hb7o4icz,0.2524430299744006,-108.55808017836827,-64.66119151899025

1712489_20201_2_0,z5hbgn4icz,0.43437786778431986,-100.63890149136526,-47.294805384199094

4102042_20201_2_0,z5k5lo4icz,-1.814063401026035,-90.40547637967313,-10.344438223186216

3851113_20201_2_0,z5l9wn4icz,0.8385359004494696,-109.45841874924207,-28.438435903934064

2631390_20201_2_0,z5p3fp4icz,3.443811435600011,-88.90176561079011,-50.677206344150335

1295884_20201_2_0,z5reho4icz,0.6920840962305653,-91.42013739960703,-31.29329680143607

4488927_20201_2_0,z5wubo4icz,0.6515422202344664,-128.49264080329874,-37.282771457454515

2279943_20201_2_0,z5x80p4icz,-2.5201226481461627,-138.43132297445646,-31.26723511749688

2529797_20201_2_0,z625ip4icz,2.503373694316583,-61.45450859267319,-76.96042263546612

3149138_20201_2_0,z62bhp4icz,0.24187014347489966,-99.39767127150148,-28.936643078301742

2076060_20201_2_0,z62uhp4icz,-0.04194107811077408,-69.58203100249014,-34.803950830299286

5229712_20201_2_0,z68iqo4icz,-0.25654222940887506,-84.74009277923224,-45.93256126533382

4404380_20201_2_0,z6fojo4icz,-2.1394353717286108,-66.4419492195401,-25.906399632869338

4102902_20201_2_0,z6h7hp4icz,-0.22743027261590762,-111.92938798272579,-46.60606427999765

2966721_20201_2_0,z6h95o4icz,5.301411566219329,-81.23614609633103,-78.68827942382784

5379621_20201_2_0,z6k5wn4icz,-2.3162316279694664,-122.24253103891644,-33.93923662734814

1759280_20201_2_0,z6kndp4icz,0.46387615984314284,-88.32522813587047,-55.92997448996903

1426617_20201_2_0,z6tb7p4icz,2.6831238873613077,-113.0688612515128,-36.41533444008587

3857094_20201_2_0,z7189n4icz,5.161766042586112,-122.46652346944,-52.47106753895113

1376094_20201_2_0,z71v8n4icz,0.835900492820684,-130.23822660442033,-37.850819774835344

2745969_20201_2_0,z75weo4icz,-1.7191978939984613,-54.569100600966806,-36.761096304192876

5235418_20201_2_0,z77weo4icz,-3.20629499675393,-106.01066844264196,-5.00719760569919

1307230_20201_2_0,z7ckjo4icz,0.033828669512944054,-69.41010919520463,-41.57388712244571

4853987_20201_2_0,z7clvn4icz,-1.6544158915466685,-116.78804352284078,-32.72534015168189

2347432_20201_2_0,z7d6vn4icz,5.824269732303857,-86.81522476168948,-65.55902316884212

4058820_20201_2_0,z7hrdo4icz,0.007396741535336458,-68.03696184721653,-28.200736785704564

4115767_20201_2_0,z7k0tn4icz,-0.9457663536893188,-102.17341204337546,-45.11649753142029

2972745_20201_2_0,z7opbp4icz,-1.9712939385402137,-111.42382686576292,-18.466571419425804

3467962_20201_2_0,z7oqgp4icz,-1.1994992299277294,-87.755050274479,-29.60236481954763

2126796_20201_2_0,z7u2gp4icz,0.42456582039100055,-118.48459831070866,-33.77551590753491

3840214_20201_2_0,z7zclo4icz,-2.1390992417575174,-94.82656361742008,-51.595073013493476

3634754_20201_2_0,z7zzkn4icz,-1.4783876148298303,-92.65025653225996,-34.5347549066901

5655775_20201_2_0,z81b5o4icz,-2.0627459599337037,-63.742229660060104,-17.07287382860845

1803243_20201_2_0,z82kqo4icz,1.3220298134013506,-27.019433164741457,-26.028715733957767

4745180_20201_2_0,z89qno4icz,3.8109350185486206,-94.6098928171109,-44.83342159835628

3638234_20201_2_0,z8aeon4icz,0.6908500240788159,-115.55880992460439,-34.534367657478015

3566891_20201_2_0,z8c45p4icz,2.4147187157794185,-100.67106434855066,-39.8349126653507

5024851_20201_2_0,z8h8ep4icz,-1.0838497194778034,-100.52683288599991,-24.689702841786143

3888714_20201_2_0,z8iqmn4icz,-2.8787583337248415,-111.37036416112417,-20.58095601889316

4135643_20201_2_0,z8l7gn4icz,5.311938083685282,-128.9031330809693,-77.9794891243373

1079749_20201_2_0,z8lvqo4icz,0.9844395495686312,-45.294828011758625,-31.019893840708832

2886593_20201_2_0,z8oy8o4icz,-3.1364678445387844,-95.91910658809121,-17.621271325390367

2553031_20201_2_0,z8u3so4icz,-2.2940321175579066,-96.84289019518727,-19.415862265052752

5869275_20201_2_0,z8vu0p4icz,0.7729270194269572,-77.05663765080243,-63.40013780935436

4244072_20201_2_0,z8wdgp4icz,0.7746466587557062,-92.91745302014527,-49.95271475715555

5411397_20201_2_0,z95mqn4icz,-2.8302163283774138,-119.0510192687916,-5.120995595432504

3227081_20201_2_0,z95ulo4icz,0.3303948394932861,-55.51761023737518,-32.24644568011017

5316657_20201_2_0,z9g1do4icz,2.671190167871214,-140.37757356016715,-43.55145603087783

4035143_20201_2_0,z9gw6o4icz,1.6758759196225994,-93.98542319025086,-47.89469657703222

1550924_20201_2_0,z9jrnn4icz,-0.24219828403215068,-66.02130926682668,-31.538608336517797

3191710_20201_2_0,z9ktqo4icz,-0.38426542863833296,-101.01902011209506,-29.47986720279586

4908122_20201_2_0,z9miap4icz,-2.3962407617654855,-97.76585925435043,-35.736847878806245

2330636_20201_2_0,z9ynfo4icz,0.42834605835137063,-130.52040133316999,-43.047296620890734

2572332_20201_2_0,z9yo9n4icz,0.9079850790427364,-126.42882048297844,-34.03866882588807

4290693_20201_2_0,z9yuvo4icz,-2.725279381169787,-100.04876975874785,-17.395882317977765

4298006_20201_2_0,za0l7n4icz,-0.8961258978167926,-87.24790523933277,-23.271873055363386

3454095_20201_2_0,za12ln4icz,-0.19607953820028973,-129.33862054738944,-36.895912862649624

5305513_20201_2_0,za6dno4icz,2.1044475010794566,-34.4500605617867,-40.711004641120894

1748928_20201_2_0,za8win4icz,3.762585419632774,-104.54140813414094,-45.53175825723147

1330588_20201_2_0,za9h5o4icz,1.1166570834347893,-76.3192610212727,-37.39270249730551

4446039_20201_2_0,zaashp4icz,2.3551682571501362,-85.1767639665081,-46.78208321478911

1227745_20201_2_0,zabj9p4icz,1.6213235149210603,-121.08503985936716,-49.051619205469024

2914169_20201_2_0,zaej4o4icz,-1.0404450135713685,-107.31997250848883,-32.20929056864115

1204198_20201_2_0,zagh0p4icz,-1.1639382619838297,-119.66459639584332,-28.239960276046787

3213649_20201_2_0,zagu7p4icz,0.697296403479088,-72.09229073936879,-37.191460763480535

1303037_20201_2_0,zaku0p4icz,-0.18448324260793242,-102.20921162977535,-31.789203933455667

3442870_20201_2_0,zam1ao4icz,4.5275123316026775,-78.05187337017509,-45.49834243281592

1610219_20201_2_0,zapdeo4icz,-1.241596856875592,-95.90809221970272,-34.93157934260573

1468136_20201_2_0,zas1kp4icz,1.2356930981499044,-58.92583201696789,-48.72802072832657

2718924_20201_2_0,zau5co4icz,0.6265543064393981,-108.61342763508094,-25.198287460805375

5686926_20201_2_0,zb0hen4icz,-2.3946458734101124,-89.44759787596155,-22.483222624361844

1646163_20201_2_0,zb3ekn4icz,-0.06441462862375144,-97.08391142268437,-40.47875159481458

3018572_20201_2_0,zb5h7n4icz,10.979134701227613,-91.98715829694402,-101.18226695243493

4096920_20201_2_0,zba8io4icz,0.18530499721690927,-77.41126170206547,-11.384137552725079

1769822_20201_2_0,zbhg8o4icz,0.18109270490147272,-96.01312764436955,-28.54635817170589

4523756_20201_2_0,zbhkso4icz,-0.178486713824323,-83.86391859353228,-32.742685092700356

3532230_20201_2_0,zbkgqo4icz,-1.19956885033528,-71.52437661961454,-35.18213215575385

2822378_20201_2_0,zbld1p4icz,1.0974037046258516,-65.89793037945944,-58.09690817525511

2589521_20201_2_0,zbta8p4icz,0.13986576112083435,-107.46126289119621,-43.92606364132895

4184879_20201_2_0,zbtqep4icz,3.4614187154633083,-71.12064996213127,-66.5327093993793

4774586_20201_2_0,zbx4oo4icz,0.8560323677990254,-94.1798435806723,-49.19256237392493

4533429_20201_2_0,zc186n4icz,-1.1030916802102284,-108.59796565560973,-35.5588271192496

4386231_20201_2_0,zc678o4icz,-2.878368389293926,-103.30650419627125,-6.017262682240897

3678305_20201_2_0,zc6jwo4icz,-4.024996337581005,-103.72590355372088,-9.19150932790879

1127872_20201_2_0,zc6qwn4icz,0.09045988629446795,-87.45069551400744,-37.194369635968414

1393207_20201_2_0,zc7fap4icz,-1.425606877273483,-57.282006978434,-43.758302707466385

5694247_20201_2_0,zc7gbp4icz,-0.10749703304599609,-72.94803733693976,-48.607123138659986

2291017_20201_2_0,zc8bxo4icz,-0.7239388364181459,-69.75138217178358,-18.25282036668412

3382688_20201_2_0,zcc14o4icz,-1.3629802244722664,-114.91892229726938,-31.262921232789495

4851082_20201_2_0,zcgg1o4icz,-0.31627142605017616,-86.94816890665479,-53.91332158553993

4368977_20201_2_0,zclvso4icz,2.5396300667175384,-65.73050332358784,-57.062036977266295

4665606_20201_2_0,zcs7yo4icz,-0.07459847010752219,-80.03820517638488,-38.354072791762945

3622395_20201_2_0,8u4sco4icz,-1.4644976264065124,-95.71746064777994,-39.213950571768194

5821259_20201_2_0,zcyg5p4icz,4.707042722279968,-73.6209653814131,-51.82074368357996

5432033_20201_2_0,zd36wn4icz,-0.618230726302683,-64.73887356073487,-29.901833598249624

1116867_20201_2_0,zd3ago4icz,-1.146472913935197,-66.85420383567646,-46.53693741586143

5380714_20201_2_0,zd3zso4icz,0.9442014283999163,-100.0148835541207,-34.055442470449606

1965677_20201_2_0,zd4kun4icz,0.9412560941020877,-104.59413039641262,-36.25518844320092

2946572_20201_2_0,zd617p4icz,6.271652353073665,-116.92689498547594,-66.3372474390666

4857033_20201_2_0,zd91mn4icz,-2.24377018512397,-146.66519761181556,-6.924046930552635

2712938_20201_2_0,zdfu7o4icz,-1.72662989724387,-88.13612733047788,-13.663894554277746

3935883_20201_2_0,zdlcsn4icz,3.3294167603008984,-135.18392765423903,-40.467747777679165

3533807_20201_2_0,zdqf8n4icz,0.6999872314317178,-96.80525272189297,-34.34293439831664

1429039_20201_2_0,zdql8o4icz,-3.3446012336863262,-103.1042183845345,-13.86077964827328

3467449_20201_2_0,zdr5wn4icz,-2.84320105550652,-102.31298084822939,-5.398111326986822

2463207_20201_2_0,zdsiqo4icz,-0.04953769258110533,-89.19240072755275,-32.37330576103258

3241325_20201_2_0,zdupao4icz,-0.12617432478422877,-119.89073902191134,-32.0256796446499

4008288_20201_2_0,zdus7p4icz,-2.735535023785288,-118.91984836287713,-22.823338725984343

2718125_20201_2_0,zdw4gp4icz,0.0452509396265935,-113.9874810720834,-46.597391578801265

3884716_20201_2_0,zdwrho4icz,1.0120477454518884,-81.26990671380955,-26.15611246667359

3327219_20201_2_0,zdxv5o4icz,1.0579273658337582,-105.42260391248294,-33.15967662935495

1801864_20201_2_0,zdymno4icz,1.4965866668201386,-85.00017412714314,-45.9958644580405

3318173_20201_2_0,ze48jp4icz,0.49472502797147916,-77.34911569440149,-43.02043071122509

1915721_20201_2_0,ze6xao4icz,1.2705985852531314,-93.60863107286929,-56.518100765399396

3654481_20201_2_0,zeb5qo4icz,-0.7902344700718091,-110.69553523749218,-29.51774058547214

2034790_20201_2_0,zee2jp4icz,-1.7544501128704142,-75.69459941883883,-30.681621112948463

3600000_20201_2_0,zeqrsn4icz,2.523124363603207,-87.6850720449562,-41.33688186129933

5139354_20201_2_0,zesrdp4icz,0.7292923396024563,-119.60326303902085,-46.49965134385684

4565564_20201_2_0,zeub9p4icz,2.672748799766598,-87.22488379063827,-79.18234918861502

5989042_20201_2_0,zeuwsn4icz,2.520888054616473,-118.31417492572194,-31.33196582174932

2601617_20201_2_0,zf032p4icz,-0.6782908053358832,-151.43051117724156,0.33557895523722436

2627425_20201_2_0,zf4vao4icz,-0.44478329806866745,-107.84963439884581,-32.58896168683603

2898092_20201_2_0,zf6fzo4icz,-2.035331240276164,-90.35411081991825,-27.236398141262484

1837541_20201_2_0,zf9dep4icz,-1.5481736742088472,-101.9753416068427,-7.987671789462979

1327758_20201_2_0,zfclgp4icz,3.3300810431322976,-66.72471542442784,-76.14908634334317

4764682_20201_2_0,zff0yo4icz,5.775980961573792,-86.81778837827616,-54.90140019450455

4261785_20201_2_0,zfhxeo4icz,1.3956488370929745,-79.42280817177112,-61.67915198927187

1082384_20201_2_0,zfk0nn4icz,-0.5401493821676909,-68.39822725239938,-42.230989630599524

3459261_20201_2_0,zflaqo4icz,0.5842499795910574,-88.02476167099772,-23.746189126136002

3412753_20201_2_0,zfnspo4icz,-1.224991451786633,-91.8207596660547,-17.02656647244889

4895319_20201_2_0,zfnxgo4icz,-1.480781587292414,-65.35498297168607,-18.52945489006477

5695277_20201_2_0,zfrnsn4icz,-2.0227315266148813,-111.71935643159762,-12.686980281220883

5980585_20201_2_0,zfu8fp4icz,-0.8551125007659364,-98.8516243800448,-45.52812017362308

4072347_20201_2_0,zfwjdp4icz,-2.8731965970003044,-100.32531064625798,-32.33069193805473

2054212_20201_2_0,uubtcn4icz,0.6993993568444322,-107.77573163996902,-45.005472934585825

4452084_20201_2_0,zfxgwo4icz,11.078779231150582,-48.629712035137516,-105.46433764194447

4817077_20201_2_0,zg12gn4icz,-0.8689945328869401,-122.52650146939877,-40.463059173110466

1242807_20201_2_0,zg56eo4icz,-1.9370382119428347,-86.63357673164614,-23.22458596564975

5314434_20201_2_0,zgd7fp4icz,-0.964434985969162,-128.20198499873194,-38.600370277272276

5701376_20201_2_0,zgfgxo4icz,-3.680100456010951,-94.7593997701689,-25.798807930556038
 81%|████████  | 654/811 [18:22<04:28,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 81%|████████  | 655/811 [18:24<05:01,  1.94s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 81%|████████  | 656/811 [18:27<05:14,  2.03s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 81%|████████  | 657/811 [18:28<04:44,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 81%|████████  | 658/811 [18:30<04:33,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 81%|████████▏ | 659/811 [18:31<04:30,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 81%|████████▏ | 660/811 [18:33<04:21,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 661/811 [18:35<04:07,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 662/811 [18:36<03:52,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 663/811 [18:38<04:09,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 664/811 [18:40<04:28,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 665/811 [18:42<04:14,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 666/811 [18:43<04:11,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 667/811 [18:45<04:11,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 668/811 [18:47<04:07,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 669/811 [18:48<03:57,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 83%|████████▎ | 670/811 [18:50<03:55,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 83%|████████▎ | 671/811 [18:52<04:26,  1.90s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 83%|████████▎ | 672/811 [18:54<04:17,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 83%|████████▎ | 673/811 [18:56<04:14,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 83%|████████▎ | 674/811 [18:57<03:56,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 83%|████████▎ | 675/811 [18:59<03:56,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 83%|████████▎ | 676/811 [19:01<03:57,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 83%|████████▎ | 677/811 [19:03<04:10,  1.87s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 84%|████████▎ | 678/811 [19:05<03:54,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 84%|████████▎ | 679/811 [19:06<03:41,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 84%|████████▍ | 680/811 [19:08<03:27,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 84%|████████▍ | 681/811 [19:09<03:16,  1.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 84%|████████▍ | 682/811 [19:11<03:24,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 84%|████████▍ | 683/811 [19:12<03:22,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 84%|████████▍ | 684/811 [19:14<03:19,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 84%|████████▍ | 685/811 [19:15<03:19,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 85%|████████▍ | 686/811 [19:17<03:15,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 85%|████████▍ | 687/811 [19:18<03:10,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 85%|████████▍ | 688/811 [19:20<03:10,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 85%|████████▍ | 689/811 [19:21<03:06,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 85%|████████▌ | 690/811 [19:23<03:05,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 85%|████████▌ | 691/811 [19:24<03:00,  1.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 85%|████████▌ | 692/811 [19:26<02:59,  1.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 85%|████████▌ | 693/811 [19:27<02:56,  1.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 86%|████████▌ | 694/811 [19:29<02:58,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 86%|████████▌ | 695/811 [19:30<02:55,  1.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 86%|████████▌ | 696/811 [19:32<03:01,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 86%|████████▌ | 697/811 [19:35<03:41,  1.94s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 86%|████████▌ | 698/811 [19:39<05:00,  2.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 86%|████████▌ | 699/811 [19:41<04:32,  2.43s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 86%|████████▋ | 700/811 [19:43<03:55,  2.12s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 86%|████████▋ | 701/811 [19:44<03:43,  2.03s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 87%|████████▋ | 702/811 [19:46<03:30,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 87%|████████▋ | 703/811 [19:48<03:16,  1.82s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 87%|████████▋ | 704/811 [19:53<04:51,  2.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 87%|████████▋ | 705/811 [19:54<04:20,  2.46s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 87%|████████▋ | 706/811 [19:56<03:52,  2.21s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 87%|████████▋ | 707/811 [19:58<03:32,  2.04s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 87%|████████▋ | 708/811 [19:59<03:16,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 87%|████████▋ | 709/811 [20:01<03:04,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 88%|████████▊ | 710/811 [20:02<02:50,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 88%|████████▊ | 711/811 [20:05<03:29,  2.09s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 88%|████████▊ | 712/811 [20:07<03:10,  1.92s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 88%|████████▊ | 713/811 [20:08<03:01,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 88%|████████▊ | 714/811 [20:10<03:00,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 88%|████████▊ | 715/811 [20:12<02:49,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 88%|████████▊ | 716/811 [20:14<02:44,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 88%|████████▊ | 717/811 [20:15<02:38,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 89%|████████▊ | 718/811 [20:17<02:39,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 89%|████████▊ | 719/811 [20:20<03:19,  2.16s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 89%|████████▉ | 720/811 [20:21<02:55,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 89%|████████▉ | 721/811 [20:27<04:40,  3.11s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 89%|████████▉ | 722/811 [20:29<03:55,  2.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 89%|████████▉ | 723/811 [20:31<03:31,  2.41s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 89%|████████▉ | 724/811 [20:34<03:46,  2.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 89%|████████▉ | 725/811 [20:35<03:15,  2.28s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 90%|████████▉ | 726/811 [20:37<02:50,  2.01s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 90%|████████▉ | 727/811 [20:38<02:40,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 90%|████████▉ | 728/811 [20:41<02:52,  2.07s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 90%|████████▉ | 729/811 [20:42<02:37,  1.92s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 90%|█████████ | 730/811 [20:44<02:22,  1.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 90%|█████████ | 731/811 [20:45<02:11,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 90%|█████████ | 732/811 [20:47<02:06,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 90%|█████████ | 733/811 [20:48<02:05,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████ | 734/811 [20:50<01:58,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████ | 735/811 [20:51<01:55,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████ | 736/811 [20:53<01:56,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████ | 737/811 [20:54<01:56,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████ | 738/811 [20:56<01:54,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████ | 739/811 [20:58<01:58,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████ | 740/811 [20:59<01:49,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████▏| 741/811 [21:02<02:08,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████▏| 742/811 [21:03<02:00,  1.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 92%|█████████▏| 743/811 [21:05<01:51,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 92%|█████████▏| 744/811 [21:06<01:56,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 92%|█████████▏| 745/811 [21:08<01:50,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 92%|█████████▏| 746/811 [21:09<01:45,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 92%|█████████▏| 747/811 [21:11<01:41,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 92%|█████████▏| 748/811 [21:13<01:41,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 92%|█████████▏| 749/811 [21:14<01:35,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 92%|█████████▏| 750/811 [21:16<01:33,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 93%|█████████▎| 751/811 [21:20<02:20,  2.34s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 93%|█████████▎| 752/811 [21:21<02:01,  2.06s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 93%|█████████▎| 753/811 [21:23<01:51,  1.92s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 93%|█████████▎| 754/811 [21:24<01:42,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 93%|█████████▎| 755/811 [21:27<01:49,  1.96s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 93%|█████████▎| 756/811 [21:28<01:44,  1.90s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 93%|█████████▎| 757/811 [21:30<01:35,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 93%|█████████▎| 758/811 [21:31<01:30,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 94%|█████████▎| 759/811 [21:33<01:23,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 94%|█████████▎| 760/811 [21:34<01:22,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 94%|█████████▍| 761/811 [21:36<01:20,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 94%|█████████▍| 762/811 [21:38<01:31,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 94%|█████████▍| 763/811 [21:40<01:27,  1.82s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 94%|█████████▍| 764/811 [21:42<01:19,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 94%|█████████▍| 765/811 [21:43<01:15,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 94%|█████████▍| 766/811 [21:44<01:09,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 95%|█████████▍| 767/811 [21:46<01:04,  1.48s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 95%|█████████▍| 768/811 [21:50<01:44,  2.44s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 95%|█████████▍| 769/811 [21:53<01:41,  2.41s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 95%|█████████▍| 770/811 [21:54<01:28,  2.15s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 95%|█████████▌| 771/811 [21:56<01:19,  1.99s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 95%|█████████▌| 772/811 [21:57<01:11,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 95%|█████████▌| 773/811 [21:59<01:04,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 95%|█████████▌| 774/811 [22:00<01:00,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 96%|█████████▌| 775/811 [22:02<00:56,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 96%|█████████▌| 776/811 [22:03<00:52,  1.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 96%|█████████▌| 777/811 [22:04<00:50,  1.47s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 96%|█████████▌| 778/811 [22:06<00:48,  1.46s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 96%|█████████▌| 779/811 [22:07<00:47,  1.48s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 96%|█████████▌| 780/811 [22:11<01:02,  2.02s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 96%|█████████▋| 781/811 [22:13<00:58,  1.96s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 96%|█████████▋| 782/811 [22:14<00:55,  1.90s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 97%|█████████▋| 783/811 [22:16<00:49,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 97%|█████████▋| 784/811 [22:21<01:11,  2.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 97%|█████████▋| 785/811 [22:22<01:02,  2.40s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 97%|█████████▋| 786/811 [22:24<00:52,  2.12s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 97%|█████████▋| 787/811 [22:25<00:47,  1.96s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 97%|█████████▋| 788/811 [22:27<00:41,  1.82s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 97%|█████████▋| 789/811 [22:28<00:38,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 97%|█████████▋| 790/811 [22:30<00:34,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 98%|█████████▊| 791/811 [22:31<00:31,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 98%|█████████▊| 792/811 [22:33<00:31,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 98%|█████████▊| 793/811 [22:35<00:29,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 98%|█████████▊| 794/811 [22:36<00:27,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 98%|█████████▊| 795/811 [22:40<00:37,  2.33s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 98%|█████████▊| 796/811 [22:42<00:31,  2.09s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 98%|█████████▊| 797/811 [22:43<00:26,  1.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 98%|█████████▊| 798/811 [22:45<00:23,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 99%|█████████▊| 799/811 [22:47<00:24,  2.04s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 99%|█████████▊| 800/811 [22:49<00:20,  1.89s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 99%|█████████▉| 801/811 [22:51<00:18,  1.82s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 99%|█████████▉| 802/811 [22:52<00:16,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 99%|█████████▉| 803/811 [22:54<00:13,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 99%|█████████▉| 804/811 [22:56<00:12,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 99%|█████████▉| 805/811 [22:57<00:10,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 99%|█████████▉| 806/811 [22:59<00:08,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
100%|█████████▉| 807/811 [23:00<00:06,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
100%|█████████▉| 808/811 [23:04<00:06,  2.28s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
100%|█████████▉| 809/811 [23:06<00:04,  2.05s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
100%|█████████▉| 810/811 [23:08<00:02,  2.00s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
100%|██████████| 811/811 [23:10<00:00,  2.11s/it]100%|██████████| 811/811 [23:10<00:00,  1.71s/it]

1672813_20201_2_0,zgg3ho4icz,-7.6074747135292675,-108.9987574214064,1.0084596429342696

3413457_20201_2_0,zggwip4icz,-7.088549427041813,-115.2200001158397,9.305447790020253

3634471_20201_2_0,zghfgo4icz,0.7664193510671427,-77.3751954046077,-32.45567783658919

2988406_20201_2_0,zgju2p4icz,0.2488814272326272,-112.55058829015485,-44.570728996178175

2844994_20201_2_0,zgn42p4icz,-5.378781174766253,-143.12221094032856,3.363786918958283

1660758_20201_2_0,zgn7co4icz,-0.7869142947374411,-112.45956311131224,-38.41156874542567

5837266_20201_2_0,zgqkgn4icz,-0.1487491107223556,-108.68037572207677,-42.97471665090566

2906037_20201_2_0,zgv1zo4icz,1.0346830881521412,-99.41540556513613,-48.93835970626107

4246769_20201_2_0,zgwvhp4icz,1.2186526469848271,-77.11176865331521,-56.926638367916695

5056441_20201_2_0,zgy68o4icz,0.5591617737174082,-125.97024991122689,-38.24129775568332

2953274_20201_2_0,zh1jlo4icz,-0.12086407900701135,-69.19702163374856,-35.634846096336275

3661321_20201_2_0,zh338o4icz,0.7618910963245541,-94.5390344935542,-44.725285620438655

4789637_20201_2_0,zh407n4icz,-0.6571103975170207,-90.29756630663499,-31.176193120797237

3141749_20201_2_0,zh4c2o4icz,-1.0524574307758086,-85.87149121398187,-25.474696284529045

2056253_20201_2_0,zh4w9p4icz,0.5438940631569498,-83.53376808047818,-49.60044231904415

1818165_20201_2_0,zh6k8o4icz,-2.553806163724324,-69.1314439399689,-18.844448461124088

3023572_20201_2_0,zh8tqo4icz,-3.375739536757961,-29.66484760361476,-28.946038735119913

5957227_20201_2_0,zh9bun4icz,-3.638030499352246,-99.7893240059459,-33.26818355724683

3755896_20201_2_0,zhaqpn4icz,3.0764162767171195,-76.98451935215829,-52.54625374388206

4454888_20201_2_0,zhctmo4icz,-2.7190133316422007,-105.60691923975597,-10.056669146510941

2853454_20201_2_0,zhfduo4icz,-0.08229184636372179,-56.43066395276327,-44.5912298674228

4626042_20201_2_0,zhkmao4icz,-0.10467126567551735,-131.20582682026435,-26.16301751040163

3153490_20201_2_0,zhs38p4icz,-4.035449030014886,-98.93917857670982,-40.48833336807212

3883222_20201_2_0,zhwv5p4icz,3.435907794845667,-60.79553691325273,-29.37641809794397

1120690_20201_2_0,zhxqko4icz,-0.13659848899524657,-86.16659444986192,-39.59907036538016

1120728_20201_2_0,zhycoo4icz,-0.9326362982361852,-126.82629522232565,-30.210625171302112

3045124_20201_2_0,zi8xfo4icz,-7.894486272640929,-106.41369601650126,24.446935308488364

4868140_20201_2_0,zi958o4icz,-0.7512865332587938,-103.31531075601302,-45.8484664123541

2071454_20201_2_0,zido5n4icz,0.28819875818505636,-76.65060887758554,-35.09985314454019

4733190_20201_2_0,zie3fo4icz,5.406908807573528,-52.55331013834828,-86.77100732642538

2988703_20201_2_0,zienoo4icz,7.964618353970708,-81.30738607109757,-65.17240678889084

3741867_20201_2_0,zihdyo4icz,0.9865462389089462,-82.61578403274791,-46.6070878570453

4915604_20201_2_0,ziituo4icz,0.0986141075257609,-81.98644793636348,-42.35744222139705

3226753_20201_2_0,ziq5ao4icz,0.8321206169363176,-88.20374042212103,-48.53645734076966

1743613_20201_2_0,zivdyo4icz,-1.3304984267541016,-76.44903935631822,-27.268916430147755

5017178_20201_2_0,zixshn4icz,-4.170901707511101,-120.12688839588796,-2.4331278754403343

5232541_20201_2_0,zj1gbo4icz,-0.7087968859744942,-78.09670446603346,-37.024570134481976

4944629_20201_2_0,zj350p4icz,-0.49380968343050596,-61.7460151726433,-41.72950259325279

5586165_20201_2_0,zjdadn4icz,-3.265482246521626,-158.67953190914392,-6.09046442002365

4679284_20201_2_0,zjgp6p4icz,2.741722637610868,-58.71143951477276,-45.08678968175022

4877624_20201_2_0,zjhcvn4icz,-1.3447852858133353,-86.54187127466619,-31.499792170310315

4923158_20201_2_0,bzvzuo4icz,2.0124383964598938,-61.10104448041591,-24.050489906751565

1412730_20201_2_0,zjhpfp4icz,0.7011982323969032,-103.4899905956311,-33.77609162389972

2579930_20201_2_0,zjj5dp4icz,2.0796861435280087,-123.63075307507677,-62.511235300687446

2629650_20201_2_0,zjoeao4icz,-0.14233627916967845,-91.75387995611726,-31.94296338896045

6021867_20201_2_0,zjrfbp4icz,-1.2792461331065093,-79.67345761919714,-26.643083140496287

1137000_20201_2_0,zjrinn4icz,-2.5364989761999124,-91.1035449371783,-24.986685027467246

5631748_20201_2_0,zjwdxn4icz,-2.359292445850195,-111.01889769619149,-18.45905614617577

2281774_20201_2_0,zjwnxn4icz,-0.9011064798433833,-90.07673315177442,-27.735077492147994

4886519_20201_2_0,b9m69p4icz,3.2639542980830787,-90.940760476837,-64.1381681426286

1896831_20201_2_0,zjyxkn4icz,0.32874920076495195,-79.33457806163838,-35.44437569392977

5618486_20201_2_0,zjzo6n4icz,0.039777998591682226,-95.40982624033452,-54.011237555236704

1217653_20201_2_0,zkhmun4icz,1.3826497921103262,-69.76588209895996,-64.51655329827963

1743699_20201_2_0,zkkiho4icz,-3.8613982996403204,-137.1869893117293,-6.731426980091115

3946277_20201_2_0,zkksep4icz,-1.7952549651068237,-100.07988850712073,-46.03650113177599

5161254_20201_2_0,zko3sn4icz,1.747989920151191,-90.91280358036897,-50.69671528731749

4975709_20201_2_0,zkr4ep4icz,0.5943350060006514,-54.73051257795794,-45.77330646320155

2556735_20201_2_0,zkuf7p4icz,0.36108342244665703,-58.11807325655579,-60.27965736854867

3717921_20201_2_0,zkzaqo4icz,0.3569230830858594,-90.4389715011215,-24.445545980227593

4415879_20201_2_0,zl0rbp4icz,0.6360016238492092,-85.16248210471574,-38.51807507331381

3451846_20201_2_0,zl39ln4icz,-0.9145664323235472,-114.26272761424465,-37.838139961057905

4578401_20201_2_0,zl3ooo4icz,-1.2223812784975838,-134.73813612071223,-28.36391280472415

4432645_20201_2_0,zl4suo4icz,-2.4618140668262565,-83.49826464483505,-27.724282080435486

1663188_20201_2_0,zl7jto4icz,0.04652513583112345,-48.86769939920521,-31.064992009671343

3236938_20201_2_0,zlhlkn4icz,-3.4231715811605423,-102.06502649779509,-53.19298509313566

1701177_20201_2_0,zllezo4icz,0.4683786629285904,-111.04258728824007,-15.448686283840075

5117810_20201_2_0,zlo6tn4icz,0.4046078125584015,-83.99983228326676,-35.73105621072814

4444630_20201_2_0,zluqon4icz,-5.613943304531378,-67.5484567649923,1.9961282732524666

4296706_20201_2_0,zlx0xn4icz,87.20293206982471,316.97426315802966,-221.5968064932856

1488207_20201_2_0,zlyqbn4icz,-6.402828110715342,-138.12243509512857,20.035576043356457

1307715_20201_2_0,zlz1ao4icz,-1.307221355342291,-93.02554055750443,-25.539077735264527

1344780_20201_2_0,zm3mln4icz,2.078868100257483,-103.38501457684725,-28.090823506657188

3357021_20201_2_0,zm63jn4icz,-3.6352928086152083,-121.18496742130145,-18.21970614543207

3146327_20201_2_0,zmbn2p4icz,0.33829012798171615,-97.30657541283634,-28.738781226585317

2887254_20201_2_0,zmcpvn4icz,0.999040693673336,-109.25513253866396,-20.66675632744709

1596068_20201_2_0,zmn3ln4icz,2.08521436181376,-77.14572871149105,-45.58751964258039

2507926_20201_2_0,zmpw6p4icz,3.468160842470316,-106.54544121666999,-55.73408069131624

5127152_20201_2_0,zmt6gp4icz,-0.3409341787697784,-91.84721383918435,-36.9253922545296

4668049_20201_2_0,zmv9gp4icz,2.2693721069003536,-110.52802008008533,-52.00794459718861

1715806_20201_2_0,zmybbo4icz,-1.9096152434625837,-95.70530397003577,-8.327479809969859

2092010_20201_2_0,zmylxn4icz,18.146537893020927,-96.92278913268913,-132.41829100440475

1162308_20201_2_0,zn03kn4icz,-2.3331292639481402,-106.7756375848767,-64.34978521731723

3569180_20201_2_0,zn354o4icz,-0.5947221531077596,-100.21919185411005,-30.408217051612482

1915589_20201_2_0,znaltn4icz,-1.5671991759012966,-106.77535636181514,-23.897340036666577

5470941_20201_2_0,znkxso4icz,-1.2650680368137055,-125.08689752433719,-21.731114360479822

4425683_20201_2_0,znp2cp4icz,-9.739149638382772,-98.00110191626624,28.820018453360177

4989253_20201_2_0,znpi3o4icz,1.0656794631374353,-125.89031382735055,-48.53012977023633

2023739_20201_2_0,znx1ho4icz,-1.1873291251358848,-133.19563419070147,-21.4230641969166

4480877_20201_2_0,znzdmo4icz,-1.280075512278664,-65.42391838069034,-9.486796869387561

5960435_20201_2_0,zo3cgp4icz,1.7598769937240468,-119.12692891704779,-44.201202456550135

4318402_20201_2_0,zo7ctn4icz,1.0423340425987822,-130.15951069777856,-42.07863538017325

1115371_20201_2_0,zo7ngo4icz,5.655894720205685,-49.418411688043705,-99.99088160142333

4705572_20201_2_0,zo9m3p4icz,-2.713411117626287,-50.66973080314526,-13.310988803420486

5174855_20201_2_0,zoaifo4icz,2.8105393964432883,-93.87625595365705,-49.46052158497977

1068960_20201_2_0,zog1xn4icz,-1.796968522314051,-100.56663581858228,-22.316221339904885

3022916_20201_2_0,zogfgn4icz,3.0382631914004072,-97.85472306512247,-59.91573162446409

2629445_20201_2_0,zok9uo4icz,-3.071886251152612,-105.19783669033598,-17.903231699613457

5671636_20201_2_0,zokjtn4icz,-0.13542977439019532,-105.4185027965645,-40.70677407197364

1168541_20201_2_0,zomnxo4icz,3.3354004726011004,-73.54793983034159,-56.3386571669335

3711570_20201_2_0,zon80p4icz,-1.2969230172820143,-122.13157775498487,-34.283232784848906

4314825_20201_2_0,zonvun4icz,0.8303649040155934,-62.1954744009538,-44.99727871699376

4349216_20201_2_0,zorign4icz,0.5606787692049545,-127.65299510907283,-35.71258835787165

5456601_20201_2_0,zotnnn4icz,-0.7636862600282942,-69.66535807518409,-5.392863524900093

4108742_20201_2_0,n2c3fn4icz,-1.8481773768765053,-79.55926693845515,-22.034837686394383

3581078_20201_2_0,zoyjon4icz,0.8989454835591322,-120.9275465180367,-37.42709211898247

3629545_20201_2_0,zoyvep4icz,-1.8670584236942844,-127.51836373000455,-24.495173313938153

2495611_20201_2_0,zp2gbo4icz,-1.1013059214963898,-116.01552359315124,-28.911029880710146

5914151_20201_2_0,zp2gko4icz,13.32631634771928,-12.970281137738937,-105.0451073181983

3424042_20201_2_0,zp4dwo4icz,-0.7187637823324657,-88.01114817107577,-30.132553014561196

2746262_20201_2_0,zp4quo4icz,-1.7536324110338264,-82.99226666932762,-24.352806990066767

5834550_20201_2_0,2uwafp4icz,2.3524550716613337,-84.47849097691613,-54.12110189205839

5407265_20201_2_0,zp8lrn4icz,-11.492345145523833,-183.818815273696,47.99684592124605

1919087_20201_2_0,zpfu9o4icz,2.514798757797824,-98.81512218690378,-40.919198973884434

5551488_20201_2_0,zpp33o4icz,2.3863477503455806,-106.18478817307246,-39.264103648353256

1097413_20201_2_0,zpt5hp4icz,2.225353372220054,-84.746308277461,-66.0371025514482

4876718_20201_2_0,zpvaso4icz,3.17577185460822,-78.55570327780313,-48.36026895879277

5654931_20201_2_0,zpvlfo4icz,-3.6220649899343345,-87.44215104747977,-12.713490884286202

3663867_20201_2_0,zpxxwn4icz,1.5055500083371376,-139.6930085485348,-41.62688166113344

5586330_20201_2_0,zpyhko4icz,2.0068965358195183,-86.39937624327086,-23.19570856033819

4779618_20201_2_0,zq0m6p4icz,-2.3203551372623643,-108.33587199404951,-32.58507150197319

2172857_20201_2_0,zq2x8p4icz,-0.5910806314608492,-80.69280834621907,-36.76657098359843

3545130_20201_2_0,zq658p4icz,-0.9629181933219159,-125.92160275269089,-20.8413548334062

1032171_20201_2_0,zqdfwo4icz,1.0836165383209702,-63.369955096714364,-36.167063287196854

1042843_20201_2_0,zqgaio4icz,-0.2788502156082399,-80.06079923487539,-28.376415315069224

4077590_20201_2_0,zqhbnn4icz,-1.6564187554833407,-98.34252859216159,-20.17382003657204

4693062_20201_2_0,zqigcn4icz,2.1253533157042575,-77.0708725166973,-52.59099695145605

3118479_20201_2_0,zqii3o4icz,-0.49330304862431934,-104.41280316756186,-32.23134627081262

1409171_20201_2_0,zqjbco4icz,-1.6160444385102295,-91.51130979145807,-35.759509502722935

5965433_20201_2_0,zqkuvo4icz,-0.9616531799873967,-56.93195201089358,-28.26088227394405

4006497_20201_2_0,zqt88n4icz,1.873168280209162,-82.7534406138555,-47.52674083253717

2032732_20201_2_0,zqvaoo4icz,-1.5020598021851197,-122.85762944850597,-11.81462549195939

5776525_20201_2_0,zqxxyo4icz,1.168065849361457,-74.14587836028994,-50.20379883162984

5394026_20201_2_0,zqy8do4icz,11.657830847737175,-157.74744862498545,-97.3221793255789

4059431_20201_2_0,zr12wn4icz,3.6819741650240934,-101.23107442333202,-61.90402866486919

5689899_20201_2_0,zr614o4icz,1.6276149040664956,-112.61188172327454,-41.589677189691926

1677944_20201_2_0,zrbuin4icz,-2.0247586337384234,-89.54764893449882,-32.81652103164545

3119006_20201_2_0,zrc8go4icz,-2.9697742555372018,-93.24233382981012,-11.391006694015488

1072539_20201_2_0,65eqbn4icz,-2.072472626826129,-130.380449632193,-23.443526726936994

4812719_20201_2_0,zrehtn4icz,1.2110191532020538,-73.36723092317078,-55.42424166713653

4503142_20201_2_0,zrff9o4icz,-1.8569568428509147,-74.2882370673413,-45.22934617018312

4623552_20201_2_0,zrgwgp4icz,1.8278082024401565,-75.3206283115189,-57.82328149325129

3578896_20201_2_0,zriknn4icz,0.25119245410055074,-99.19541707974284,-36.816291540099755

1876792_20201_2_0,zrojko4icz,3.319280204641638,-75.6948524326829,-80.50439242191327

3911801_20201_2_0,zrqs7p4icz,2.3654336371602143,-121.87919319844573,-56.073293006290825

5446398_20201_2_0,zrrilo4icz,-3.4907942480928225,-59.68474220592353,-5.77120193330515

2135580_20201_2_0,zrsvzo4icz,-3.8767932974892543,-105.73477905211905,-24.10514129817774

5396072_20201_2_0,zrx4bo4icz,-2.4813681706692754,-128.49101254915868,-13.96863666862825

4473231_20201_2_0,zrzbko4icz,-2.577321068527363,-71.2629039627127,-50.85030906153443

2568600_20201_2_0,zs2y9p4icz,-4.569955713760622,-129.82118710516392,-13.256334758488435

1067869_20201_2_0,zs6nto4icz,-2.1210008775813183,-107.60868435781344,-24.37063279003148

1397959_20201_2_0,zs70en4icz,0.5755235397773937,-105.97163092096733,-30.335207192943813

1971969_20201_2_0,zs7o7o4icz,-2.464306194182107,-124.96245928227452,-14.974188424424298

4595519_20201_2_0,zs8v6p4icz,0.2602464338512617,-69.00652016172404,-34.46574248758

3088878_20201_2_0,zsa8ip4icz,44.590373001303895,49.55561166962863,-254.13915776125697

2583314_20201_2_0,zskgco4icz,4.199680671357965,-104.80579732075202,-69.51410306766375

2246676_20201_2_0,zsle1o4icz,-2.941907199031707,-127.41541552827383,-27.8035086091445

2530735_20201_2_0,zsmswo4icz,0.614653478935123,-88.0545788093452,-48.93428087096551

5514425_20201_2_0,zspcnn4icz,0.23873089100390454,-58.88094675726086,-55.23236507873871

4044575_20201_2_0,zsv05p4icz,-5.33267163036757,-70.2885026271961,-15.044629369659674

2257004_20201_2_0,zsv1ho4icz,-2.2982397998773427,-127.94492734741556,-14.206910576280734

4189906_20201_2_0,zszdfo4icz,-0.5446420811227279,-61.32768135758039,-24.79090351372912

4458174_20201_2_0,zszsvo4icz,1.2680705134009906,-98.3164361030855,-50.48089966085388

2772219_20201_2_0,zt5ohp4icz,-3.7951906575990013,-84.77145252947247,25.259361013948563

5675428_20201_2_0,zt9j5p4icz,1.0141574553820862,-104.66356428351531,-38.19285075961314

2377636_20201_2_0,ztcnan4icz,0.2784726796638554,-55.49439472613781,-34.90399833284049

4371822_20201_2_0,ztdabo4icz,0.2172460920573398,-77.24521731201656,-11.663190889418274

3738201_20201_2_0,ztfwep4icz,-1.3891823519211781,-112.30377567803362,-15.081372683256703

4667656_20201_2_0,ztgwep4icz,-0.33134037753320744,-133.4794321685688,-30.243495646606547

4371170_20201_2_0,ztlvuo4icz,-0.9455862753041776,-109.6897153665721,-22.263796348741167

3369050_20201_2_0,ztml2p4icz,-0.19469944446977805,-86.6626256815241,-30.727338729248814

3211178_20201_2_0,zto05p4icz,-1.7075352113487199,-81.22048144223515,-34.242505298914836

3217741_20201_2_0,zto5pn4icz,-3.165882901880312,-121.55633877961668,-21.135497760140197

1017141_20201_2_0,ztojbo4icz,3.3659962399614143,-79.97743578392485,-64.54929206530278

4382932_20201_2_0,ztqa1o4icz,-1.0539109656987353,-121.99305315944511,-37.26817594007153

5857404_20201_2_0,ztrj8n4icz,2.529762815170732,-122.77446846904016,-55.71928060466196

3399063_20201_2_0,ztst9n4icz,2.1491752686878187,-120.58090590026654,-59.144069110346464

5293556_20201_2_0,zttpzo4icz,7.855473144688871,-119.72884504818305,-80.07578172170248

1145826_20201_2_0,zu06eo4icz,2.3805372488633303,-67.81004678575681,-44.840167163057515

2135823_20201_2_0,zu0own4icz,-1.7938376298281595,-95.24263490476471,-14.78582742248723

2553167_20201_2_0,zu19bp4icz,-1.23775167469929,-114.01525709945781,-17.259198936106856

4189803_20201_2_0,zu3wjp4icz,0.08821381333262417,-102.03678878710159,-48.96569889253135

2077110_20201_2_0,zu59uo4icz,0.6718989200343933,-48.987397749129,-35.975612456352536

2842822_20201_2_0,zu6gon4icz,-1.215612583981123,-119.0314564920609,-34.864912752706246

1365182_20201_2_0,zu7dnn4icz,1.1797588671141666,-86.54212075718237,-52.13927969024519

4619408_20201_2_0,zua9lo4icz,-0.7661071042385158,-110.09746193770516,-33.25198291263196

3853033_20201_2_0,zudsbo4icz,-0.6686477012166158,-79.02392976537149,-29.798221541040704

5450954_20201_2_0,zumecn4icz,-0.34871011197298973,-67.51514697328241,-27.831622442847163

2892999_20201_2_0,zumjkn4icz,-1.7051664965797755,-68.39408455398271,-39.34081285597354

3068446_20201_2_0,zumlfo4icz,-3.220787964571024,-88.50886320540215,-13.4424314575555

5649307_20201_2_0,zuromn4icz,-0.2079487970024376,-133.17632037449144,-28.482002708512027

3202297_20201_2_0,5zaa2o4icz,10.404021998130162,-38.00999722137911,-77.66137065250707

3012556_20201_2_0,zuu51p4icz,-0.12207162824124981,-128.232647473891,-40.7096457644399

3520826_20201_2_0,zv1mjo4icz,-6.82816419068511,-145.568864415426,-7.85887992629074

4489148_20201_2_0,zv1t6p4icz,-1.1622406083647796,-113.46087477748989,-43.14524452053638

5470207_20201_2_0,zv2hyn4icz,7.769641239320816,-85.21800513335981,-74.36290247102649

1060275_20201_2_0,zv4yip4icz,-4.447333190000923,-120.36503808692532,-9.362679047217796

2489751_20201_2_0,zv7m3o4icz,-1.2914685018459064,-70.59446712658306,-30.117582676588455

2787049_20201_2_0,zv8a4o4icz,0.3684954518926487,-88.75080730872273,-45.006064457897295

1093134_20201_2_0,zvdhpo4icz,-1.9072168044882838,-88.86764006161857,-29.06440685525061

2601228_20201_2_0,zvjjip4icz,0.5539306224180143,-86.82332760838145,-45.2961937744675

6017307_20201_2_0,zvnm8p4icz,3.5576085269910704,-56.94807187527849,-55.971361698864925

2746633_20201_2_0,zvqs0o4icz,-2.1498624772760535,-93.30018181100908,-35.265390501228296

4351393_20201_2_0,zvso9p4icz,-2.2606285542208266,-77.89072927928652,-11.679034659745895

1565121_20201_2_0,zvvf7p4icz,1.027247341573775,-97.18514445877412,-39.46061311359884

2812596_20201_2_0,zw9hbo4icz,4.504135720475764,-98.73621312683832,-46.402152993953166

3452552_20201_2_0,zwgp2p4icz,-0.1525884286387145,-82.72711772055808,-32.81048732095503

1175706_20201_2_0,zwm0no4icz,1.8194791774633516,-46.356352165283965,-39.5460979341924

3777187_20201_2_0,zwm64p4icz,-2.12214823275357,-96.61481963503749,-36.36101833152058

5916171_20201_2_0,zwml8o4icz,-1.3399433189697199,-109.68316337323566,-11.232654883771431

2990556_20201_2_0,zwv20p4icz,-0.5050696498610001,-44.01931507566397,-40.750669778103926

3930534_20201_2_0,zwz6dp4icz,6.954180744021561,-75.23511804794055,-71.40789059326382

1135851_20201_2_0,zwztgo4icz,0.9817505256871178,-43.43130186402573,-29.91433938388488

5628438_20201_2_0,zx2xqo4icz,4.399013019863438,-48.450323763756245,-54.54249125028801

2911450_20201_2_0,zx36nn4icz,-3.1327831166148994,-100.95859564373632,-20.5820863354227

4090608_20201_2_0,zx9abp4icz,-0.46833059739707883,-59.026060798679,-37.32882436822335

3144836_20201_2_0,zxafco4icz,-0.009097771585353345,-138.19483151646494,-41.846614463288105

1369344_20201_2_0,zxelbp4icz,2.0092506957108984,-91.94258119336527,-56.5437881128926

2909761_20201_2_0,zxgbzo4icz,0.4001847602385598,-93.01672772257211,-47.34760814572411

5149598_20201_2_0,zxkato4icz,6.310118398005321,-124.61324406767784,-78.66584032982126

2739434_20201_2_0,zxl6vn4icz,-3.0382921852512483,-130.92445166442494,-18.664115981834968

5551045_20201_2_0,zxno0o4icz,5.8611314675520525,-116.13810176054696,-52.95280284079227

1361039_20201_2_0,zxogun4icz,-2.9424449143797666,-100.47275771128389,-25.77368231349945

3002107_20201_2_0,zxoqkn4icz,1.4766309337630863,-96.70021336379895,-45.79173363881819

4107169_20201_2_0,zxq1ao4icz,0.7280189943949193,-84.65920137144934,-37.274631066482215

3216645_20201_2_0,zxq4fn4icz,-0.7072732092178448,-79.18740814636035,-48.48893526240451

2504421_20201_2_0,zxvmgo4icz,-1.660431931240757,-95.3663110302374,-26.198631569950734

2138639_20201_2_0,zxxpap4icz,3.4363383315607083,-77.28969900480405,-46.54257353705235

3670730_20201_2_0,zy2wro4icz,8.343387631285024,-100.84202072585859,-72.07881101448821

1041933_20201_2_0,zy4deo4icz,-0.6369559822262801,-121.60466000158218,-29.254638141497367

3650162_20201_2_0,zy5lin4icz,3.400513740352652,-108.4999542894736,-65.40894287563985

5520176_20201_2_0,zy6s8p4icz,-0.17108805268625957,-102.88562850967088,-36.592292597854254

1071452_20201_2_0,zy8edp4icz,-4.411989435274906,-76.0799754907433,-16.89801713704219

5399107_20201_2_0,zyd8io4icz,5.788930850894742,-72.65989020098755,-79.69566341747473

1679079_20201_2_0,zyf3xo4icz,0.14386996695026597,-95.42891657890812,-38.46291832469511

3598325_20201_2_0,zyfdrn4icz,-3.669866599210496,-118.63912888372658,-10.170587871873678

5387747_20201_2_0,zyfjdo4icz,-0.16811791316304817,-86.29162913910719,-27.621695677862874

5727115_20201_2_0,zyiy7p4icz,2.973399237077815,-93.32699095049443,-53.14784869347565

4783175_20201_2_0,zyl3uo4icz,-1.0050061638633745,-103.9793934171957,-31.754984200887634

5555113_20201_2_0,s9piap4icz,0.8176523159270181,-119.47975999140337,-41.44517898403308

5646745_20201_2_0,zyxb5p4icz,5.160145737610585,-124.52489190197173,-66.86345661860884

4722799_20201_2_0,zz93kp4icz,0.08524007489715031,-84.64270840654143,-51.22380034332373

1149475_20201_2_0,zzfavn4icz,-2.065779304011709,-83.45300155447518,-18.442169982663046

4923851_20201_2_0,zzfrso4icz,0.7625341930096542,-76.25534242350872,-35.019131034429364

2980156_20201_2_0,zzgogo4icz,-0.13429244865256457,-68.40206882324202,-41.05519694423404

4570255_20201_2_0,zzi0ro4icz,-1.3928610105479906,-80.84412189167622,-28.94806129998132

3985799_20201_2_0,zzpson4icz,-0.12768448628367102,-63.09014299425692,-39.417137842835615

4900388_20201_2_0,zzq5fp4icz,1.1924641253658224,-83.29248982276363,-51.88925553194403

5224940_20201_2_0,zzs1jn4icz,0.07332854662835085,-130.66663405807316,-33.28137740642342

5083828_20201_2_0,zzuw6p4icz,1.4932428735592391,-65.30895019504487,-35.498837549430064

4192161_20201_2_0,9nm06n4icz,-0.49725828140240774,-51.316027730021915,-31.815389642253095

5743898_20201_2_0,o7289n4icz,1.2827060507187198,-112.92489461042217,-47.993199700022345

/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/torch/cuda/__init__.py:52: UserWarning: CUDA initialization: Found no NVIDIA driver on your system. Please check that you have an NVIDIA GPU and installed a driver from http://www.nvidia.com/Download/index.aspx (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729006826/work/c10/cuda/CUDAFunctions.cpp:100.)
  return torch._C._cuda_getDeviceCount() > 0
  0%|          | 0/102 [00:00<?, ?it/s]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  1%|          | 1/102 [00:03<05:10,  3.08s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  2%|▏         | 2/102 [00:04<04:28,  2.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  3%|▎         | 3/102 [00:06<04:09,  2.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  4%|▍         | 4/102 [00:08<03:51,  2.36s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  5%|▍         | 5/102 [00:10<03:27,  2.14s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  6%|▌         | 6/102 [00:12<03:15,  2.04s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  7%|▋         | 7/102 [00:14<03:19,  2.10s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  8%|▊         | 8/102 [00:16<03:00,  1.92s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▉         | 9/102 [00:17<02:55,  1.89s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 10%|▉         | 10/102 [00:19<02:48,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 11%|█         | 11/102 [00:21<02:40,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 12%|█▏        | 12/102 [00:22<02:32,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 13%|█▎        | 13/102 [00:24<02:29,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 14%|█▎        | 14/102 [00:25<02:24,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 15%|█▍        | 15/102 [00:27<02:14,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 16%|█▌        | 16/102 [00:29<02:16,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 17%|█▋        | 17/102 [00:30<02:19,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 18/102 [00:32<02:11,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 19%|█▊        | 19/102 [00:33<02:06,  1.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 20%|█▉        | 20/102 [00:35<02:03,  1.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 21%|██        | 21/102 [00:36<02:04,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 22%|██▏       | 22/102 [00:38<02:01,  1.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 23%|██▎       | 23/102 [00:39<02:00,  1.53s/it] 24%|██▎       | 24/102 [00:41<02:00,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▍       | 25/102 [00:42<01:58,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▌       | 26/102 [00:44<01:55,  1.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 26%|██▋       | 27/102 [00:45<01:55,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 28/102 [00:47<01:52,  1.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 28%|██▊       | 29/102 [00:48<01:53,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 29%|██▉       | 30/102 [00:50<01:50,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 30%|███       | 31/102 [00:51<01:47,  1.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 31%|███▏      | 32/102 [00:53<01:49,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 32%|███▏      | 33/102 [00:55<01:48,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 33%|███▎      | 34/102 [00:56<01:45,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 34%|███▍      | 35/102 [00:58<01:45,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 35%|███▌      | 36/102 [00:59<01:41,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▋      | 37/102 [01:01<01:43,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 37%|███▋      | 38/102 [01:03<01:43,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 38%|███▊      | 39/102 [01:04<01:43,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 39%|███▉      | 40/102 [01:06<01:42,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 40%|████      | 41/102 [01:08<01:37,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 41%|████      | 42/102 [01:09<01:36,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 42%|████▏     | 43/102 [01:11<01:42,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 43%|████▎     | 44/102 [01:13<01:48,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 44%|████▍     | 45/102 [01:15<01:43,  1.82s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▌     | 46/102 [01:17<01:39,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 46%|████▌     | 47/102 [01:18<01:30,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 47%|████▋     | 48/102 [01:20<01:29,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 48%|████▊     | 49/102 [01:22<01:29,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 49%|████▉     | 50/102 [01:23<01:27,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|█████     | 51/102 [01:25<01:24,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 51%|█████     | 52/102 [01:26<01:23,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 52%|█████▏    | 53/102 [01:28<01:23,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 53%|█████▎    | 54/102 [01:30<01:17,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 54%|█████▍    | 55/102 [01:32<01:23,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▍    | 56/102 [01:33<01:19,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 56%|█████▌    | 57/102 [01:35<01:15,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 57%|█████▋    | 58/102 [01:36<01:09,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 58%|█████▊    | 59/102 [01:38<01:09,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 59%|█████▉    | 60/102 [01:39<01:06,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 60%|█████▉    | 61/102 [01:41<01:03,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 61%|██████    | 62/102 [01:43<01:02,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 62%|██████▏   | 63/102 [01:44<01:01,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 63%|██████▎   | 64/102 [01:46<00:58,  1.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▎   | 65/102 [01:47<00:58,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 65%|██████▍   | 66/102 [01:50<01:11,  1.98s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 66%|██████▌   | 67/102 [01:52<01:07,  1.92s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 67%|██████▋   | 68/102 [01:53<01:00,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 68%|██████▊   | 69/102 [01:56<01:05,  1.98s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 69%|██████▊   | 70/102 [01:57<00:58,  1.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 70%|██████▉   | 71/102 [01:59<00:55,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 71%|███████   | 72/102 [02:01<00:51,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 72%|███████▏  | 73/102 [02:02<00:48,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 74/102 [02:04<00:46,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 74%|███████▎  | 75/102 [02:05<00:43,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▍  | 76/102 [02:07<00:44,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▌  | 77/102 [02:09<00:41,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 76%|███████▋  | 78/102 [02:10<00:39,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 77%|███████▋  | 79/102 [02:12<00:38,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 78%|███████▊  | 80/102 [02:14<00:37,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 79%|███████▉  | 81/102 [02:16<00:35,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 80%|████████  | 82/102 [02:17<00:33,  1.67s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 81%|████████▏ | 83/102 [02:19<00:29,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 84/102 [02:20<00:27,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 83%|████████▎ | 85/102 [02:22<00:27,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 84%|████████▍ | 86/102 [02:24<00:26,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 85%|████████▌ | 87/102 [02:25<00:24,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 86%|████████▋ | 88/102 [02:32<00:45,  3.26s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 87%|████████▋ | 89/102 [02:34<00:36,  2.82s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 88%|████████▊ | 90/102 [02:36<00:29,  2.46s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 89%|████████▉ | 91/102 [02:37<00:23,  2.14s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 90%|█████████ | 92/102 [02:39<00:19,  2.00s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████ | 93/102 [02:40<00:16,  1.83s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 92%|█████████▏| 94/102 [02:42<00:13,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 93%|█████████▎| 95/102 [02:43<00:11,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 94%|█████████▍| 96/102 [02:45<00:10,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 95%|█████████▌| 97/102 [02:47<00:08,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 96%|█████████▌| 98/102 [02:48<00:06,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 97%|█████████▋| 99/102 [02:50<00:05,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 98%|█████████▊| 100/102 [02:52<00:03,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 99%|█████████▉| 101/102 [02:53<00:01,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
100%|██████████| 102/102 [02:55<00:00,  1.85s/it]100%|██████████| 102/102 [02:55<00:00,  1.73s/it]
Trying to load from /users/rhydian/self-supervised-project/model_weights/SSECEncodersBothBoth
==> Resuming model trained for 106 epochs...
Trying to load from ../model_weights/angle_regressor4
==> Resuming model trained for 7 epochs...
3740139_20201_2_0,y605kp4icz,-1.4089123098419594,-96.91716608279233,-36.98520101616934

2221210_20201_2_0,y69too4icz,0.03550042716387325,-63.38062544877647,-20.413123979969285

5249988_20201_2_0,y6dlxn4icz,2.536013340507716,-96.67048067336998,-45.66056020486373

1339856_20201_2_0,y6q4on4icz,-4.224145862839126,-106.72526881228495,-0.09410117351234248

4544056_20201_2_0,y6wveo4icz,-12.692029828492524,-108.16232560856156,35.89496804817871

2951899_20201_2_0,y7j6ip4icz,1.2454372060960066,-103.79481837729813,-51.08886782390414

5522940_20201_2_0,y8rcun4icz,-1.148692060444902,-85.77127655381545,-39.572588597512606

3941038_20201_2_0,y8ww6p4icz,-0.7649139626766354,-108.47438054707379,-28.11359707387456

1484986_20201_2_0,y96zfo4icz,-1.857729270673794,-85.8024508696542,-13.905850961278631

2443959_20201_2_0,yafs7o4icz,0.5514459942061261,-102.4226636718031,-42.246926466614866

5704477_20201_2_0,yauuro4icz,-0.3629891819059242,-76.11869756911315,-57.54730243052667

3275039_20201_2_0,yayrln4icz,0.7457071910252855,-84.3509743471117,-45.04959643319776

5778338_20201_2_0,yb2tjn4icz,-0.0488677544502924,-101.83131029400019,-28.774418179585723

1916513_20201_2_0,yb386n4icz,3.0855954112319584,-71.31363277034555,-62.394616075377556

5809114_20201_2_0,yf6tbp4icz,0.28335887136412713,-90.11384680252803,-42.618344557073925

3673008_20201_2_0,yfj5oo4icz,-3.918153535869909,-126.91734045601407,3.91435901003301

1647790_20201_2_0,yh4s5o4icz,-0.7232939487789917,-97.17488533830277,-24.60805967681209

2311311_20201_2_0,yhueln4icz,-2.827267251532949,-105.3933182441153,-20.386006998085506

1177485_20201_2_0,yih7fp4icz,0.2439921657605329,-89.06856646889236,-23.111637458910494

2292301_20201_2_0,yiidtn4icz,-0.9767185146280035,-68.95608757343803,-44.64108814686314

4264331_20201_2_0,yiitzo4icz,3.1775749830096585,-87.91185959481737,-46.377799770029895

5517244_20201_2_0,yk0qao4icz,0.48746372481198325,-105.80324399306338,-33.323783228214566

4790692_20201_2_0,ykuinn4icz,-0.14891833124628437,-91.7316347143489,-42.97067565240182

1113777_20201_2_0,ylq9cp4icz,0.2619380818302699,-136.4598246607451,254.24095317677396

1579565_20201_2_0,ym67dp4icz,-1.1676282082512217,-108.26619051249654,-38.15868150323351

1091664_20201_2_0,ymjc1o4icz,-0.8397186453263619,-106.0575559686155,-26.952924889720876

4258024_20201_2_0,yn6mdp4icz,-1.2866444304488445,-127.34781772308511,-56.080034176028235

2589539_20201_2_0,ynpv5o4icz,3.5115967031344226,-92.68480521330105,-41.87414858383772

5352591_20201_2_0,yonefp4icz,-0.6907859313933971,-71.59426065175424,-37.68378699115652

3473989_20201_2_0,yq21vn4icz,-4.214614108588034,-129.26565671098913,-14.453160969513831

4872620_20201_2_0,yqvljn4icz,-0.46309377489056397,-144.57155108560636,-22.30113190002379

5122600_20201_2_0,yqxobp4icz,-0.10270709445321907,-111.33173093526244,-45.125757859338734

1753072_20201_2_0,yryw8n4icz,0.6361471619308802,-62.29659447282796,-39.67518807581348

1917127_20201_2_0,ys0ueo4icz,-1.1125568856273609,-94.90292129422639,-24.712780655165076

1734263_20201_2_0,yt1r7p4icz,-3.57139564051537,-103.90327509038971,-23.686335114088877

1258756_20201_2_0,ytbzqo4icz,0.7507870972575782,-95.51036513958508,-37.28266212804694

2277914_20201_2_0,yti3nn4icz,-3.7972758817006014,-119.56526233365906,-4.063507173844272

3785412_20201_2_0,ytqesn4icz,-1.992131297936861,-93.72827593438143,-28.93882395967219

3552236_20201_2_0,ytz0ep4icz,-0.09385776568789013,-77.06829717138788,-45.935784682501364

4744870_20201_2_0,yv6dyn4icz,0.13153414590563398,-128.07711545785543,-36.31433041823138

3137331_20201_2_0,ywnhto4icz,-1.4185376104331153,-100.23680853857101,-25.468440149196297

1770438_20201_2_0,yxlkcp4icz,1.7060651395809732,-56.736847560402964,-55.26276447815545

4866724_20201_2_0,yycksn4icz,-0.15853187875211644,-129.9463170713885,-46.681295787231036

1326785_20201_2_0,yygiuo4icz,-0.6782976054671835,-86.7762899933158,-45.610534131526464

5045654_20201_2_0,z0qqep4icz,-3.1689536399917126,-103.39669588993999,-26.698309548079493

5244814_20201_2_0,z1ehko4icz,0.9429692566140172,-92.56541574896701,-33.25815347871914

2265541_20201_2_0,z1fe8n4icz,-1.2958423452782208,-99.62987268246673,-38.314830406932614

1624238_20201_2_0,z1o9co4icz,-0.8599593858713743,-122.12548139590177,-31.081990274513373

1944264_20201_2_0,z1pxen4icz,-5.4920842291540755,-101.64098819945721,-4.9586059615196945

3032810_20201_2_0,z2qrfp4icz,0.9238148827244763,-101.01382390259673,-31.18685323190431

5241091_20201_2_0,z3d1bp4icz,-1.4945382242985406,-135.8149855772209,-31.361486834504774

1750594_20201_2_0,z3h0rn4icz,-2.319050666147884,-142.47471373287317,-18.505749024951783

4702107_20201_2_0,z3zw6o4icz,-0.0066536329536563375,-118.08204747110534,-27.894437368316318

5937224_20201_2_0,z4sgun4icz,-0.3986406196446111,-103.60344581929343,-52.59020393204089

4766526_20201_2_0,z5lamo4icz,-4.433110545085331,-94.87596561621115,-6.208857436146758

2256017_20201_2_0,z5ziyn4icz,-0.0036061759955821945,-138.93248089107328,-26.63264003920267

4946591_20201_2_0,z75lpn4icz,1.2104193147375746,-78.23475253701136,-39.72308353818346

4731100_20201_2_0,z7lhgo4icz,-0.8317883083300552,-110.3820409627402,-32.004842661307606

5652610_20201_2_0,z88hep4icz,-11.866913185242552,-130.59294596987073,44.20688257553775

4102485_20201_2_0,z8ryon4icz,-3.562252188764472,-71.31489125070274,-19.479492398093214

5505862_20201_2_0,z9mkfp4icz,-0.2592177466173511,-78.04254261128031,-26.429843161358136

2334608_20201_2_0,z9sdgp4icz,-3.421962248705338,-124.77604480425822,-14.12801938842037

5366794_20201_2_0,zb0djn4icz,0.758637744982692,-123.4257607929438,-46.71210717700359

3325730_20201_2_0,zc9iip4icz,-1.3121789150554184,-138.22206630324894,-26.131057366026397

3974745_20201_2_0,zc9zpn4icz,-0.5738442269730735,-137.74726198591728,-23.47157463543178

2601635_20201_2_0,zcn07o4icz,3.2213240947287067,-59.20018952156502,-39.12168524812951

2179876_20201_2_0,zd0p9p4icz,-2.34799368451668,-152.03605082118648,-22.205606623148142

2442831_20201_2_0,zd1oeo4icz,1.6872940996726686,-75.45376543369576,-35.62078069127108

4954650_20201_2_0,zdks0p4icz,-2.767419587736013,-51.91941513524432,-11.542778474694757

4779643_20201_2_0,zg1sjp4icz,-0.17247544550679725,-150.9056041236484,-46.24005695293603

4952740_20201_2_0,zg5gbp4icz,-4.181894107377936,-86.63914395578126,-8.784245802848119

2405730_20201_2_0,zhewwo4icz,0.7573635753954916,-90.23689313314475,-26.9274815209221

1102732_20201_2_0,zhf0wo4icz,0.3767139144992867,-74.1197769468638,-24.929127378425477

1822187_20201_2_0,zi5fuo4icz,1.3197627987723668,-66.30738441675476,-48.16481903591867

3957693_20201_2_0,zio7ho4icz,-3.252207557257917,-99.07254386205506,-41.0790513435434

1079865_20201_2_0,zioqto4icz,-0.5905056954723424,-125.64331000068964,-42.789443849960236

4634340_20201_2_0,zjhrsn4icz,1.8315305558965735,-72.80317260189543,-60.893657664931155

5786041_20201_2_0,zjwsip4icz,2.559424996853425,-68.31041526944634,-39.44604627983382

2970160_20201_2_0,zkb39p4icz,-1.0403577988008277,-126.52654372727685,-39.728545463797786

4773348_20201_2_0,zkigan4icz,-5.020699321430171,-148.93585550333415,-30.310050514257398

2557519_20201_2_0,zldn9o4icz,-1.664755825782779,-74.55342910028997,-41.690543705533045

5796160_20201_2_0,zlncxo4icz,-1.3864547339931732,-118.98953858693397,-16.17821099733382

2518131_20201_2_0,zm5atn4icz,-1.278048186313368,-106.41322115985506,-34.95854911561845

3974396_20201_2_0,zn7vip4icz,0.5262653621179881,-104.35145572639436,-44.08075718059871

2131477_20201_2_0,zo8olo4icz,-3.580674711200488,-133.5751801382155,-9.731709312294129

3707022_20201_2_0,zoswdp4icz,-0.7107402016279487,-104.73136292100125,-35.74340309192431

4443648_20201_2_0,zp4rip4icz,3.3128345042989906,-122.19978381877073,-55.51772726216009

5942170_20201_2_0,zp7l0o4icz,-0.18255606786508197,-73.48112505643562,-39.48821785418727

2724406_20201_2_0,zpn1vo4icz,2.52194813657109,-93.10191723804351,-40.78757279294179

5540950_20201_2_0,zpr6do4icz,-1.9234442888710401,-75.20725402076687,-31.955495848579062

2549524_20201_2_0,zpycnn4icz,0.9201150704537567,-79.76762494153263,-53.578763705433005

1611858_20201_2_0,zqzljo4icz,-1.6046314805160609,-102.0116595606872,-28.920612306644927

1019965_20201_2_0,zr4xfo4icz,1.3106461502644364,-78.66652299742975,-43.09862215903772

2582888_20201_2_0,zr7hgp4icz,1.3719102655669786,-87.930064778347,-33.20273631185158

3286612_20201_2_0,zrnxen4icz,1.2264764073317564,-89.36005459350034,-41.59687788793802

1527966_20201_2_0,zrusvn4icz,-1.5288560146355585,-98.96211799460616,-11.742297455563431

4887114_20201_2_0,zs3nro4icz,-1.907572109535042,-121.91297384839564,-17.607359807808393

4261692_20201_2_0,zsbf7p4icz,1.2524269566508877,-79.63118203278862,-47.5695237188157

2974927_20201_2_0,zumtfp4icz,-2.829649906438341,-131.9448546189908,-27.682349644323935

6000771_20201_2_0,zuwtep4icz,-2.170735524757644,-76.35738691455782,-14.524735235570944

3095379_20201_2_0,zxuudo4icz,-2.0386752758001263,-105.9944059417881,-17.253065865132157

1371874_20201_2_0,m5hj9o4icz,-1.5724208671340265,-70.26114964297807,-26.282457181843796

/users/rhydian/anaconda3/envs/torch_env/lib/python3.7/site-packages/torch/cuda/__init__.py:52: UserWarning: CUDA initialization: Found no NVIDIA driver on your system. Please check that you have an NVIDIA GPU and installed a driver from http://www.nvidia.com/Download/index.aspx (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729006826/work/c10/cuda/CUDAFunctions.cpp:100.)
  return torch._C._cuda_getDeviceCount() > 0
  0%|          | 0/102 [00:00<?, ?it/s]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  1%|          | 1/102 [00:02<04:24,  2.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  2%|▏         | 2/102 [00:04<04:00,  2.41s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  3%|▎         | 3/102 [00:07<04:21,  2.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  4%|▍         | 4/102 [00:09<03:55,  2.40s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  5%|▍         | 5/102 [00:11<03:39,  2.26s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  6%|▌         | 6/102 [00:13<03:24,  2.13s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  7%|▋         | 7/102 [00:14<03:09,  1.99s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  8%|▊         | 8/102 [00:19<04:04,  2.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
  9%|▉         | 9/102 [00:20<03:37,  2.34s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 10%|▉         | 10/102 [00:22<03:26,  2.25s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 11%|█         | 11/102 [00:24<03:04,  2.02s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 12%|█▏        | 12/102 [00:26<03:15,  2.17s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 13%|█▎        | 13/102 [00:28<02:53,  1.95s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 14%|█▎        | 14/102 [00:30<02:50,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 15%|█▍        | 15/102 [00:32<02:59,  2.06s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 16%|█▌        | 16/102 [00:34<02:46,  1.94s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 17%|█▋        | 17/102 [00:35<02:31,  1.78s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 18%|█▊        | 18/102 [00:37<02:28,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 19%|█▊        | 19/102 [00:39<02:30,  1.81s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 20%|█▉        | 20/102 [00:42<03:06,  2.27s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 21%|██        | 21/102 [00:43<02:42,  2.00s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 22%|██▏       | 22/102 [00:45<02:27,  1.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 23%|██▎       | 23/102 [00:47<02:26,  1.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 24%|██▎       | 24/102 [00:49<02:44,  2.11s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▍       | 25/102 [00:51<02:29,  1.95s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 25%|██▌       | 26/102 [00:55<03:20,  2.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 26%|██▋       | 27/102 [00:57<03:00,  2.40s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 27%|██▋       | 28/102 [00:59<02:55,  2.38s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 28%|██▊       | 29/102 [01:01<02:40,  2.19s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 29%|██▉       | 30/102 [01:03<02:21,  1.97s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 30%|███       | 31/102 [01:04<02:10,  1.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 31%|███▏      | 32/102 [01:07<02:20,  2.01s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 32%|███▏      | 33/102 [01:08<02:07,  1.85s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 33%|███▎      | 34/102 [01:10<02:00,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 34%|███▍      | 35/102 [01:11<01:52,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 35%|███▌      | 36/102 [01:13<01:52,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 36%|███▋      | 37/102 [01:15<01:50,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 37%|███▋      | 38/102 [01:16<01:43,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 38%|███▊      | 39/102 [01:18<01:42,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 39%|███▉      | 40/102 [01:19<01:40,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 40%|████      | 41/102 [01:21<01:40,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 41%|████      | 42/102 [01:23<01:50,  1.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 42%|████▏     | 43/102 [01:29<02:50,  2.90s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 43%|████▎     | 44/102 [01:30<02:23,  2.47s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 44%|████▍     | 45/102 [01:32<02:05,  2.20s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 45%|████▌     | 46/102 [01:34<02:00,  2.15s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 46%|████▌     | 47/102 [01:35<01:45,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 47%|████▋     | 48/102 [01:37<01:39,  1.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 48%|████▊     | 49/102 [01:39<01:37,  1.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 49%|████▉     | 50/102 [01:40<01:32,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 50%|█████     | 51/102 [01:42<01:31,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 51%|█████     | 52/102 [01:44<01:29,  1.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 52%|█████▏    | 53/102 [01:46<01:26,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 53%|█████▎    | 54/102 [01:47<01:21,  1.71s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 54%|█████▍    | 55/102 [01:49<01:16,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 55%|█████▍    | 56/102 [01:53<01:47,  2.34s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 56%|█████▌    | 57/102 [01:54<01:35,  2.12s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 57%|█████▋    | 58/102 [01:56<01:27,  1.99s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 58%|█████▊    | 59/102 [01:58<01:21,  1.89s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 59%|█████▉    | 60/102 [01:59<01:12,  1.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 60%|█████▉    | 61/102 [02:00<01:06,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 61%|██████    | 62/102 [02:02<01:04,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 62%|██████▏   | 63/102 [02:04<01:03,  1.63s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 63%|██████▎   | 64/102 [02:05<01:03,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 64%|██████▎   | 65/102 [02:07<01:05,  1.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 65%|██████▍   | 66/102 [02:09<01:01,  1.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 66%|██████▌   | 67/102 [02:10<00:59,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 67%|██████▋   | 68/102 [02:12<00:52,  1.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 68%|██████▊   | 69/102 [02:13<00:52,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 69%|██████▊   | 70/102 [02:15<00:50,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 70%|██████▉   | 71/102 [02:17<00:50,  1.64s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 71%|███████   | 72/102 [02:18<00:47,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 72%|███████▏  | 73/102 [02:20<00:46,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 73%|███████▎  | 74/102 [02:21<00:45,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 74%|███████▎  | 75/102 [02:23<00:43,  1.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▍  | 76/102 [02:25<00:43,  1.66s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 75%|███████▌  | 77/102 [02:27<00:42,  1.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 76%|███████▋  | 78/102 [02:28<00:39,  1.65s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 77%|███████▋  | 79/102 [02:30<00:36,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 78%|███████▊  | 80/102 [02:31<00:35,  1.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 79%|███████▉  | 81/102 [02:33<00:33,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 80%|████████  | 82/102 [02:35<00:34,  1.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 81%|████████▏ | 83/102 [02:36<00:31,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 82%|████████▏ | 84/102 [02:38<00:28,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 83%|████████▎ | 85/102 [02:39<00:26,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 84%|████████▍ | 86/102 [02:41<00:25,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 85%|████████▌ | 87/102 [02:42<00:23,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 86%|████████▋ | 88/102 [02:44<00:21,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 87%|████████▋ | 89/102 [02:46<00:20,  1.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 88%|████████▊ | 90/102 [02:47<00:18,  1.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 89%|████████▉ | 91/102 [02:49<00:17,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 90%|█████████ | 92/102 [02:50<00:14,  1.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 91%|█████████ | 93/102 [02:52<00:13,  1.49s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 92%|█████████▏| 94/102 [02:53<00:12,  1.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 93%|█████████▎| 95/102 [02:55<00:11,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 94%|█████████▍| 96/102 [02:58<00:11,  1.93s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 95%|█████████▌| 97/102 [02:59<00:08,  1.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 96%|█████████▌| 98/102 [03:01<00:06,  1.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 97%|█████████▋| 99/102 [03:02<00:04,  1.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 98%|█████████▊| 100/102 [03:04<00:03,  1.59s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
 99%|█████████▉| 101/102 [03:06<00:01,  1.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
100%|██████████| 102/102 [03:08<00:00,  1.82s/it]100%|██████████| 102/102 [03:08<00:00,  1.84s/it]
Trying to load from /users/rhydian/self-supervised-project/model_weights/SSECEncodersBothBoth
==> Resuming model trained for 106 epochs...
Trying to load from ../model_weights/angle_regressor4
==> Resuming model trained for 7 epochs...
3791424_20201_2_0,2y8hcp4icz,-3.4242042207949206,-100.92480934781847,-24.366454448826772

4591498_20201_2_0,y2hm5o4icz,-0.4063734250881399,-120.6958314581857,-40.439862555388515

3326146_20201_2_0,y47p0p4icz,-0.014381065409875866,-71.42214112400461,-26.263172345600566

4255341_20201_2_0,y5lswo4icz,-1.3691107003718885,-74.18758377099743,-27.06816519424632

4080483_20201_2_0,y6150p4icz,1.093448580375232,-81.7297852725425,-41.54387805690175

4662770_20201_2_0,y694rn4icz,-3.8533458860558736,-107.81645845520961,-28.897199188488855

2365184_20201_2_0,y6au9n4icz,6.185781029966017,-62.47867892106677,-81.05339948996226

2835455_20201_2_0,y6bmhp4icz,2.2337458676325843,-112.82955115754524,-63.04671294003646

3571260_20201_2_0,y6tp6o4icz,-1.3260318430557791,-65.69374506885717,-35.76345715374946

5162513_20201_2_0,y7v9wo4icz,0.09093307131605464,-92.6520622870975,-34.391043019175015

1717941_20201_2_0,y85iko4icz,3.0336923531151387,-130.52867974544688,-37.48844136820301

4148351_20201_2_0,y8jwko4icz,-0.8826363930634485,-65.22712329067514,-44.276415276880044

2424416_20201_2_0,y8uu0p4icz,-0.05990101988640769,-87.01432082884708,-27.444214097487006

2109907_20201_2_0,y8w9pn4icz,-0.6831741359572912,-114.42878620983143,-46.5474295051052

3266076_20201_2_0,y98a8n4icz,-0.7403272394206334,-104.27811768975678,-25.715238806371495

2234668_20201_2_0,ya6bao4icz,-0.27281336347251967,-100.06354369733671,-53.874643329013026

1749412_20201_2_0,ybpybp4icz,2.8458025113576797,-86.54273022422271,-67.44573506450591

4000613_20201_2_0,ybzxpo4icz,4.868531393731102,-86.01852007803461,-54.94662456308552

1840239_20201_2_0,ycyj2p4icz,0.5289981991950844,-27.394674104514706,-36.151502012103734

3640551_20201_2_0,yddzjn4icz,-1.105823577404462,-81.63481195756549,-28.7533071302756

4461437_20201_2_0,yfuh0p4icz,-3.2141993596181133,-149.06801159990547,-11.276781197670815

1783983_20201_2_0,yg7ocp4icz,-2.092489021285014,-112.87813647919162,-18.01103449541094

2597130_20201_2_0,yjihgp4icz,-1.2159339053971405,-116.63040070406106,-38.34622398680128

2503336_20201_2_0,yk809n4icz,-2.4755814226120774,-98.51400145499747,-17.64479561086928

3303572_20201_2_0,ylglkn4icz,-2.243761948452764,-129.88814921430645,-5.001298979112221

2792920_20201_2_0,ylupcn4icz,-0.1029292268985089,-76.15912900536344,-31.5464594748735

2256875_20201_2_0,ymm4po4icz,1.5960414524155395,-79.28674554885242,-41.85171939548417

1727301_20201_2_0,yn0e9p4icz,-0.4952875259612203,-129.6462909988806,-42.44387767752616

5247817_20201_2_0,ypqy4o4icz,-1.0538875444956208,-125.44057075708358,-34.11686781026728

5357304_20201_2_0,yq50sn4icz,-0.17348871116062717,-121.75516318821332,-41.23312253882132

3834593_20201_2_0,yqcscp4icz,1.6070180692143088,-77.98276453812403,-34.0099331398459

5113289_20201_2_0,yql4bp4icz,-0.8211237428549797,-88.72612273973527,-32.31577710398281

3426891_20201_2_0,yrkghp4icz,-0.5587361431533515,-109.9926960711393,-44.93019886692717

2909123_20201_2_0,yryaxo4icz,-1.0996081256929593,-88.64299109093659,-27.959641299208926

5143867_20201_2_0,ys39xo4icz,0.4814192635971343,-68.73805436264195,-61.8639318017222

3109354_20201_2_0,yspxhp4icz,5.649576024806557,-94.77779687989604,-73.12700685262985

1410022_20201_2_0,ysslko4icz,-0.17446306123843502,-73.62465903506003,-42.90658192181692

4217332_20201_2_0,yst3hp4icz,-6.448527711238054,-73.96778371994364,-6.375583455071975

4071682_20201_2_0,yt95dp4icz,-0.677611512222493,-119.5568818833853,-14.04446160436919

4634485_20201_2_0,yu43kp4icz,1.7141290082715583,-68.7347214589679,-48.15151391908678

4147342_20201_2_0,yud3so4icz,-1.3696738110924844,-72.18058812895524,-30.054723476570345

4260560_20201_2_0,yuecdp4icz,2.202630623073675,-92.03062352492958,-41.726764858317964

1012907_20201_2_0,yuzajo4icz,1.214226367265772,-75.16927931224936,-47.557861158624576

4350925_20201_2_0,yx92jp4icz,-0.04023369739015016,-103.08952601262968,-64.72169076051016

2404593_20201_2_0,yxakwn4icz,5.341730049660155,-106.33199027215363,-66.94108090347063

4659691_20201_2_0,2gjkao4icz,3.1322427842030938,-142.1690496069721,-58.30246092843048

4868550_20201_2_0,yxzb9o4icz,-0.6627695357364481,-108.76893641469974,-22.652709045904842

3384176_20201_2_0,yy42nn4icz,8.416409629573542,-74.69964783554241,-78.63040157108978

2670480_20201_2_0,yycbeo4icz,1.1100134300605176,-76.5343162624132,-40.81747177123961

4192960_20201_2_0,yynu9o4icz,-1.5168638185309216,-96.39856397756844,-24.86079938976286

4657171_20201_2_0,yz8dzo4icz,-1.3566804590450385,-131.46828312770631,-44.53143661846484

3357501_20201_2_0,z1fsyo4icz,-0.5626478843613771,-126.26947415632472,-44.90591800369529

2483158_20201_2_0,z1o88o4icz,0.602576750388968,-44.07326526195561,-41.20104805472123

3782396_20201_2_0,z1u2ro4icz,2.8027016984811945,-83.9344459373255,-44.353227632995086

4203954_20201_2_0,z2ctao4icz,1.6128140477037176,-51.65461808348496,-41.49835090150536

1192066_20201_2_0,z2flxn4icz,-36.096620835242206,-94.0528009503985,176.01515916380987

5182025_20201_2_0,z2hkgn4icz,0.7816056544986302,-76.68681903321334,-54.997213050387046

3374223_20201_2_0,z3eq0o4icz,1.1517686031461098,-64.4582602867981,-62.442409160296194

5797568_20201_2_0,z3q5zo4icz,2.291614686949356,-119.83969160657361,-42.87124411510678

5573886_20201_2_0,z4130p4icz,-2.1545956570766243,-45.421260310847174,-38.72274076484935

2677073_20201_2_0,z434ap4icz,-2.3846711606678106,-71.97984810237804,-36.48766014718022

4680047_20201_2_0,z4o00p4icz,-0.9123330838231878,-30.019054965747955,-27.38406550761323

4517631_20201_2_0,z71xdp4icz,-0.28738410956607935,-105.72311000991243,-41.70625218778517

1172158_20201_2_0,z810xo4icz,-2.1030347626406014,-60.31251337099019,-28.238457717381223

3977877_20201_2_0,za9hep4icz,2.5775049686450004,-68.00190435118938,-68.82143081080655

1859509_20201_2_0,zacw7o4icz,3.3264657937645183,-104.03734990463016,-48.58775703476397

3963118_20201_2_0,zalzpn4icz,-2.6291610686780045,-122.03281020508206,-27.409691810116144

4620840_20201_2_0,zbv2gp4icz,2.685397513420674,-120.08859628495608,-36.929324532451474

5502432_20201_2_0,zcel0p4icz,7.878810577516601,-112.18038235404975,-78.15470413895648

1472634_20201_2_0,zcoeap4icz,-4.3952742783449645,-106.00169885698284,-22.66312304252726

2843322_20201_2_0,zd7zfp4icz,-6.853211101291875,-134.33699542201694,-29.843501557228606

2679630_20201_2_0,zdm4io4icz,2.465669761315061,-95.65519111049542,-54.45334430090705

1066335_20201_2_0,zdsmhp4icz,-6.178673715780353,-103.56608402478807,-10.89656820852035

4546803_20201_2_0,zel2no4icz,-6.998007336888552,-144.2045526224723,2.665099967886988

5375761_20201_2_0,zemczo4icz,0.14740364183167456,-90.42344193097205,-31.731354076806866

5498191_20201_2_0,zfi7nn4icz,-0.16531718836966977,-80.89689989256402,-31.73887736117851

2424398_20201_2_0,zfqcfp4icz,4.06960894016115,-66.35463313009294,-59.58241991627369

2924486_20201_2_0,zfx9yo4icz,2.7939985624302235,-81.59213101925556,-34.82341028780952

1612538_20201_2_0,zgg4ko4icz,1.0701185690826869,-80.85662059613483,-42.5773939050904

4355736_20201_2_0,zi7sap4icz,0.6099282258713148,-118.49343850305837,-47.32937737340988

3826517_20201_2_0,ziop2p4icz,-3.9190078547320466,-111.81157465633214,-38.55318346814347

5927370_20201_2_0,zja56p4icz,-0.029288561859913343,-110.20655579615618,-22.616364764928193

2392393_20201_2_0,zjd2in4icz,0.3767986673866774,-121.31785392859831,-46.43541728093584

2209051_20201_2_0,zjhvln4icz,0.6526900514092497,-130.3629136119883,-47.116931541579916

5529721_20201_2_0,zk2ygo4icz,-7.035337554938066,-146.54971905850613,22.356186506859274

4232558_20201_2_0,zkanyo4icz,-0.5753490611764652,-137.79396196898688,-15.24034069907178

3080620_20201_2_0,znnkcn4icz,-0.025866960464777575,-77.10130655419505,-32.603032772728994

5828571_20201_2_0,zo0ebn4icz,-2.6616611354070447,-134.25514423829733,-23.310083783199985

1740564_20201_2_0,zobz9n4icz,1.0331406801496195,-87.63646387559447,-47.894885326531664

3348373_20201_2_0,zpmwbo4icz,6.627250134437077,-95.41637662419973,-73.77715566271449

2894546_20201_2_0,zpvfgo4icz,2.187223795171004,-114.44496670039928,-58.940722340148426

3033651_20201_2_0,zpwgin4icz,0.7055179810102044,-78.73438590025938,-28.77627600560038

3442525_20201_2_0,zqdr6o4icz,2.2130024064131413,-67.33753372410493,-48.118064639757364

1323133_20201_2_0,zr6nxn4icz,-0.41260421295069083,-112.92751870284815,-31.55840260338985

2861360_20201_2_0,zraafn4icz,-3.1894582350950422,-136.4283336287384,-15.81911238051623

2331904_20201_2_0,zsixhp4icz,2.2431839079645632,-89.20171687785844,-46.80587122219376

4484767_20201_2_0,zuggho4icz,1.428023594372751,-137.14343461942977,-26.44780649785622

5903639_20201_2_0,zvrqbo4icz,0.09215214752504725,-85.0699807912402,-26.419805502876642

1971145_20201_2_0,zwppxn4icz,1.3655451195902584,-89.8353849299915,-48.20613769065588

2263739_20201_2_0,zwy9go4icz,1.019691682271359,-90.02222668806331,-39.340787066962406

5725262_20201_2_0,e6meao4icz,0.9296462458288739,-111.79005638689955,-25.25665371474703

5951193_20201_2_0,4t2own4icz,-0.38522510504658,-95.98887103851337,-28.66433194060791

